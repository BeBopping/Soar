sp {answer*chunk-puzzle-impasse*apply*complete*StateNoChange*t3822-2
        (state <s1> ^retrieve-game eight-puzzle1 -^opponent <o*1>)
    -->
    (<s1> ^retrieve-handle action-default42 +)
}

sp {answer*chunk-puzzle-impasse*apply*complete*StateNoChange*t3822-1
        (state <s1> ^retrieve-game eight-puzzle1 -^opponent <o*1>)
    -->
    (<s1> ^retrieve-handle goal-default52 +)
}

sp {answer*chunk-predicate-impasse*apply*complete*action*StateNoChange*t3711-1
        (state <s1> ^gtype goal ^retrieve-handle goal-default52)
    -->
    (<s1> ^goal <p1> +)
    (<p1> ^potential-args <p2> + ^parameter-set <p3> + ^formated predicate +
           ^primary-rtype set + ^nlp-set <l24> + ^aname goal-default52 +
           ^handle goal-default52 +)
    (<p3> ^argnum 2 +)
    (<l24> ^conditions <l1> + ^conditions <l25> + ^aname goal-default52 +)
    (<l1> ^function soar-count + ^return-type number + ^args <l2> +
           ^result <l19> + ^rtype single + ^parameter <l21> +
           ^negative false + ^name count + ^type function +)
    (<l2> ^num 1 + ^2 <l14> +)
    (<l14> ^args <l3> + ^attribute predicate + ^result <l15> + ^rtype set +
           ^parameter <l17> + ^negative false + ^name matched +
           ^type concept +)
    (<l3> ^num 1 + ^1 <l10> +)
    (<l10> ^args <l4> + ^attribute category + ^result <l11> + ^rtype single +
           ^parameter <l13> + ^negative false + ^name location +
           ^type attribute +)
    (<l4> ^num 1 + ^1 <l5> +)
    (<l5> ^args <l6> + ^attribute primitive + ^result <l7> + ^rtype single +
           ^parameter <l9> + ^negative false + ^name object +
           ^type attribute +)
    (<l7> ^set <l8> +)
    (<l9> ^num 0 +)
    (<l11> ^set <l12> +)
    (<l13> ^num 0 +)
    (<l15> ^set <l16> +)
    (<l17> ^num 1 + ^1 <l18> +)
    (<l18> ^param-id 1 + ^type set +)
    (<l19> ^set <l20> +)
    (<l21> ^num 2 + ^1 <l22> + ^2 <l23> +)
    (<l22> ^param-id 2 + ^type single +)
    (<l23> ^param-id 1 + ^type set +)
    (<l25> ^return-type number + ^args <l26> + ^result <l29> + ^rtype single +
           ^parameter <l30> + ^negative false + ^name number +)
    (<l29> ^set <l28> +)
    (<l28> ^instance <l27> +)
    (<l27> ^1 8 +)
    (<l30> ^num 1 + ^1 <l31> +)
    (<l31> ^param-id 2 + ^type single +)
    (link-stm-to-ltm <l1> 1000347)
    (link-stm-to-ltm <l2> 1000350)
    (link-stm-to-ltm <l3> 1000361)
    (link-stm-to-ltm <l4> 1000369)
    (link-stm-to-ltm <l5> 1000372)
    (link-stm-to-ltm <l6> 1000375)
    (link-stm-to-ltm <l7> 1000374)
    (link-stm-to-ltm <l8> 1000376)
    (link-stm-to-ltm <l9> 1000373)
    (link-stm-to-ltm <l10> 1000367)
    (link-stm-to-ltm <l11> 1000370)
    (link-stm-to-ltm <l12> 1000371)
    (link-stm-to-ltm <l13> 1000368)
    (link-stm-to-ltm <l14> 1000358)
    (link-stm-to-ltm <l15> 1000363)
    (link-stm-to-ltm <l16> 1000365)
    (link-stm-to-ltm <l17> 1000362)
    (link-stm-to-ltm <l18> 1000366)
    (link-stm-to-ltm <l19> 1000351)
    (link-stm-to-ltm <l20> 1000357)
    (link-stm-to-ltm <l21> 1000349)
    (link-stm-to-ltm <l22> 1000360)
    (link-stm-to-ltm <l23> 1000359)
    (link-stm-to-ltm <l24> 1000346)
    (link-stm-to-ltm <l25> 1000348)
    (link-stm-to-ltm <l26> 1000353)
    (link-stm-to-ltm <l27> 1000364)
    (link-stm-to-ltm <l28> 1000355)
    (link-stm-to-ltm <l29> 1000354)
    (link-stm-to-ltm <l30> 1000352)
    (link-stm-to-ltm <l31> 1000356)
}

sp {answer*soar-count*apply*complete*t3699-1
        (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c4> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <n1>)
    (<n1> ^function soar-count ^type function ^args <a1> ^parameter <p1>
          ^negative <c1> ^result <r2> ^name <c2>)
    (<a1> ^num 1 ^2 <c3>)
    (<p1> ^num 2)
    (<c3> ^rtype set ^result <r1>)
    (<r2> ^set <p3>)
    (<r1> ^set <p2>)
    (<p2> ^instance <i1>)
    (<i1> ^1 <i2>)
   -{ (<i2> -^<something> <s*3>)
      (<s1> ^<a*1> <v*1>)}
    -->
    (<p3> ^instance <p4> +)
    (<p4> ^1 (size <i2>) + ^2 <i2> +)
}

sp {answer*chunk-predicate-impasse*apply*complete*StateNoChange*t3690-1
        (state <s1> ^gtype <c2> ^<c2> <g1>)
    (<g1> ^condition <c1>)
    (<c1> ^name matched ^type concept ^attribute predicate)
    -->
    (<s1> ^predicate <p1> + ^gtype predicate +)
    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
           ^formated predicate + ^primary-rtype single + ^nlp-set <l9> +
           ^aname matched + ^handle matched +)
    (<p3> ^argnum 3 +)
    (<l9> ^conditions <l1> + ^conditions <l10> + ^conditions <l33> +
           ^aname matched +)
    (<l1> ^return-type number + ^args <l2> + ^result <l4> + ^rtype single +
           ^parameter <l6> + ^negative false + ^name color +
           ^type attribute-of +)
    (<l2> ^num 1 + ^2 <l3> +)
    (<l4> ^set <l5> +)
    (<l6> ^num 2 + ^1 <l7> + ^2 <l8> +)
    (<l7> ^param-id 3 + ^type single +)
    (<l8> ^param-id 2 + ^type single +)
    (<l10> ^return-type number + ^args <l11> + ^result <l13> + ^rtype single +
           ^parameter <l15> + ^negative false + ^name color +
           ^type attribute-of +)
    (<l11> ^num 1 + ^2 <l12> +)
    (<l13> ^set <l14> +)
    (<l15> ^num 2 + ^1 <l16> + ^2 <l17> +)
    (<l16> ^param-id 3 + ^type single +)
    (<l17> ^param-id 1 + ^type single +)
    (<l3> ^args <l19> + ^attribute category + ^result <l25> + ^rtype single +
           ^parameter <l27> + ^negative false + ^name block +
           ^type attribute +)
    (<l19> ^num 1 + ^1 <l20> +)
    (<l20> ^args <l21> + ^attribute primitive + ^result <l22> +
           ^rtype single + ^parameter <l24> + ^negative false + ^name object +
           ^type attribute +)
    (<l22> ^set <l23> +)
    (<l24> ^num 0 +)
    (<l25> ^set <l26> +)
    (<l27> ^num 0 +)
    (<l12> ^args <l28> + ^attribute input-arg + ^result <l29> +
           ^rtype single + ^parameter <l31> + ^negative false + ^name object +)
    (<l29> ^set <l30> +)
    (<l31> ^num 1 + ^1 <l32> +)
    (<l32> ^param-id 1 + ^type single +)
    (<l33> ^args <l18> + ^attribute prepositions + ^result <l34> +
           ^rtype single + ^parameter <l36> + ^negative false + ^name on1 +
           ^type state-pair +)
    (<l18> ^num 2 + ^1 <l3> + ^2 <l12> +)
    (<l34> ^set <l35> +)
    (<l36> ^num 2 + ^1 <l37> + ^2 <l38> +)
    (<l37> ^param-id 2 + ^type single +)
    (<l38> ^param-id 1 + ^type single +)
    (link-stm-to-ltm <l1> 1000307)
    (link-stm-to-ltm <l2> 1000311)
    (link-stm-to-ltm <l3> 1000321)
    (link-stm-to-ltm <l4> 1000312)
    (link-stm-to-ltm <l5> 1000327)
    (link-stm-to-ltm <l6> 1000310)
    (link-stm-to-ltm <l7> 1000329)
    (link-stm-to-ltm <l8> 1000328)
    (link-stm-to-ltm <l9> 1000306)
    (link-stm-to-ltm <l10> 1000308)
    (link-stm-to-ltm <l11> 1000314)
    (link-stm-to-ltm <l12> 1000320)
    (link-stm-to-ltm <l13> 1000315)
    (link-stm-to-ltm <l14> 1000324)
    (link-stm-to-ltm <l15> 1000313)
    (link-stm-to-ltm <l16> 1000326)
    (link-stm-to-ltm <l17> 1000325)
    (link-stm-to-ltm <l18> 1000317)
    (link-stm-to-ltm <l19> 1000331)
    (link-stm-to-ltm <l20> 1000339)
    (link-stm-to-ltm <l21> 1000342)
    (link-stm-to-ltm <l22> 1000341)
    (link-stm-to-ltm <l23> 1000343)
    (link-stm-to-ltm <l24> 1000340)
    (link-stm-to-ltm <l25> 1000332)
    (link-stm-to-ltm <l26> 1000338)
    (link-stm-to-ltm <l27> 1000330)
    (link-stm-to-ltm <l28> 1000334)
    (link-stm-to-ltm <l29> 1000335)
    (link-stm-to-ltm <l30> 1000336)
    (link-stm-to-ltm <l31> 1000333)
    (link-stm-to-ltm <l32> 1000337)
    (link-stm-to-ltm <l33> 1000309)
    (link-stm-to-ltm <l34> 1000318)
    (link-stm-to-ltm <l35> 1000319)
    (link-stm-to-ltm <l36> 1000316)
    (link-stm-to-ltm <l37> 1000323)
    (link-stm-to-ltm <l38> 1000322)
}

sp {answer*attribute-of*apply*complete*t3331-1
        (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <n1>)
    (<n1> ^type attribute-of ^args <a1> ^parameter <p1> ^negative <c1>
          ^result <r3> ^result <r1> ^name <c2>)
    (<a1> ^num 1 ^2 <c3>)
    (<p1> ^num 2)
    (<c3> -^rtype set ^result <r2>)
    (<r3> ^set <p5>)
    (<r2> ^set <p3>)
    (<p3> ^instance <i1>)
    (<i1> ^1 <n2>)
    (<n2> ^predicates <p4>)
    (<r1> ^set <p2>)
    (<p4> ^<c2> <c4>)
    -->
    (<p5> ^instance <i2> +)
    (<i2> ^2 <n2> + ^1 <c4> +)
}

sp {answer*chunk-predicate-impasse*apply*complete*action*StateNoChange*t2493-1
        (state <s1> ^gtype action ^retrieve-handle action-default42)
    -->
    (<s1> ^action <p1> +)
    (<p1> ^potential-args <p2> + ^parameter-set <p3> + ^formated predicate +
           ^primary-rtype single + ^nlp-set <l24> + ^verb-structure <l52> +
           ^aname action-default42 + ^handle action-default42 +)
    (<p3> ^argnum 3 +)
    (<l24> ^conditions <l18> + ^conditions <l45> + ^aname action-default42 +)
    (<l18> ^args <l1> + ^attribute predicate + ^result <l19> + ^rtype single +
           ^parameter <l21> + ^negative false + ^name adjacent +
           ^type concept +)
    (<l1> ^num 2 + ^1 <l2> + ^2 <l14> +)
    (<l14> ^args <l3> + ^attribute predicate + ^result <l15> + ^rtype single +
           ^parameter <l17> + ^negative false + ^name clear + ^type concept +)
    (<l3> ^num 1 + ^1 <l10> +)
    (<l10> ^args <l4> + ^attribute category + ^result <l11> + ^rtype single +
           ^parameter <l13> + ^negative false + ^name location +
           ^type attribute +)
    (<l4> ^num 1 + ^1 <l5> +)
    (<l5> ^args <l6> + ^attribute primitive + ^result <l7> + ^rtype single +
           ^parameter <l9> + ^negative false + ^name object +
           ^type attribute +)
    (<l7> ^set <l8> +)
    (<l9> ^num 0 +)
    (<l11> ^set <l12> +)
    (<l13> ^num 0 +)
    (<l15> ^set <l16> +)
    (<l17> ^num 0 +)
    (<l19> ^set <l20> +)
    (<l21> ^num 2 + ^1 <l22> + ^2 <l23> +)
    (<l22> ^param-id 3 + ^type single +)
    (<l23> ^param-id 2 + ^type single +)
    (<l2> ^args <l36> + ^attribute category + ^result <l42> + ^rtype single +
           ^parameter <l44> + ^negative false + ^name location +
           ^type attribute +)
    (<l36> ^num 1 + ^1 <l37> +)
    (<l37> ^args <l38> + ^attribute primitive + ^result <l39> +
           ^rtype single + ^parameter <l41> + ^negative false + ^name object +
           ^type attribute +)
    (<l39> ^set <l40> +)
    (<l41> ^num 0 +)
    (<l42> ^set <l43> +)
    (<l44> ^num 0 +)
    (<l45> ^args <l25> + ^attribute prepositions + ^result <l46> +
           ^rtype single + ^parameter <l48> + ^negative false + ^name on1 +
           ^type state-pair +)
    (<l25> ^num 2 + ^1 <l32> + ^2 <l2> +)
    (<l32> ^args <l26> + ^attribute category + ^result <l33> + ^rtype single +
           ^parameter <l35> + ^negative false + ^name block +
           ^type attribute +)
    (<l26> ^num 1 + ^1 <l27> +)
    (<l27> ^args <l28> + ^attribute primitive + ^result <l29> +
           ^rtype single + ^parameter <l31> + ^negative false + ^name object +
           ^type attribute +)
    (<l29> ^set <l30> +)
    (<l31> ^num 0 +)
    (<l33> ^set <l34> +)
    (<l35> ^num 0 +)
    (<l46> ^set <l47> +)
    (<l48> ^num 2 + ^1 <l49> + ^2 <l50> +)
    (<l49> ^param-id 1 + ^type single +)
    (<l50> ^param-id 3 + ^type single +)
    (<l52> ^1 <l51> +)
    (<l51> ^verb-prep on1 + ^verb-name move1 + ^1 1 + ^2 2 +)
    (link-stm-to-ltm <l1> 1000255)
    (link-stm-to-ltm <l2> 1000261)
    (link-stm-to-ltm <l3> 1000272)
    (link-stm-to-ltm <l4> 1000288)
    (link-stm-to-ltm <l5> 1000295)
    (link-stm-to-ltm <l6> 1000299)
    (link-stm-to-ltm <l7> 1000298)
    (link-stm-to-ltm <l8> 1000300)
    (link-stm-to-ltm <l9> 1000297)
    (link-stm-to-ltm <l10> 1000281)
    (link-stm-to-ltm <l11> 1000289)
    (link-stm-to-ltm <l12> 1000294)
    (link-stm-to-ltm <l13> 1000287)
    (link-stm-to-ltm <l14> 1000266)
    (link-stm-to-ltm <l15> 1000274)
    (link-stm-to-ltm <l16> 1000280)
    (link-stm-to-ltm <l17> 1000273)
    (link-stm-to-ltm <l18> 1000252)
    (link-stm-to-ltm <l19> 1000256)
    (link-stm-to-ltm <l20> 1000265)
    (link-stm-to-ltm <l21> 1000254)
    (link-stm-to-ltm <l22> 1000268)
    (link-stm-to-ltm <l23> 1000267)
    (link-stm-to-ltm <l24> 1000249)
    (link-stm-to-ltm <l25> 1000258)
    (link-stm-to-ltm <l26> 1000276)
    (link-stm-to-ltm <l27> 1000279)
    (link-stm-to-ltm <l28> 1000292)
    (link-stm-to-ltm <l29> 1000291)
    (link-stm-to-ltm <l30> 1000293)
    (link-stm-to-ltm <l31> 1000290)
    (link-stm-to-ltm <l32> 1000262)
    (link-stm-to-ltm <l33> 1000277)
    (link-stm-to-ltm <l34> 1000278)
    (link-stm-to-ltm <l35> 1000275)
    (link-stm-to-ltm <l36> 1000270)
    (link-stm-to-ltm <l37> 1000283)
    (link-stm-to-ltm <l38> 1000286)
    (link-stm-to-ltm <l39> 1000285)
    (link-stm-to-ltm <l40> 1000296)
    (link-stm-to-ltm <l41> 1000284)
    (link-stm-to-ltm <l42> 1000271)
    (link-stm-to-ltm <l43> 1000282)
    (link-stm-to-ltm <l44> 1000269)
    (link-stm-to-ltm <l45> 1000253)
    (link-stm-to-ltm <l46> 1000259)
    (link-stm-to-ltm <l47> 1000260)
    (link-stm-to-ltm <l48> 1000257)
    (link-stm-to-ltm <l49> 1000264)
    (link-stm-to-ltm <l50> 1000263)
    (link-stm-to-ltm <l51> 1000251)
    (link-stm-to-ltm <l52> 1000250)
}

sp {answer*with-attribute*apply*complete*instance*t2479-1
        (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c7> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^type attribute ^negative <c2> ^args <a1>
          ^parameter <p1> ^result <r3> ^name <c4> ^attribute <c5>)
    (<p1> ^num { < 2 <c6> })
    (<a1> ^1 <c3>)
    (<r3> ^set <p3>)
    (<c3> ^result <r1>)
    (<r1> ^set <r2>)
    (<r2> ^instance <i1>)
    (<i1> ^1 <n1>)
    (<n1> ^predicates <p2>)
    (<p2> ^<c5> <c4>)
    -->
    (<p3> ^instance <i2> +)
    (<i2> ^1 <n1> +)
}

sp {answer*chunk-predicate-impasse*apply*complete*StateNoChange*t2470-1
        (state <s1> ^gtype <c2> ^<c2> <g1>)
    (<g1> ^condition <c1>)
    (<c1> ^name clear ^type concept ^attribute predicate)
    -->
    (<s1> ^predicate <p1> + ^gtype predicate +)
    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
           ^formated predicate + ^primary-rtype single + ^nlp-set <l18> +
           ^aname clear + ^handle clear +)
    (<p3> ^argnum 1 +)
    (<l18> ^conditions <l13> + ^aname clear +)
    (<l13> ^args <l1> + ^attribute prepositions + ^result <l14> +
           ^rtype single + ^parameter <l16> + ^negative true + ^name below1 +
           ^type state-pair +)
    (<l1> ^num 2 + ^1 <l2> + ^2 <l8> +)
    (<l2> ^args <l3> + ^attribute input-arg + ^result <l4> + ^rtype single +
           ^parameter <l6> + ^negative false + ^name object +)
    (<l4> ^set <l5> +)
    (<l6> ^num 1 + ^1 <l7> +)
    (<l7> ^param-id 1 + ^type single +)
    (<l8> ^args <l9> + ^attribute primitive + ^result <l10> + ^rtype single +
           ^parameter <l12> + ^negative false + ^name object +
           ^type attribute +)
    (<l10> ^set <l11> +)
    (<l12> ^num 0 +)
    (<l14> ^set <l15> +)
    (<l16> ^num 1 + ^1 <l17> +)
    (<l17> ^param-id 1 + ^type single +)
    (link-stm-to-ltm <l1> 1000232)
    (link-stm-to-ltm <l2> 1000236)
    (link-stm-to-ltm <l3> 1000239)
    (link-stm-to-ltm <l4> 1000240)
    (link-stm-to-ltm <l5> 1000245)
    (link-stm-to-ltm <l6> 1000238)
    (link-stm-to-ltm <l7> 1000246)
    (link-stm-to-ltm <l8> 1000235)
    (link-stm-to-ltm <l9> 1000242)
    (link-stm-to-ltm <l10> 1000243)
    (link-stm-to-ltm <l11> 1000244)
    (link-stm-to-ltm <l12> 1000241)
    (link-stm-to-ltm <l13> 1000230)
    (link-stm-to-ltm <l14> 1000233)
    (link-stm-to-ltm <l15> 1000234)
    (link-stm-to-ltm <l16> 1000231)
    (link-stm-to-ltm <l17> 1000237)
    (link-stm-to-ltm <l18> 1000229)
}

sp {answer*chunk-predicate-impasse*apply*complete*StateNoChange*t2460-1
        (state <s1> ^gtype <c1> ^<c1> <g1>)
    (<g1> ^condition <n1>)
    (<n1> ^name adjacent ^type concept ^attribute predicate)
    -->
    (<s1> ^predicate <p1> + ^gtype predicate +)
    (<p1> ^link <n1> + ^potential-args <p2> + ^parameter-set <p3> +
           ^formated predicate + ^primary-rtype single + ^nlp-set <l10> +
           ^aname adjacent + ^handle adjacent +)
    (<p3> ^argnum 2 +)
    (<l10> ^conditions <l4> + ^conditions <l22> + ^aname adjacent +)
    (<l4> ^args <l1> + ^attribute prepositions + ^result <l5> +
           ^rtype single + ^parameter <l7> + ^negative true +
           ^name diagonal-with1 + ^type state-pair +)
    (<l1> ^num 2 + ^1 <l2> + ^2 <l3> +)
    (<l5> ^set <l6> +)
    (<l7> ^num 2 + ^1 <l8> + ^2 <l9> +)
    (<l8> ^param-id 1 + ^type single +)
    (<l9> ^param-id 2 + ^type single +)
    (<l2> ^args <l12> + ^attribute input-arg + ^result <l13> + ^rtype single +
           ^parameter <l15> + ^negative false + ^name object +)
    (<l13> ^set <l14> +)
    (<l15> ^num 1 + ^1 <l16> +)
    (<l16> ^param-id 1 + ^type single +)
    (<l3> ^args <l17> + ^attribute input-arg + ^result <l18> + ^rtype single +
           ^parameter <l20> + ^negative false + ^name object +)
    (<l18> ^set <l19> +)
    (<l20> ^num 1 + ^1 <l21> +)
    (<l21> ^param-id 2 + ^type single +)
    (<l22> ^args <l11> + ^attribute prepositions + ^result <l23> +
           ^rtype single + ^parameter <l25> + ^negative false + ^name near1 +
           ^type state-pair +)
    (<l11> ^num 2 + ^1 <l2> + ^2 <l3> +)
    (<l23> ^set <l24> +)
    (<l25> ^num 2 + ^1 <l26> + ^2 <l27> +)
    (<l26> ^param-id 1 + ^type single +)
    (<l27> ^param-id 2 + ^type single +)
    (link-stm-to-ltm <l1> 1000201)
    (link-stm-to-ltm <l2> 1000208)
    (link-stm-to-ltm <l3> 1000207)
    (link-stm-to-ltm <l4> 1000198)
    (link-stm-to-ltm <l5> 1000202)
    (link-stm-to-ltm <l6> 1000211)
    (link-stm-to-ltm <l7> 1000200)
    (link-stm-to-ltm <l8> 1000213)
    (link-stm-to-ltm <l9> 1000212)
    (link-stm-to-ltm <l10> 1000197)
    (link-stm-to-ltm <l11> 1000204)
    (link-stm-to-ltm <l12> 1000215)
    (link-stm-to-ltm <l13> 1000216)
    (link-stm-to-ltm <l14> 1000222)
    (link-stm-to-ltm <l15> 1000214)
    (link-stm-to-ltm <l16> 1000223)
    (link-stm-to-ltm <l17> 1000218)
    (link-stm-to-ltm <l18> 1000219)
    (link-stm-to-ltm <l19> 1000220)
    (link-stm-to-ltm <l20> 1000217)
    (link-stm-to-ltm <l21> 1000221)
    (link-stm-to-ltm <l22> 1000199)
    (link-stm-to-ltm <l23> 1000205)
    (link-stm-to-ltm <l24> 1000206)
    (link-stm-to-ltm <l25> 1000203)
    (link-stm-to-ltm <l26> 1000210)
    (link-stm-to-ltm <l27> 1000209)
}

sp {answer*top-pair*apply*complete*t1871-1
        (state <s1> ^list <l1> ^world <n2>
          ^{ << action goal predicate failure heuristic >> <c6> } <a2>)
    (<l1> ^game <g1>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^handle <c1>)
    (<a2> ^condition <n1>)
    (<n1> ^negative true ^rtype single ^name <c1> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r3> ^attribute <c2>)
    (<a1> ^num 2 ^1 <c3> ^2 <c5>)
    (<c3> -^rtype set ^result <r1>)
    (<p1> ^num { < 2 <c4> })
    (<r3> ^set <p3>)
    (<r1> ^set <r2>)
    (<r2> ^instance <i1>)
    (<i1> ^1 <n4>)
   -{ (<n3> ^instance <instance>)
      (<instance> ^1 <n4> ^2 <objb>)
      (<c5> ^result <r*2>)
      (<r*2> ^set <s*4>)
      (<s*4> ^instance <i*2>)
      (<i*2> ^1 <objb>)}
    -->
    (<p3> ^instance <i2> +)
    (<i2> ^1 <n4> +)
}

sp {answer*with-attribute*apply*complete*instance*t1865-1
        (state <s1> ^list <l1> ^world <n1>
          ^{ << action goal predicate failure heuristic >> <c4> } <a3>)
    (<l1> ^game <g1>)
    (<n1> ^objects <c3>)
    (<a3> ^condition <c1>)
    (<c1> ^rtype single ^name object ^type attribute ^attribute primitive
          ^args <a2> ^negative <c2> ^parameter <p1> ^result <r1>)
    (<a2> -^1 <a1>)
    (<r1> ^set <p2>)
    (<c3> ^object <n2>)
    -->
    (<p2> ^instance <i1> +)
    (<i1> ^1 <n2> +)
}

sp {answer*top-pair*apply*complete*t1238-1
        (state <s1> ^list <l1> ^world <n2>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^handle <c1>)
    (<a2> ^condition <n1>)
    (<n1> ^negative true ^rtype single ^name <c1> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r5> ^attribute <c2>)
    (<a1> ^num 2 ^2 <c3> ^1 <c4>)
    (<p1> ^num 2)
    (<c3> -^rtype set ^result <r3>)
    (<c4> -^rtype set ^result <r1>)
    (<r5> ^set <p3>)
    (<r3> ^set <r4>)
    (<r4> ^instance <i2>)
    (<i2> ^1 <n5>)
    (<r1> ^set <r2>)
    (<r2> ^instance <i1>)
    (<i1> ^1 { <> <n5> <n4> })
   -{ (<n3> ^instance <instance1>)
      (<instance1> ^2 <n5> ^1 <n4>)}
    -->
    (<p3> ^instance <i3> +)
    (<i3> ^2 <n5> + ^1 <n4> +)
}

sp {answer*top-pair*apply*complete*t1232-1
        (state <s1> ^list <l1> ^world <n2>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^instance <n4> ^handle <c1>)
    (<n4> ^2 <n5> ^1 <n6>)
    (<a2> ^condition <n1>)
    (<n1> ^negative false ^rtype single ^name <c1> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r5> ^attribute <c2>)
    (<a1> ^num 2 ^2 <c3> ^1 <c4>)
    (<p1> ^num 2)
    (<c3> -^rtype set ^result <r3>)
    (<c4> -^rtype set ^result <r1>)
    (<r5> ^set <p3>)
    (<r3> ^set <r4>)
    (<r4> ^instance <i2>)
    (<i2> ^1 <n5>)
    (<r1> ^set <r2>)
    (<r2> ^instance <i1>)
    (<i1> ^1 <n6>)
    -->
    (<p3> ^instance <i3> +)
    (<i3> ^2 <n5> + ^1 <n6> +)
}




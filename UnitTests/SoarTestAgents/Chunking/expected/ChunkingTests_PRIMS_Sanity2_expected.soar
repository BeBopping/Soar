sp {answer*set*props*symbol*status*response*propagate*fail*StateNoChange*t91-2
        (state <s1> ^rootstate <s2> ^props-can-evaluate <c2>
          ^props-instructions <l1>)
    (<s2> -^<c3> <val>)
    (<l1> ^lti-name <c2> ^{ << condition action >> <c1> } _P101)
    -->
    (<l1> ^status fail +)
}

sp {answer*set*props*symbol*status*response*propagate*fail*OpNoChange*t91-1
        (state <s1> ^rootstate <s2> ^operator <o1> ^props-instructions <l1>)
    (<s2> -^<c2> <val>)
    (<o1> ^name instruction ^symbol <l1>)
    (<l1> ^{ << condition action >> <c1> } _P10)
    -->
    (<l1> ^status fail +)
}

sp {answer*apply*props*combine*search*merge*pair*OpNoChange*t70-1
        (state <s1> ^operator <o1> ^props-instructions <l2> ^smem <l1>)
    (<o1> ^name props-combine-search ^lti-name <c1>)
    (<l1> ^command <c2>)
    (<l2> ^<c3> <c5> ^<c3> <c4>)
    -->
    (<s1> ^props-to-combine <c6> +)
    (<c6> ^attr <c3> + ^sym1 <c5> + ^sym2 <c4> + ^newname _P101 +)
}

sp {answer*set*props*symbol*status*response*propagate*fail*StateNoChange*t58-1
        (state <s1> ^rootstate <s2> ^props-can-evaluate <c2>
          ^props-instructions <l1>)
    (<s2> -^<c3> <val>)
    (<l1> ^lti-name <c2> ^{ << condition action >> <c1> } _P10)
    -->
    (<l1> ^status fail +)
}

sp {answer*set*props*symbol*status*response*propagate*fail*StateNoChange*t30-1
        (state <s1> ^props-can-evaluate <c5> ^props-instructions <l2>
          ^rootstate <s2> ^const <l1>
          ^name { << props-eval instruction >> <c1> })
    (<l2> ^lti-name <c5> ^{ << condition action >> <c2> } |_P7|)
    (<l1> ^<c3> <c4>)
   -{ (<s2> ^operator <o*1>)
      (<o*1> ^name <c4>)}
    -->
    (<l2> ^status fail +)
}




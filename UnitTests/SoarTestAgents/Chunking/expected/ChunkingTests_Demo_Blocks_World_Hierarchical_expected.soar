sp {answerx2*apply*up-gripper*pass*top-state*OpNoChange*t23-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear { <> <b3> <b1> })
    (<g1> ^position down ^holding nothing ^above <b3>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<b1> ^type block)
    (<o1> ^moving-block <b1> ^name move-block ^destination <b2>)
    -->
    (<g2> ^command up +)
}

sp {answerx2*apply*move-gripper-above*pass*top-state*OpNoChange*t20-2
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear { <> <t1> <> <b3> <b2> })
    (<g1> ^position up ^above <t1> ^holding { <> nothing <b3> })
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^destination <b2> ^name move-block ^moving-block <b1>)
    -->
    (<g2> ^command move-gripper-above + ^destination <b2> +)
}

sp {answerx2*apply*up-gripper*pass*top-state*OpNoChange*t20-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear { <> <t1> <> <b3> <b2> })
    (<g1> ^position down ^above <t1> ^holding { <> nothing <b3> })
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^destination <b2> ^name move-block ^moving-block <b1>)
    -->
    (<g2> ^command up +)
}

sp {answerx2*apply*move-gripper-above*pass*top-state*OpNoChange*t19-3
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear { <> <b3> <b1> })
    (<g1> ^position up ^holding nothing ^above <b3>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<b1> ^type block)
    (<o1> ^moving-block <b1> ^name move-block ^destination <b2>)
    -->
    (<g2> ^command move-gripper-above + ^destination <b1> +)
}

sp {answerx2*apply*up-gripper*pass*top-state*OpNoChange*t19-2
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear { <> <b1> <b1> })
    (<g1> ^position down ^holding nothing ^above <b3>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<b1> ^type block)
    (<o1> ^moving-block <b1> ^name move-block ^destination <b2>)
    -->
    (<g2> ^command up +)
}

sp {answer*apply*up-gripper*pass*top-state*OpNoChange*t19-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2>)
    (<g1> ^position down ^holding nothing ^above <b2>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^name pick-up ^moving-block { <> <b2> <b1> })
    -->
    (<g2> ^command up +)
}

sp {answerx2*apply*open-gripper*pass*top-state*OpNoChange*t14-2
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^clear <t1> ^io <i2>)
    (<g1> ^position down ^open no ^above <t1>
          ^holding { <> nothing <> <t1> <b2> })
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^destination <t1> ^name move-block ^moving-block <b1>)
    -->
    (<g2> ^command open +)
}

sp {answer*apply*open-gripper*pass*top-state*OpNoChange*t14-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2>)
    (<g1> ^position down ^open no ^above <t1> ^holding <b2>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^destination <t1> ^name put-down ^moving-block <b1>)
    -->
    (<g2> ^command open +)
}

sp {answerx2*apply*down-gripper*pass*top-state*OpNoChange*t13-2
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^clear <t1> ^io <i2>)
    (<g1> ^position up ^above <t1> ^holding { <> nothing <> <t1> <b2> })
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^destination <t1> ^name move-block ^moving-block <b1>)
    -->
    (<g2> ^command down +)
}

sp {answer*apply*down-gripper*pass*top-state*OpNoChange*t13-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2>)
    (<g1> ^position up ^above <t1>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^destination <t1> ^name put-down ^moving-block <b1>)
    -->
    (<g2> ^command down +)
}

sp {answerx2*apply*move-gripper-above*pass*top-state*OpNoChange*t12-2
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear { <> <t1> <> <b2> <t1> })
    (<g1> ^position up ^above <b3> ^holding { <> nothing <b2> })
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^destination <t1> ^name move-block ^moving-block <b1>)
    -->
    (<g2> ^command move-gripper-above + ^destination <t1> +)
}

sp {answer*apply*move-gripper-above*pass*top-state*OpNoChange*t12-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2>)
    (<g1> ^position up ^above <b2> ^holding <b1>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^moving-block <b1> ^name put-down ^destination { <> <b2> <t1> })
    -->
    (<g2> ^command move-gripper-above + ^destination <t1> +)
}

sp {answerx2*apply*up-gripper*pass*top-state*OpNoChange*t11-2
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear { <> <t1> <> <b2> <t1> })
    (<g1> ^position down ^above <b3> ^holding { <> nothing <b2> })
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^destination <t1> ^name move-block ^moving-block <b1>)
    -->
    (<g2> ^command up +)
}

sp {answer*apply*up-gripper*pass*top-state*OpNoChange*t11-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2>)
    (<g1> ^position down ^above <b2>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^name put-down ^destination { <> <b2> <t1> } ^moving-block <b1>)
    -->
    (<g2> ^command up +)
}

sp {answerx2*apply*close-gripper*pass*top-state*OpNoChange*t8-2
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear <b1>)
    (<g1> ^position down ^open yes ^holding nothing ^above <b2>)
    (<b2> ^name <c1>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<b1> ^name <c1> ^type block)
    (<o1> ^moving-block <b1> ^name move-block ^destination <t1>)
    -->
    (<g2> ^command close +)
}

sp {answer*apply*close-gripper*pass*top-state*OpNoChange*t8-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2>)
    (<g1> ^position down ^open yes ^holding nothing ^above <b2>)
    (<b2> ^name <c1>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^name pick-up ^moving-block <b1>)
    (<b1> ^name <c1>)
    -->
    (<g2> ^command close +)
}

sp {answerx2*apply*down-gripper*pass*top-state*OpNoChange*t7-2
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^clear <b1> ^io <i2>)
    (<g1> ^position up ^holding nothing ^above <b1>)
    (<b1> ^type block)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^moving-block <b1> ^name move-block ^destination <t1>)
    -->
    (<g2> ^command down +)
}

sp {answer*apply*down-gripper*pass*top-state*OpNoChange*t7-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2>)
    (<g1> ^position up ^above <b1>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^moving-block <b1> ^name pick-up)
    -->
    (<g2> ^command down +)
}

sp {answerx2*apply*move-gripper-above*pass*top-state*OpNoChange*t6-2
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear { <> <b1> <b1> })
    (<g1> ^position up ^holding nothing ^above <t2>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<b1> ^type block)
    (<o1> ^moving-block <b1> ^name move-block ^destination <t1>)
    -->
    (<g2> ^command move-gripper-above + ^destination <b1> +)
}

sp {answer*apply*move-gripper-above*pass*top-state*OpNoChange*t6-1
    (state <s1> ^top-state <s2> ^operator <o1>)
   -{ (<s1> ^operator <o*1>)
      (<o*1> ^name evaluate-operator)}
    (<s2> ^gripper <g1> ^io <i2> ^clear { <> <t1> <b1> })
    (<g1> ^position up ^holding nothing ^above <t1>)
    (<i2> ^output-link <i1>)
    (<i1> ^gripper <g2>)
    (<o1> ^moving-block <b1> ^name pick-up)
    -->
    (<g2> ^command move-gripper-above + ^destination <b1> +)
}




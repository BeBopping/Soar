sp {answer*chunk-puzzle-impasse*apply*complete*StateNoChange*t9200-2
    (state <s1> ^retrieve-game tower-of-hanoi-34451)
    (<s1> -^opponent <o*1>)
    -->
    (<s1> ^retrieve-handle stack-block2253 +)
}

sp {answer*chunk-puzzle-impasse*apply*complete*StateNoChange*t9200-1
    (state <s1> ^retrieve-game tower-of-hanoi-34451)
    (<s1> -^opponent <o*1>)
    -->
    (<s1> ^retrieve-handle goal-default70 +)
}

sp {answer*chunk-predicate-impasse*apply*complete*action*StateNoChange*t9089-1
    (state <s1> ^gtype goal)
    (<s1> ^retrieve-handle goal-default70)
    -->
    (<s1> ^goal <p1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 3 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l23> +)
    (<l23> ^conditions <l1> +)
    (<l1> ^rtype single +)
    (<l1> ^args <l2> +)
    (<l2> ^num 2 +)
    (<l2> ^2 <l3> +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^1 <l5> +)
    (<l5> ^rtype single +)
    (<l5> ^args <l6> +)
    (<l6> ^num 1 +)
    (<l6> ^1 <l7> +)
    (<l7> ^rtype single +)
    (<l7> ^args <l8> +)
    (<l7> ^negative false +)
    (<l7> ^parameter <l9> +)
    (<l9> ^num 0 +)
    (<l7> ^result <l10> +)
    (<l10> ^set <l11> +)
    (<l7> ^attribute primitive +)
    (<l7> ^name object +)
    (<l7> ^type attribute +)
    (<l5> ^negative false +)
    (<l5> ^parameter <l12> +)
    (<l12> ^num 0 +)
    (<l5> ^result <l13> +)
    (<l13> ^set <l14> +)
    (<l5> ^attribute category +)
    (<l5> ^name location +)
    (<l5> ^type attribute +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l15> +)
    (<l15> ^num 0 +)
    (<l3> ^result <l16> +)
    (<l16> ^set <l17> +)
    (<l3> ^attribute color +)
    (<l3> ^name blue1 +)
    (<l3> ^type attribute +)
    (<l2> ^1 <l18> +)
    (<l1> ^negative false +)
    (<l1> ^parameter <l19> +)
    (<l19> ^num 1 +)
    (<l19> ^1 <l20> +)
    (<l20> ^param-id 3 +)
    (<l20> ^type single +)
    (<l1> ^result <l21> +)
    (<l21> ^set <l22> +)
    (<l1> ^attribute prepositions +)
    (<l1> ^name on1 +)
    (<l1> ^type state-pair +)
    (<l23> ^conditions <l24> +)
    (<l24> ^rtype single +)
    (<l24> ^args <l25> +)
    (<l25> ^num 2 +)
    (<l25> ^2 <l26> +)
    (<l25> ^1 <l27> +)
    (<l27> ^rtype single +)
    (<l27> ^args <l28> +)
    (<l28> ^num 1 +)
    (<l28> ^1 <l29> +)
    (<l29> ^rtype single +)
    (<l29> ^args <l30> +)
    (<l30> ^num 1 +)
    (<l30> ^1 <l31> +)
    (<l31> ^rtype single +)
    (<l31> ^args <l32> +)
    (<l31> ^negative false +)
    (<l31> ^parameter <l33> +)
    (<l33> ^num 0 +)
    (<l31> ^result <l34> +)
    (<l34> ^set <l35> +)
    (<l31> ^attribute primitive +)
    (<l31> ^name object +)
    (<l31> ^type attribute +)
    (<l29> ^negative false +)
    (<l29> ^parameter <l36> +)
    (<l36> ^num 0 +)
    (<l29> ^result <l37> +)
    (<l37> ^set <l38> +)
    (<l29> ^attribute category +)
    (<l29> ^name block +)
    (<l29> ^type attribute +)
    (<l27> ^negative false +)
    (<l27> ^parameter <l39> +)
    (<l39> ^num 0 +)
    (<l27> ^result <l40> +)
    (<l40> ^set <l41> +)
    (<l27> ^attribute size +)
    (<l27> ^name small1 +)
    (<l27> ^type attribute +)
    (<l24> ^negative false +)
    (<l24> ^parameter <l42> +)
    (<l42> ^num 2 +)
    (<l42> ^2 <l43> +)
    (<l43> ^param-id 2 +)
    (<l43> ^type single +)
    (<l42> ^1 <l44> +)
    (<l44> ^param-id 1 +)
    (<l44> ^type single +)
    (<l24> ^result <l45> +)
    (<l45> ^set <l46> +)
    (<l24> ^attribute prepositions +)
    (<l24> ^name on1 +)
    (<l24> ^type state-pair +)
    (<l18> ^rtype single +)
    (<l18> ^args <l49> +)
    (<l49> ^num 1 +)
    (<l49> ^1 <l50> +)
    (<l50> ^rtype single +)
    (<l50> ^args <l51> +)
    (<l51> ^num 1 +)
    (<l51> ^1 <l52> +)
    (<l52> ^rtype single +)
    (<l52> ^args <l53> +)
    (<l52> ^negative false +)
    (<l52> ^parameter <l54> +)
    (<l54> ^num 0 +)
    (<l52> ^result <l55> +)
    (<l55> ^set <l56> +)
    (<l52> ^attribute primitive +)
    (<l52> ^name object +)
    (<l52> ^type attribute +)
    (<l50> ^negative false +)
    (<l50> ^parameter <l57> +)
    (<l57> ^num 0 +)
    (<l50> ^result <l58> +)
    (<l58> ^set <l59> +)
    (<l50> ^attribute category +)
    (<l50> ^name block +)
    (<l50> ^type attribute +)
    (<l18> ^negative false +)
    (<l18> ^parameter <l60> +)
    (<l60> ^num 0 +)
    (<l18> ^result <l61> +)
    (<l61> ^set <l62> +)
    (<l18> ^attribute size +)
    (<l18> ^name large1 +)
    (<l18> ^type attribute +)
    (<l26> ^rtype single +)
    (<l26> ^args <l63> +)
    (<l63> ^num 1 +)
    (<l63> ^1 <l64> +)
    (<l64> ^rtype single +)
    (<l64> ^args <l65> +)
    (<l65> ^num 1 +)
    (<l65> ^1 <l66> +)
    (<l66> ^rtype single +)
    (<l66> ^args <l67> +)
    (<l66> ^negative false +)
    (<l66> ^parameter <l68> +)
    (<l68> ^num 0 +)
    (<l66> ^result <l69> +)
    (<l69> ^set <l70> +)
    (<l66> ^attribute primitive +)
    (<l66> ^name object +)
    (<l66> ^type attribute +)
    (<l64> ^negative false +)
    (<l64> ^parameter <l71> +)
    (<l71> ^num 0 +)
    (<l64> ^result <l72> +)
    (<l72> ^set <l73> +)
    (<l64> ^attribute category +)
    (<l64> ^name block +)
    (<l64> ^type attribute +)
    (<l26> ^negative false +)
    (<l26> ^parameter <l74> +)
    (<l74> ^num 0 +)
    (<l26> ^result <l75> +)
    (<l75> ^set <l76> +)
    (<l26> ^attribute size +)
    (<l26> ^name medium1 +)
    (<l26> ^type attribute +)
    (<l23> ^conditions <l47> +)
    (<l47> ^rtype single +)
    (<l47> ^args <l48> +)
    (<l48> ^num 2 +)
    (<l48> ^2 <l18> +)
    (<l48> ^1 <l26> +)
    (<l47> ^negative false +)
    (<l47> ^parameter <l77> +)
    (<l77> ^num 2 +)
    (<l77> ^2 <l78> +)
    (<l78> ^param-id 3 +)
    (<l78> ^type single +)
    (<l77> ^1 <l79> +)
    (<l79> ^param-id 2 +)
    (<l79> ^type single +)
    (<l47> ^result <l80> +)
    (<l80> ^set <l81> +)
    (<l47> ^attribute prepositions +)
    (<l47> ^name on1 +)
    (<l47> ^type state-pair +)
    (<l23> ^aname goal-default70 +)
    (<p1> ^aname goal-default70 +)
    (<p1> ^handle goal-default70 +)
}

sp {answer*top-pair*apply*complete*t9077-1
    (state <s1> ^gtype <c1>)
    (<s1> ^list <l1>)
    (<l1> ^game <g1>)
    (<s1> ^world <n2>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^instance <n4>)
    (<n3> ^handle <c2>)
    (<n4> ^2 <n5>)
    (<n4> ^1 <n6>)
    (<s1> ^<c1> <a1>)
    (<s1> ^{ << action goal predicate failure heuristic >> <c6> } <a3>)
    (<a3> ^condition <n1>)
    (<n1> ^rtype single)
    (<n1> ^negative false)
    (<n1> ^name <c2>)
    (<n1> ^type state-pair)
    (<n1> ^args <a2>)
    (<a2> ^num 2)
    (<n1> ^parameter <p1>)
    (<p1> ^num 2)
    (<a2> ^2 <c4>)
    (<c4> -^rtype set)
    (<a2> ^1 <c5>)
    (<c5> -^rtype set)
    (<n1> ^result <r3>)
    (<r3> ^set <p5>)
    (<c4> ^result <r2>)
    (<r2> ^set <p4>)
    (<p4> ^instance <i2>)
    (<i2> ^1 <n5>)
    (<c5> ^result <r1>)
    (<r1> ^set <p3>)
    (<p3> ^instance <i1>)
    (<i1> ^1 <n6>)
    (<n1> ^attribute <c3>)
    -->
    (<p5> ^instance <i3> +)
    (<i3> ^2 <n5> +)
    (<i3> ^1 <n6> +)
}

sp {answer*chunk-predicate-impasse*apply*complete*action*StateNoChange*t8125-1
    (state <s1> ^gtype action)
    (<s1> ^retrieve-handle stack-block2253)
    -->
    (<s1> ^action <p1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 2 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l33> +)
    (<l33> ^conditions <l1> +)
    (<l1> ^rtype single +)
    (<l1> ^args <l2> +)
    (<l2> ^num 2 +)
    (<l2> ^2 <l3> +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^1 <l5> +)
    (<l5> ^rtype single +)
    (<l5> ^args <l6> +)
    (<l6> ^num 1 +)
    (<l6> ^1 <l7> +)
    (<l7> ^rtype single +)
    (<l7> ^args <l8> +)
    (<l7> ^negative false +)
    (<l7> ^parameter <l9> +)
    (<l9> ^num 0 +)
    (<l7> ^result <l10> +)
    (<l10> ^set <l11> +)
    (<l7> ^attribute primitive +)
    (<l7> ^name object +)
    (<l7> ^type attribute +)
    (<l5> ^negative false +)
    (<l5> ^parameter <l12> +)
    (<l12> ^num 0 +)
    (<l5> ^result <l13> +)
    (<l13> ^set <l14> +)
    (<l5> ^attribute category +)
    (<l5> ^name block +)
    (<l5> ^type attribute +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l15> +)
    (<l15> ^num 0 +)
    (<l3> ^result <l16> +)
    (<l16> ^set <l17> +)
    (<l3> ^attribute predicate +)
    (<l3> ^name clear +)
    (<l3> ^type concept +)
    (<l2> ^1 <l18> +)
    (<l18> ^rtype single +)
    (<l18> ^args <l19> +)
    (<l19> ^num 1 +)
    (<l19> ^1 <l20> +)
    (<l20> ^rtype single +)
    (<l20> ^args <l21> +)
    (<l20> ^negative false +)
    (<l20> ^parameter <l22> +)
    (<l22> ^num 0 +)
    (<l20> ^result <l23> +)
    (<l23> ^set <l24> +)
    (<l20> ^attribute primitive +)
    (<l20> ^name object +)
    (<l20> ^type attribute +)
    (<l18> ^negative false +)
    (<l18> ^parameter <l25> +)
    (<l25> ^num 0 +)
    (<l18> ^result <l26> +)
    (<l26> ^set <l27> +)
    (<l18> ^attribute predicate +)
    (<l18> ^name clear +)
    (<l18> ^type concept +)
    (<l1> ^negative false +)
    (<l1> ^parameter <l28> +)
    (<l28> ^num 2 +)
    (<l28> ^2 <l29> +)
    (<l29> ^param-id 1 +)
    (<l29> ^type single +)
    (<l28> ^1 <l30> +)
    (<l30> ^param-id 2 +)
    (<l30> ^type single +)
    (<l1> ^result <l31> +)
    (<l31> ^set <l32> +)
    (<l1> ^attribute predicate +)
    (<l1> ^name larger +)
    (<l1> ^type concept +)
    (<l33> ^aname stack-block2253 +)
    (<p1> ^verb-structure <l35> +)
    (<l35> ^1 <l34> +)
    (<l34> ^verb-name move1 +)
    (<l34> ^verb-prep on1 +)
    (<l34> ^2 2 +)
    (<l34> ^1 1 +)
    (<p1> ^aname stack-block2253 +)
    (<p1> ^handle stack-block2253 +)
}

sp {answer*chunk-predicate-impasse*apply*complete*StateNoChange*t8111-1
    (state <s1> ^gtype <c1>)
    (<s1> ^<c1> <g1>)
    (<g1> ^condition <n1>)
    (<n1> ^name larger)
    (<n1> ^type concept)
    (<n1> ^attribute predicate)
    -->
    (<s1> ^predicate <p1> +)
    (<p1> ^link <n1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 4 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l1> +)
    (<l1> ^conditions <l2> +)
    (<l1> ^conditions <l3> +)
    (<l3> ^return-type number +)
    (<l3> ^rtype single +)
    (<l3> ^args <l6> +)
    (<l6> ^num 1 +)
    (<l6> ^2 <l7> +)
    (<l7> ^rtype single +)
    (<l7> ^args <l8> +)
    (<l7> ^negative false +)
    (<l7> ^parameter <l9> +)
    (<l9> ^num 1 +)
    (<l9> ^1 <l10> +)
    (<l10> ^param-id 2 +)
    (<l10> ^type single +)
    (<l7> ^result <l11> +)
    (<l11> ^set <l12> +)
    (<l7> ^attribute input-arg +)
    (<l7> ^name object +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l13> +)
    (<l13> ^num 2 +)
    (<l13> ^2 <l14> +)
    (<l14> ^param-id 2 +)
    (<l14> ^type single +)
    (<l13> ^1 <l15> +)
    (<l15> ^param-id 4 +)
    (<l15> ^type single +)
    (<l3> ^result <l16> +)
    (<l16> ^set <l17> +)
    (<l3> ^name volume +)
    (<l3> ^type attribute-of +)
    (<l2> ^return-type number +)
    (<l2> ^rtype single +)
    (<l2> ^args <l18> +)
    (<l18> ^num 1 +)
    (<l18> ^2 <l19> +)
    (<l19> ^rtype single +)
    (<l19> ^args <l20> +)
    (<l19> ^negative false +)
    (<l19> ^parameter <l21> +)
    (<l21> ^num 1 +)
    (<l21> ^1 <l22> +)
    (<l22> ^param-id 1 +)
    (<l22> ^type single +)
    (<l19> ^result <l23> +)
    (<l23> ^set <l24> +)
    (<l19> ^attribute input-arg +)
    (<l19> ^name object +)
    (<l2> ^negative false +)
    (<l2> ^parameter <l25> +)
    (<l25> ^num 2 +)
    (<l25> ^2 <l26> +)
    (<l26> ^param-id 1 +)
    (<l26> ^type single +)
    (<l25> ^1 <l27> +)
    (<l27> ^param-id 3 +)
    (<l27> ^type single +)
    (<l2> ^result <l28> +)
    (<l28> ^set <l29> +)
    (<l2> ^name volume +)
    (<l2> ^type attribute-of +)
    (<l1> ^conditions <l4> +)
    (<l4> ^return-type number +)
    (<l4> ^function soar-greater +)
    (<l4> ^rtype single +)
    (<l4> ^args <l5> +)
    (<l5> ^num 2 +)
    (<l5> ^2 <l3> +)
    (<l5> ^1 <l2> +)
    (<l4> ^negative false +)
    (<l4> ^parameter <l30> +)
    (<l30> ^num 2 +)
    (<l30> ^2 <l31> +)
    (<l31> ^param-id 4 +)
    (<l31> ^type single +)
    (<l30> ^1 <l32> +)
    (<l32> ^param-id 3 +)
    (<l32> ^type single +)
    (<l4> ^result <l33> +)
    (<l33> ^set <l34> +)
    (<l4> ^name greater +)
    (<l4> ^type function +)
    (<l1> ^aname larger +)
    (<p1> ^aname larger +)
    (<p1> ^handle larger +)
    (<s1> ^gtype predicate +)
}

sp {answer*soar-compare*greater*param-2*OpNoChange*t7731-1
    (state <s1> ^gtype <c1>)
    (<s1> ^list <l1>)
    (<l1> ^game <g1>)
    (<s1> ^<c1> <a1>)
    (<s1> ^{ << action goal predicate failure heuristic >> <c6> } <a3>)
    (<a3> ^condition <n1>)
    (<n1> ^function soar-greater)
    (<n1> ^type function)
    (<n1> ^args <a2>)
    (<a2> ^num 2)
    (<n1> ^parameter <p1>)
    (<p1> ^num 2)
    (<n1> ^negative <c2>)
    (<a2> ^2 <n2>)
    (<a2> ^1 <n3>)
    (<n2> ^result <r3>)
    (<r3> ^set <p4>)
    (<p4> ^instance <i2>)
    (<i2> ^1 <c5>)
    (<n3> ^result <r2>)
    (<r2> ^set <p3>)
    (<p3> ^instance <i1>)
    (<i1> ^1 { > <c5> <c4> })
    (<n1> ^result <r1>)
    (<r1> ^set <p2>)
    (<n1> ^name <c3>)
    -->
    (<p2> ^instance <i3> +)
    (<i3> ^1 <c4> +)
    (<i3> ^2 <c5> +)
}

sp {answer*attribute-of*apply*complete*t7726-1
    (state <s1> ^gtype <c1>)
    (<s1> ^list <l1>)
    (<l1> ^game <g1>)
    (<s1> ^<c1> <a1>)
    (<s1> ^{ << action goal predicate failure heuristic >> <c6> } <a3>)
    (<a3> ^condition <n1>)
    (<n1> ^type attribute-of)
    (<n1> ^args <a2>)
    (<a2> ^num 1)
    (<n1> ^parameter <p1>)
    (<p1> ^num 2)
    (<a2> ^2 <c4>)
    (<c4> -^rtype set)
    (<n1> ^negative <c2>)
    (<n1> ^result <r4>)
    (<r4> ^set <p4>)
    (<c4> ^result <r2>)
    (<r2> ^set <r3>)
    (<r3> ^instance <i1>)
    (<i1> ^1 <n2>)
    (<n2> ^predicates <p3>)
    (<n1> ^result <r1>)
    (<r1> ^set <p2>)
    (<n1> ^name <c3>)
    (<p3> ^<c3> <c5>)
    -->
    (<p4> ^instance <i2> +)
    (<i2> ^2 <n2> +)
    (<i2> ^1 <c5> +)
}

sp {answer*chunk-puzzle-impasse*apply*complete*StateNoChange*t6185-3
    (state <s1> ^retrieve-game tic-tac-toe2220)
    (<s1> -^opponent <o*1>)
    -->
    (<s1> ^retrieve-handle action-default32 +)
}

sp {answer*chunk-puzzle-impasse*apply*complete*StateNoChange*t6185-2
    (state <s1> ^retrieve-game tic-tac-toe2220)
    (<s1> -^opponent <o*1>)
    -->
    (<s1> ^retrieve-handle three-in-a-row2234 +)
}

sp {answer*chunk-puzzle-impasse*apply*complete*StateNoChange*t6185-1
    (state <s1> ^retrieve-game tic-tac-toe2220)
    (<s1> -^opponent <o*1>)
    -->
    (<s1> ^retrieve-handle enemy-3-in-a-row2243 +)
}

sp {answer*chunk-predicate-impasse*apply*complete*action*StateNoChange*t6071-1
    (state <s1> ^gtype failure)
    (<s1> ^retrieve-handle enemy-3-in-a-row2243)
    -->
    (<s1> ^failure <p1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 2 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype set +)
    (<p1> ^nlp-set <l1> +)
    (<l1> ^conditions <l2> +)
    (<l2> ^rtype set +)
    (<l2> ^args <l5> +)
    (<l5> ^num 1 +)
    (<l5> ^1 <l6> +)
    (<l6> ^rtype set +)
    (<l6> ^args <l7> +)
    (<l7> ^num 1 +)
    (<l7> ^1 <l8> +)
    (<l8> ^rtype single +)
    (<l8> ^args <l9> +)
    (<l9> ^num 1 +)
    (<l9> ^1 <l10> +)
    (<l10> ^rtype single +)
    (<l10> ^args <l11> +)
    (<l10> ^negative false +)
    (<l10> ^parameter <l12> +)
    (<l12> ^num 0 +)
    (<l10> ^result <l13> +)
    (<l13> ^set <l14> +)
    (<l10> ^attribute primitive +)
    (<l10> ^name object +)
    (<l10> ^type attribute +)
    (<l8> ^negative false +)
    (<l8> ^parameter <l15> +)
    (<l15> ^num 0 +)
    (<l8> ^result <l16> +)
    (<l16> ^set <l17> +)
    (<l8> ^attribute category +)
    (<l8> ^name location +)
    (<l8> ^type attribute +)
    (<l6> ^negative false +)
    (<l6> ^parameter <l18> +)
    (<l18> ^num 1 +)
    (<l18> ^1 <l19> +)
    (<l19> ^param-id 1 +)
    (<l19> ^type set +)
    (<l6> ^result <l20> +)
    (<l20> ^set <l21> +)
    (<l6> ^attribute preposition +)
    (<l6> ^name linear +)
    (<l6> ^type state-pair +)
    (<l2> ^negative false +)
    (<l2> ^parameter <l22> +)
    (<l22> ^num 1 +)
    (<l22> ^1 <l23> +)
    (<l23> ^param-id 1 +)
    (<l23> ^type set +)
    (<l2> ^result <l24> +)
    (<l24> ^set <l25> +)
    (<l2> ^attribute predicate +)
    (<l2> ^name occupied +)
    (<l2> ^type concept +)
    (<l1> ^conditions <l3> +)
    (<l3> ^return-type number +)
    (<l3> ^function soar-count +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^2 <l2> +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l26> +)
    (<l26> ^num 2 +)
    (<l26> ^2 <l27> +)
    (<l27> ^param-id 1 +)
    (<l27> ^type set +)
    (<l26> ^1 <l28> +)
    (<l28> ^param-id 2 +)
    (<l28> ^type single +)
    (<l3> ^result <l29> +)
    (<l29> ^set <l30> +)
    (<l3> ^name count +)
    (<l3> ^type function +)
    (<l1> ^conditions <l31> +)
    (<l31> ^return-type number +)
    (<l31> ^rtype single +)
    (<l31> ^args <l32> +)
    (<l31> ^negative false +)
    (<l31> ^parameter <l33> +)
    (<l33> ^num 1 +)
    (<l33> ^1 <l34> +)
    (<l34> ^param-id 2 +)
    (<l34> ^type single +)
    (<l31> ^result <l37> +)
    (<l37> ^set <l36> +)
    (<l36> ^instance <l35> +)
    (<l35> ^1 3 +)
    (<l31> ^name number +)
    (<l1> ^aname enemy-3-in-a-row2243 +)
    (<p1> ^aname enemy-3-in-a-row2243 +)
    (<p1> ^handle enemy-3-in-a-row2243 +)
}

sp {answer*chunk-predicate-impasse*apply*complete*StateNoChange*t6059-1
    (state <s1> ^gtype <c1>)
    (<s1> ^<c1> <g1>)
    (<g1> ^condition <n1>)
    (<n1> ^name occupied)
    (<n1> ^type concept)
    (<n1> ^attribute predicate)
    -->
    (<s1> ^predicate <p1> +)
    (<p1> ^link <n1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 1 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l28> +)
    (<l28> ^conditions <l1> +)
    (<l1> ^rtype single +)
    (<l1> ^args <l2> +)
    (<l2> ^num 2 +)
    (<l2> ^2 <l3> +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^1 <l5> +)
    (<l5> ^rtype single +)
    (<l5> ^args <l6> +)
    (<l6> ^num 1 +)
    (<l6> ^1 <l7> +)
    (<l7> ^rtype single +)
    (<l7> ^args <l8> +)
    (<l7> ^negative false +)
    (<l7> ^parameter <l9> +)
    (<l9> ^num 0 +)
    (<l7> ^result <l10> +)
    (<l10> ^set <l11> +)
    (<l7> ^attribute primitive +)
    (<l7> ^name object +)
    (<l7> ^type attribute +)
    (<l5> ^negative false +)
    (<l5> ^parameter <l12> +)
    (<l12> ^num 0 +)
    (<l5> ^result <l13> +)
    (<l13> ^set <l14> +)
    (<l5> ^attribute category +)
    (<l5> ^name block +)
    (<l5> ^type attribute +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l15> +)
    (<l15> ^num 0 +)
    (<l3> ^result <l16> +)
    (<l16> ^set <l17> +)
    (<l3> ^attribute color +)
    (<l3> ^name blue1 +)
    (<l3> ^type attribute +)
    (<l2> ^1 <l18> +)
    (<l18> ^rtype single +)
    (<l18> ^args <l19> +)
    (<l18> ^negative false +)
    (<l18> ^parameter <l20> +)
    (<l20> ^num 1 +)
    (<l20> ^1 <l21> +)
    (<l21> ^param-id 1 +)
    (<l21> ^type single +)
    (<l18> ^result <l22> +)
    (<l22> ^set <l23> +)
    (<l18> ^attribute input-arg +)
    (<l18> ^name object +)
    (<l1> ^negative false +)
    (<l1> ^parameter <l24> +)
    (<l24> ^num 1 +)
    (<l24> ^1 <l25> +)
    (<l25> ^param-id 1 +)
    (<l25> ^type single +)
    (<l1> ^result <l26> +)
    (<l26> ^set <l27> +)
    (<l1> ^attribute prepositions +)
    (<l1> ^name below1 +)
    (<l1> ^type state-pair +)
    (<l28> ^aname occupied +)
    (<p1> ^aname occupied +)
    (<p1> ^handle occupied +)
    (<s1> ^gtype predicate +)
}

sp {answer*chunk-predicate-impasse*apply*complete*action*StateNoChange*t4801-1
    (state <s1> ^gtype goal)
    (<s1> ^retrieve-handle three-in-a-row2234)
    -->
    (<s1> ^goal <p1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 2 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype set +)
    (<p1> ^nlp-set <l1> +)
    (<l1> ^conditions <l2> +)
    (<l2> ^rtype set +)
    (<l2> ^args <l5> +)
    (<l5> ^num 1 +)
    (<l5> ^1 <l6> +)
    (<l6> ^rtype set +)
    (<l6> ^args <l7> +)
    (<l7> ^num 1 +)
    (<l7> ^1 <l8> +)
    (<l8> ^rtype single +)
    (<l8> ^args <l9> +)
    (<l9> ^num 1 +)
    (<l9> ^1 <l10> +)
    (<l10> ^rtype single +)
    (<l10> ^args <l11> +)
    (<l10> ^negative false +)
    (<l10> ^parameter <l12> +)
    (<l12> ^num 0 +)
    (<l10> ^result <l13> +)
    (<l13> ^set <l14> +)
    (<l10> ^attribute primitive +)
    (<l10> ^name object +)
    (<l10> ^type attribute +)
    (<l8> ^negative false +)
    (<l8> ^parameter <l15> +)
    (<l15> ^num 0 +)
    (<l8> ^result <l16> +)
    (<l16> ^set <l17> +)
    (<l8> ^attribute category +)
    (<l8> ^name location +)
    (<l8> ^type attribute +)
    (<l6> ^negative false +)
    (<l6> ^parameter <l18> +)
    (<l18> ^num 1 +)
    (<l18> ^1 <l19> +)
    (<l19> ^param-id 1 +)
    (<l19> ^type set +)
    (<l6> ^result <l20> +)
    (<l20> ^set <l21> +)
    (<l6> ^attribute preposition +)
    (<l6> ^name linear +)
    (<l6> ^type state-pair +)
    (<l2> ^negative false +)
    (<l2> ^parameter <l22> +)
    (<l22> ^num 1 +)
    (<l22> ^1 <l23> +)
    (<l23> ^param-id 1 +)
    (<l23> ^type set +)
    (<l2> ^result <l24> +)
    (<l24> ^set <l25> +)
    (<l2> ^attribute predicate +)
    (<l2> ^name captured +)
    (<l2> ^type concept +)
    (<l1> ^conditions <l3> +)
    (<l3> ^return-type number +)
    (<l3> ^function soar-count +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^2 <l2> +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l26> +)
    (<l26> ^num 2 +)
    (<l26> ^2 <l27> +)
    (<l27> ^param-id 1 +)
    (<l27> ^type set +)
    (<l26> ^1 <l28> +)
    (<l28> ^param-id 2 +)
    (<l28> ^type single +)
    (<l3> ^result <l29> +)
    (<l29> ^set <l30> +)
    (<l3> ^name count +)
    (<l3> ^type function +)
    (<l1> ^conditions <l31> +)
    (<l31> ^return-type number +)
    (<l31> ^rtype single +)
    (<l31> ^args <l32> +)
    (<l31> ^negative false +)
    (<l31> ^parameter <l33> +)
    (<l33> ^num 1 +)
    (<l33> ^1 <l34> +)
    (<l34> ^param-id 2 +)
    (<l34> ^type single +)
    (<l31> ^result <l37> +)
    (<l37> ^set <l36> +)
    (<l36> ^instance <l35> +)
    (<l35> ^1 3 +)
    (<l31> ^name number +)
    (<l1> ^aname three-in-a-row2234 +)
    (<p1> ^aname three-in-a-row2234 +)
    (<p1> ^handle three-in-a-row2234 +)
}

sp {answer*soar-count*apply*complete*t4789-1
    (state <s1> ^gtype <c1>)
    (<s1> ^list <l1>)
    (<l1> ^game <g1>)
    (<s1> ^<c1> <a1>)
    (<s1> ^{ << action goal predicate failure heuristic >> <c4> } <a3>)
    (<a3> ^condition <n1>)
    (<n1> ^function soar-count)
    (<n1> ^type function)
    (<n1> ^args <a2>)
    (<a2> ^num 1)
    (<n1> ^parameter <p1>)
    (<p1> ^num 2)
    (<a2> ^2 <n2>)
    (<n2> ^rtype set)
    (<n1> ^negative <c2>)
    (<n1> ^result <r2>)
    (<r2> ^set <p3>)
    (<n2> ^result <r1>)
    (<r1> ^set <p2>)
    (<p2> ^instance <i1>)
    (<i1> ^1 <n3>)
   -{ (<n3> -^<something> <s*3>)
      (<s1> ^<a*1> <v*1>)}
    (<n1> ^name <c3>)
    -->
    (<p3> ^instance <p4> +)
    (<p4> ^1 (size <n3>) +)
    (<p4> ^2 <n3> +)
}

sp {answer*top-pair*apply*complete*t4783-1
    (state <s1> ^gtype <c1>)
    (<s1> ^list <l1>)
    (<l1> ^game <g1>)
    (<s1> ^world <n1>)
    (<n1> ^predicates <p2>)
    (<p2> ^predicate <n2>)
    (<n2> ^instance <n3>)
    (<n3> ^1 <n4>)
   -{ (<n4> -^<x1> <x*1>)
      (<s1> ^<a*1> <v*1>)}
    (<n2> ^handle <c3>)
    (<s1> ^<c1> <a1>)
    (<s1> ^{ << action goal predicate failure heuristic >> <c7> } <a3>)
    (<a3> ^condition <c2>)
    (<c2> ^rtype set)
    (<c2> ^negative false)
    (<c2> ^name <c3>)
    (<c2> ^type state-pair)
    (<c2> ^args <a2>)
    (<a2> ^num 1)
    (<a2> ^1 <c5>)
   -{ (<n4> ^<elem> <obja>)
     -{ (<c5> ^result <r*1>)
        (<r*1> ^set <s*3>)
        (<s*3> ^instance <i*1>)
        (<i*1> ^1 <obja>)}}
    (<c5> -^rtype set)
    (<c2> ^parameter <p1>)
    (<p1> ^num { < 2 <c6> })
    (<c2> ^result <r1>)
    (<r1> ^set <p3>)
    (<c2> ^attribute <c4>)
    -->
    (<p3> ^instance <i1> +)
    (<i1> ^1 <n4> +)
}

sp {answer*chunk-predicate-impasse*apply*complete*StateNoChange*t4774-1
    (state <s1> ^gtype <c1>)
    (<s1> ^<c1> <g1>)
    (<g1> ^condition <n1>)
    (<n1> ^name captured)
    (<n1> ^type concept)
    (<n1> ^attribute predicate)
    -->
    (<s1> ^predicate <p1> +)
    (<p1> ^link <n1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 1 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l28> +)
    (<l28> ^conditions <l1> +)
    (<l1> ^rtype single +)
    (<l1> ^args <l2> +)
    (<l2> ^num 2 +)
    (<l2> ^2 <l3> +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^1 <l5> +)
    (<l5> ^rtype single +)
    (<l5> ^args <l6> +)
    (<l6> ^num 1 +)
    (<l6> ^1 <l7> +)
    (<l7> ^rtype single +)
    (<l7> ^args <l8> +)
    (<l7> ^negative false +)
    (<l7> ^parameter <l9> +)
    (<l9> ^num 0 +)
    (<l7> ^result <l10> +)
    (<l10> ^set <l11> +)
    (<l7> ^attribute primitive +)
    (<l7> ^name object +)
    (<l7> ^type attribute +)
    (<l5> ^negative false +)
    (<l5> ^parameter <l12> +)
    (<l12> ^num 0 +)
    (<l5> ^result <l13> +)
    (<l13> ^set <l14> +)
    (<l5> ^attribute category +)
    (<l5> ^name block +)
    (<l5> ^type attribute +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l15> +)
    (<l15> ^num 0 +)
    (<l3> ^result <l16> +)
    (<l16> ^set <l17> +)
    (<l3> ^attribute color +)
    (<l3> ^name red1 +)
    (<l3> ^type attribute +)
    (<l2> ^1 <l18> +)
    (<l18> ^rtype single +)
    (<l18> ^args <l19> +)
    (<l18> ^negative false +)
    (<l18> ^parameter <l20> +)
    (<l20> ^num 1 +)
    (<l20> ^1 <l21> +)
    (<l21> ^param-id 1 +)
    (<l21> ^type single +)
    (<l18> ^result <l22> +)
    (<l22> ^set <l23> +)
    (<l18> ^attribute input-arg +)
    (<l18> ^name object +)
    (<l1> ^negative false +)
    (<l1> ^parameter <l24> +)
    (<l24> ^num 1 +)
    (<l24> ^1 <l25> +)
    (<l25> ^param-id 1 +)
    (<l25> ^type single +)
    (<l1> ^result <l26> +)
    (<l26> ^set <l27> +)
    (<l1> ^attribute prepositions +)
    (<l1> ^name below1 +)
    (<l1> ^type state-pair +)
    (<l28> ^aname captured +)
    (<p1> ^aname captured +)
    (<p1> ^handle captured +)
    (<s1> ^gtype predicate +)
}

sp {answer*chunk-predicate-impasse*apply*complete*action*StateNoChange*t3473-1
    (state <s1> ^gtype action)
    (<s1> ^retrieve-handle action-default32)
    -->
    (<s1> ^action <p1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 2 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l27> +)
    (<l27> ^conditions <l1> +)
    (<l1> ^rtype single +)
    (<l1> ^args <l2> +)
    (<l2> ^num 1 +)
    (<l2> ^1 <l3> +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^1 <l5> +)
    (<l5> ^rtype single +)
    (<l5> ^args <l6> +)
    (<l6> ^num 1 +)
    (<l6> ^1 <l7> +)
    (<l7> ^rtype single +)
    (<l7> ^args <l8> +)
    (<l8> ^num 1 +)
    (<l8> ^1 <l9> +)
    (<l9> ^rtype single +)
    (<l9> ^args <l10> +)
    (<l9> ^negative false +)
    (<l9> ^parameter <l11> +)
    (<l11> ^num 0 +)
    (<l9> ^result <l12> +)
    (<l12> ^set <l13> +)
    (<l9> ^attribute primitive +)
    (<l9> ^name object +)
    (<l9> ^type attribute +)
    (<l7> ^negative false +)
    (<l7> ^parameter <l14> +)
    (<l14> ^num 0 +)
    (<l7> ^result <l15> +)
    (<l15> ^set <l16> +)
    (<l7> ^attribute category +)
    (<l7> ^name block +)
    (<l7> ^type attribute +)
    (<l5> ^negative false +)
    (<l5> ^parameter <l17> +)
    (<l17> ^num 0 +)
    (<l5> ^result <l18> +)
    (<l18> ^set <l19> +)
    (<l5> ^attribute color +)
    (<l5> ^name red1 +)
    (<l5> ^type attribute +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l20> +)
    (<l20> ^num 0 +)
    (<l3> ^result <l21> +)
    (<l21> ^set <l22> +)
    (<l3> ^attribute predicate +)
    (<l3> ^name clear +)
    (<l3> ^type concept +)
    (<l1> ^negative false +)
    (<l1> ^parameter <l23> +)
    (<l23> ^num 1 +)
    (<l23> ^1 <l24> +)
    (<l24> ^param-id 1 +)
    (<l24> ^type single +)
    (<l1> ^result <l25> +)
    (<l25> ^set <l26> +)
    (<l1> ^attribute predicate +)
    (<l1> ^name free +)
    (<l1> ^type concept +)
    (<l27> ^conditions <l28> +)
    (<l28> ^rtype single +)
    (<l28> ^args <l29> +)
    (<l29> ^num 1 +)
    (<l29> ^1 <l30> +)
    (<l30> ^rtype single +)
    (<l30> ^args <l31> +)
    (<l31> ^num 1 +)
    (<l31> ^1 <l32> +)
    (<l32> ^rtype single +)
    (<l32> ^args <l33> +)
    (<l32> ^negative false +)
    (<l32> ^parameter <l34> +)
    (<l34> ^num 0 +)
    (<l32> ^result <l35> +)
    (<l35> ^set <l36> +)
    (<l32> ^attribute primitive +)
    (<l32> ^name object +)
    (<l32> ^type attribute +)
    (<l30> ^negative false +)
    (<l30> ^parameter <l37> +)
    (<l37> ^num 0 +)
    (<l30> ^result <l38> +)
    (<l38> ^set <l39> +)
    (<l30> ^attribute category +)
    (<l30> ^name location +)
    (<l30> ^type attribute +)
    (<l28> ^negative false +)
    (<l28> ^parameter <l40> +)
    (<l40> ^num 1 +)
    (<l40> ^1 <l41> +)
    (<l41> ^param-id 2 +)
    (<l41> ^type single +)
    (<l28> ^result <l42> +)
    (<l42> ^set <l43> +)
    (<l28> ^attribute predicate +)
    (<l28> ^name clear +)
    (<l28> ^type concept +)
    (<l27> ^aname action-default32 +)
    (<p1> ^verb-structure <l45> +)
    (<l45> ^1 <l44> +)
    (<l44> ^verb-name move1 +)
    (<l44> ^verb-prep on1 +)
    (<l44> ^2 2 +)
    (<l44> ^1 1 +)
    (<p1> ^aname action-default32 +)
    (<p1> ^handle action-default32 +)
}

sp {answer*chunk-predicate-impasse*apply*complete*StateNoChange*t3459-1
    (state <s1> ^gtype <c2>)
    (<s1> ^<c2> <g1>)
    (<g1> ^condition <c1>)
    (<c1> ^name free)
    (<c1> ^type concept)
    (<c1> ^attribute predicate)
    -->
    (<s1> ^predicate <p1> +)
    (<p1> ^link <c1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 1 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l23> +)
    (<l23> ^conditions <l1> +)
    (<l1> ^rtype single +)
    (<l1> ^args <l2> +)
    (<l2> ^num 2 +)
    (<l2> ^2 <l3> +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^1 <l5> +)
    (<l5> ^rtype single +)
    (<l5> ^args <l6> +)
    (<l5> ^negative false +)
    (<l5> ^parameter <l7> +)
    (<l7> ^num 0 +)
    (<l5> ^result <l8> +)
    (<l8> ^set <l9> +)
    (<l5> ^attribute primitive +)
    (<l5> ^name object +)
    (<l5> ^type attribute +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l10> +)
    (<l10> ^num 0 +)
    (<l3> ^result <l11> +)
    (<l11> ^set <l12> +)
    (<l3> ^attribute category +)
    (<l3> ^name location +)
    (<l3> ^type attribute +)
    (<l2> ^1 <l13> +)
    (<l13> ^rtype single +)
    (<l13> ^args <l14> +)
    (<l13> ^negative false +)
    (<l13> ^parameter <l15> +)
    (<l15> ^num 1 +)
    (<l15> ^1 <l16> +)
    (<l16> ^param-id 1 +)
    (<l16> ^type single +)
    (<l13> ^result <l17> +)
    (<l17> ^set <l18> +)
    (<l13> ^attribute input-arg +)
    (<l13> ^name object +)
    (<l1> ^negative true +)
    (<l1> ^parameter <l19> +)
    (<l19> ^num 1 +)
    (<l19> ^1 <l20> +)
    (<l20> ^param-id 1 +)
    (<l20> ^type single +)
    (<l1> ^result <l21> +)
    (<l21> ^set <l22> +)
    (<l1> ^attribute prepositions +)
    (<l1> ^name on1 +)
    (<l1> ^type state-pair +)
    (<l23> ^aname free +)
    (<p1> ^aname free +)
    (<p1> ^handle free +)
    (<s1> ^gtype predicate +)
}

sp {answer*chunk-puzzle-impasse*apply*complete*StateNoChange*t2128-2
    (state <s1> ^retrieve-game blocks-world001)
    (<s1> -^opponent <o*1>)
    -->
    (<s1> ^retrieve-handle action-default14 +)
}

sp {answer*chunk-puzzle-impasse*apply*complete*StateNoChange*t2128-1
    (state <s1> ^retrieve-game blocks-world001)
    (<s1> -^opponent <o*1>)
    -->
    (<s1> ^retrieve-handle goal-default19 +)
}

sp {answer*chunk-predicate-impasse*apply*complete*action*StateNoChange*t2017-1
    (state <s1> ^gtype goal)
    (<s1> ^retrieve-handle goal-default19)
    -->
    (<s1> ^goal <p1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 1 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l23> +)
    (<l23> ^conditions <l1> +)
    (<l1> ^rtype single +)
    (<l1> ^args <l2> +)
    (<l2> ^num 2 +)
    (<l2> ^2 <l3> +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^1 <l5> +)
    (<l5> ^rtype single +)
    (<l5> ^args <l6> +)
    (<l6> ^num 1 +)
    (<l6> ^1 <l7> +)
    (<l7> ^rtype single +)
    (<l7> ^args <l8> +)
    (<l7> ^negative false +)
    (<l7> ^parameter <l9> +)
    (<l9> ^num 0 +)
    (<l7> ^result <l10> +)
    (<l10> ^set <l11> +)
    (<l7> ^attribute primitive +)
    (<l7> ^name object +)
    (<l7> ^type attribute +)
    (<l5> ^negative false +)
    (<l5> ^parameter <l12> +)
    (<l12> ^num 0 +)
    (<l5> ^result <l13> +)
    (<l13> ^set <l14> +)
    (<l5> ^attribute category +)
    (<l5> ^name block +)
    (<l5> ^type attribute +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l15> +)
    (<l15> ^num 0 +)
    (<l3> ^result <l16> +)
    (<l16> ^set <l17> +)
    (<l3> ^attribute color +)
    (<l3> ^name orange1 +)
    (<l3> ^type attribute +)
    (<l2> ^1 <l18> +)
    (<l1> ^negative false +)
    (<l1> ^parameter <l19> +)
    (<l19> ^num 1 +)
    (<l19> ^1 <l20> +)
    (<l20> ^param-id 1 +)
    (<l20> ^type single +)
    (<l1> ^result <l21> +)
    (<l21> ^set <l22> +)
    (<l1> ^attribute prepositions +)
    (<l1> ^name below1 +)
    (<l1> ^type state-pair +)
    (<l18> ^rtype single +)
    (<l18> ^args <l41> +)
    (<l41> ^num 1 +)
    (<l41> ^1 <l42> +)
    (<l42> ^rtype single +)
    (<l42> ^args <l43> +)
    (<l43> ^num 1 +)
    (<l43> ^1 <l44> +)
    (<l44> ^rtype single +)
    (<l44> ^args <l45> +)
    (<l44> ^negative false +)
    (<l44> ^parameter <l46> +)
    (<l46> ^num 0 +)
    (<l44> ^result <l47> +)
    (<l47> ^set <l48> +)
    (<l44> ^attribute primitive +)
    (<l44> ^name object +)
    (<l44> ^type attribute +)
    (<l42> ^negative false +)
    (<l42> ^parameter <l49> +)
    (<l49> ^num 0 +)
    (<l42> ^result <l50> +)
    (<l50> ^set <l51> +)
    (<l42> ^attribute category +)
    (<l42> ^name block +)
    (<l42> ^type attribute +)
    (<l18> ^negative false +)
    (<l18> ^parameter <l52> +)
    (<l52> ^num 0 +)
    (<l18> ^result <l53> +)
    (<l53> ^set <l54> +)
    (<l18> ^attribute color +)
    (<l18> ^name red1 +)
    (<l18> ^type attribute +)
    (<l23> ^conditions <l24> +)
    (<l24> ^rtype single +)
    (<l24> ^args <l25> +)
    (<l25> ^num 2 +)
    (<l25> ^2 <l26> +)
    (<l26> ^rtype single +)
    (<l26> ^args <l27> +)
    (<l27> ^num 1 +)
    (<l27> ^1 <l28> +)
    (<l28> ^rtype single +)
    (<l28> ^args <l29> +)
    (<l29> ^num 1 +)
    (<l29> ^1 <l30> +)
    (<l30> ^rtype single +)
    (<l30> ^args <l31> +)
    (<l30> ^negative false +)
    (<l30> ^parameter <l32> +)
    (<l32> ^num 0 +)
    (<l30> ^result <l33> +)
    (<l33> ^set <l34> +)
    (<l30> ^attribute primitive +)
    (<l30> ^name object +)
    (<l30> ^type attribute +)
    (<l28> ^negative false +)
    (<l28> ^parameter <l35> +)
    (<l35> ^num 0 +)
    (<l28> ^result <l36> +)
    (<l36> ^set <l37> +)
    (<l28> ^attribute category +)
    (<l28> ^name block +)
    (<l28> ^type attribute +)
    (<l26> ^negative false +)
    (<l26> ^parameter <l38> +)
    (<l38> ^num 0 +)
    (<l26> ^result <l39> +)
    (<l39> ^set <l40> +)
    (<l26> ^attribute color +)
    (<l26> ^name green1 +)
    (<l26> ^type attribute +)
    (<l25> ^1 <l18> +)
    (<l24> ^negative false +)
    (<l24> ^parameter <l55> +)
    (<l55> ^num 1 +)
    (<l55> ^1 <l56> +)
    (<l56> ^param-id 1 +)
    (<l56> ^type single +)
    (<l24> ^result <l57> +)
    (<l57> ^set <l58> +)
    (<l24> ^attribute prepositions +)
    (<l24> ^name on1 +)
    (<l24> ^type state-pair +)
    (<l23> ^aname goal-default19 +)
    (<p1> ^aname goal-default19 +)
    (<p1> ^handle goal-default19 +)
}

sp {answer*top-pair*apply*complete*t2005-1
    (state <s1> ^gtype <c1>)
    (<s1> ^list <l1>)
    (<l1> ^game <g1>)
    (<s1> ^world <n2>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^instance <n4>)
    (<n3> ^handle <c2>)
    (<n4> ^2 <n5>)
    (<n4> ^1 <n6>)
    (<s1> ^<c1> <a1>)
    (<s1> ^{ << action goal predicate failure heuristic >> <c7> } <a3>)
    (<a3> ^condition <n1>)
    (<n1> ^rtype single)
    (<n1> ^negative false)
    (<n1> ^name <c2>)
    (<n1> ^type state-pair)
    (<n1> ^args <a2>)
    (<a2> ^num 2)
    (<a2> ^2 <c4>)
    (<c4> -^rtype set)
    (<a2> ^1 <c5>)
    (<c5> -^rtype set)
    (<n1> ^parameter <p1>)
    (<p1> ^num { < 2 <c6> })
    (<n1> ^result <r3>)
    (<r3> ^set <p5>)
    (<c4> ^result <r2>)
    (<r2> ^set <p4>)
    (<p4> ^instance <i2>)
    (<i2> ^1 <n5>)
    (<c5> ^result <r1>)
    (<r1> ^set <p3>)
    (<p3> ^instance <i1>)
    (<i1> ^1 <n6>)
    (<n1> ^attribute <c3>)
    -->
    (<p5> ^instance <i3> +)
    (<i3> ^1 <n6> +)
}

sp {answer*chunk-predicate-impasse*apply*complete*action*StateNoChange*t1253-1
    (state <s1> ^gtype action)
    (<s1> ^retrieve-handle action-default14)
    -->
    (<s1> ^action <p1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 2 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l17> +)
    (<l17> ^conditions <l1> +)
    (<l1> ^rtype single +)
    (<l1> ^args <l2> +)
    (<l2> ^num 1 +)
    (<l2> ^1 <l3> +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l4> ^num 1 +)
    (<l4> ^1 <l5> +)
    (<l5> ^rtype single +)
    (<l5> ^args <l6> +)
    (<l5> ^negative false +)
    (<l5> ^parameter <l7> +)
    (<l7> ^num 0 +)
    (<l5> ^result <l8> +)
    (<l8> ^set <l9> +)
    (<l5> ^attribute primitive +)
    (<l5> ^name object +)
    (<l5> ^type attribute +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l10> +)
    (<l10> ^num 0 +)
    (<l3> ^result <l11> +)
    (<l11> ^set <l12> +)
    (<l3> ^attribute category +)
    (<l3> ^name block +)
    (<l3> ^type attribute +)
    (<l1> ^negative false +)
    (<l1> ^parameter <l13> +)
    (<l13> ^num 1 +)
    (<l13> ^1 <l14> +)
    (<l14> ^param-id 1 +)
    (<l14> ^type single +)
    (<l1> ^result <l15> +)
    (<l15> ^set <l16> +)
    (<l1> ^attribute predicate +)
    (<l1> ^name clear +)
    (<l1> ^type concept +)
    (<l17> ^conditions <l18> +)
    (<l18> ^rtype single +)
    (<l18> ^args <l19> +)
    (<l19> ^num 1 +)
    (<l19> ^1 <l20> +)
    (<l20> ^rtype single +)
    (<l20> ^args <l21> +)
    (<l20> ^negative false +)
    (<l20> ^parameter <l22> +)
    (<l22> ^num 0 +)
    (<l20> ^result <l23> +)
    (<l23> ^set <l24> +)
    (<l20> ^attribute primitive +)
    (<l20> ^name object +)
    (<l20> ^type attribute +)
    (<l18> ^negative false +)
    (<l18> ^parameter <l25> +)
    (<l25> ^num 1 +)
    (<l25> ^1 <l26> +)
    (<l26> ^param-id 2 +)
    (<l26> ^type single +)
    (<l18> ^result <l27> +)
    (<l27> ^set <l28> +)
    (<l18> ^attribute predicate +)
    (<l18> ^name clear +)
    (<l18> ^type concept +)
    (<l17> ^aname action-default14 +)
    (<p1> ^verb-structure <l30> +)
    (<l30> ^1 <l29> +)
    (<l29> ^verb-name move1 +)
    (<l29> ^verb-prep on1 +)
    (<l29> ^2 2 +)
    (<l29> ^1 1 +)
    (<p1> ^aname action-default14 +)
    (<p1> ^handle action-default14 +)
}

sp {answer*with-attribute*apply*complete*instance*t1239-1
    (state <s1> ^gtype <c1>)
    (<s1> ^list <l1>)
    (<l1> ^game <g1>)
    (<s1> ^<c1> <a1>)
    (<s1> ^{ << action goal predicate failure heuristic >> <c8> } <a3>)
    (<a3> ^condition <c2>)
    (<c2> ^rtype single)
    (<c2> ^type attribute)
    (<c2> ^args <a2>)
    (<c2> ^negative <c3>)
    (<c2> ^parameter <p1>)
    (<p1> ^num { < 2 <c7> })
    (<a2> ^1 <c4>)
    (<c2> ^result <r3>)
    (<r3> ^set <p3>)
    (<c4> ^result <r1>)
    (<r1> ^set <r2>)
    (<r2> ^instance <i1>)
    (<i1> ^1 <n1>)
    (<n1> ^predicates <p2>)
    (<c2> ^name <c5>)
    (<c2> ^attribute <c6>)
    (<p2> ^<c6> <c5>)
    -->
    (<p3> ^instance <i2> +)
    (<i2> ^1 <n1> +)
}

sp {answer*chunk-predicate-impasse*apply*complete*StateNoChange*t1230-1
    (state <s1> ^gtype <c2>)
    (<s1> ^<c2> <g1>)
    (<g1> ^condition <c1>)
    (<c1> ^name clear)
    (<c1> ^type concept)
    (<c1> ^attribute predicate)
    -->
    (<s1> ^predicate <p1> +)
    (<p1> ^link <c1> +)
    (<p1> ^potential-args <p2> +)
    (<p1> ^parameter-set <p3> +)
    (<p3> ^argnum 1 +)
    (<p1> ^formated predicate +)
    (<p1> ^primary-rtype single +)
    (<p1> ^nlp-set <l18> +)
    (<l18> ^conditions <l1> +)
    (<l1> ^rtype single +)
    (<l1> ^args <l2> +)
    (<l2> ^num 2 +)
    (<l2> ^2 <l3> +)
    (<l3> ^rtype single +)
    (<l3> ^args <l4> +)
    (<l3> ^negative false +)
    (<l3> ^parameter <l5> +)
    (<l5> ^num 0 +)
    (<l3> ^result <l6> +)
    (<l6> ^set <l7> +)
    (<l3> ^attribute primitive +)
    (<l3> ^name object +)
    (<l3> ^type attribute +)
    (<l2> ^1 <l8> +)
    (<l8> ^rtype single +)
    (<l8> ^args <l9> +)
    (<l8> ^negative false +)
    (<l8> ^parameter <l10> +)
    (<l10> ^num 1 +)
    (<l10> ^1 <l11> +)
    (<l11> ^param-id 1 +)
    (<l11> ^type single +)
    (<l8> ^result <l12> +)
    (<l12> ^set <l13> +)
    (<l8> ^attribute input-arg +)
    (<l8> ^name object +)
    (<l1> ^negative true +)
    (<l1> ^parameter <l14> +)
    (<l14> ^num 1 +)
    (<l14> ^1 <l15> +)
    (<l15> ^param-id 1 +)
    (<l15> ^type single +)
    (<l1> ^result <l16> +)
    (<l16> ^set <l17> +)
    (<l1> ^attribute prepositions +)
    (<l1> ^name below1 +)
    (<l1> ^type state-pair +)
    (<l18> ^aname clear +)
    (<p1> ^aname clear +)
    (<p1> ^handle clear +)
    (<s1> ^gtype predicate +)
}

sp {answer*top-pair*apply*complete*t946-1
    (state <s1> ^gtype <c1>)
    (<s1> ^list <l1>)
    (<l1> ^game <g1>)
    (<s1> ^world <n2>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^handle <c2>)
    (<s1> ^<c1> <a1>)
    (<s1> ^{ << action goal predicate failure heuristic >> <c7> } <a3>)
    (<a3> ^condition <n1>)
    (<n1> ^rtype single)
    (<n1> ^negative true)
    (<n1> ^name <c2>)
    (<n1> ^type state-pair)
    (<n1> ^args <a2>)
    (<a2> ^num 2)
    (<a2> ^1 <c4>)
    (<c4> -^rtype set)
    (<n1> ^parameter <p1>)
    (<p1> ^num { < 2 <c5> })
    (<a2> ^2 <c6>)
    (<n1> ^result <r3>)
    (<r3> ^set <p3>)
    (<c4> ^result <r1>)
    (<r1> ^set <r2>)
    (<r2> ^instance <i1>)
    (<i1> ^1 <n4>)
   -{ (<n3> ^instance <instance>)
      (<instance> ^1 <n4>)
      (<instance> ^2 <objb>)
      (<c6> ^result <r*2>)
      (<r*2> ^set <s*4>)
      (<s*4> ^instance <i*2>)
      (<i*2> ^1 <objb>)}
    (<n1> ^attribute <c3>)
    -->
    (<p3> ^instance <i2> +)
    (<i2> ^1 <n4> +)
}

sp {answer*with-attribute*apply*complete*instance*t940-1
    (state <s1> ^gtype <c1>)
    (<s1> ^list <l1>)
    (<l1> ^game <g1>)
    (<s1> ^world <n1>)
    (<n1> ^objects <c4>)
    (<c4> ^object <n2>)
    (<n2> -^handle self)
    (<s1> ^<c1> <a2>)
    (<s1> ^{ << action goal predicate failure heuristic >> <c5> } <a4>)
    (<a4> ^condition <c2>)
    (<c2> ^rtype single)
    (<c2> ^name object)
    (<c2> ^type attribute)
    (<c2> ^attribute primitive)
    (<c2> ^args <a3>)
    (<a3> -^1 <a1>)
    (<c2> ^negative <c3>)
    (<c2> ^parameter <p1>)
    (<c2> ^result <r1>)
    (<r1> ^set <p2>)
    -->
    (<p2> ^instance <i1> +)
    (<i1> ^1 <n2> +)
}

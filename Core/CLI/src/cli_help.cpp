/* Auto-generated by gen_cli_help.sh on Fri Sep  9 16:11:10 EDT 2016 */
#include <map>
#include "portability.h"
#include "cli_CommandLineInterface.h"

using namespace cli;
using namespace sml;

std::map<std::string, const char*> docstrings;

void initdocstrings();

bool CommandLineInterface::DoHelp(const std::vector<std::string>& argv)
{
    std::map<std::string, const char*>::iterator i;
    
    if (docstrings.size() == 0)
    {
        initdocstrings();
    }
    
    if (argv.size() == 1)
    {
        m_Result << "Available commands:" << std::endl << std::endl;
        for (i = docstrings.begin(); i != docstrings.end(); ++i)
        {
            m_Result << i->first << std::endl;
        }
    }
    else
    {
        if ((i = docstrings.find(argv[1])) == docstrings.end())
        {
            m_Result << "No such command" << std::endl;
            return false;
        }
        m_Result << i->second;
    }
    return true;
}

void initdocstrings()
{
	docstrings["add-wme"] = 
		"Manually add an element to working memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  add-wme id [^]attribute value [+]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* aw\n"
		"\n"
		"Options\n"
		"\n"
		"Option    Description\n"
		"id        Must be an existing identifier.\n"
		"^         Leading ^ on attribute is optional.\n"
		"attribute Attribute can be any Soar symbol. Use * to have Soar create a new\n"
		"          identifier.\n"
		"value     Value can be any soar symbol. Use * to have Soar create a new\n"
		"          identifier.\n"
		"+         If the optional preference is specified, its value must be +\n"
		"          (acceptable).\n"
		"\n"
		"Description\n"
		"\n"
		"Manually add an element to working memory. add-wme is often used by an input\n"
		"function to update Soar's information about the state of the external world.\n"
		"add-wme adds a new wme with the given id, attribute, value and optional\n"
		"preference. The given id must be an existing identifier. The attribute and\n"
		"value fields can be any Soar symbol. If * is given in the attribute or value\n"
		"field, Soar creates a new identifier (symbol) for that field. If the preference\n"
		"is given, it can only have the value + to indicate that an acceptable\n"
		"preference should be created for this wme.\n"
		"Note that because the id must already exist in working memory, the WME that you\n"
		"are adding will be attached (directly or indirectly) to the top-level state. As\n"
		"with other WME's, any WME added via a call to add-wme will automatically be\n"
		"removed from working memory once it is no longer attached to the top-level\n"
		"state.\n"
		"\n"
		"Examples\n"
		"\n"
		"This example adds the attribute/value pair ^message-status received to the\n"
		"identifier (symbol) S1:\n"
		"\n"
		"  add-wme S1 ^message-status received\n"
		"\n"
		"This example adds an attribute/value pair with an acceptable preference to the\n"
		"identifier (symbol) Z2. The attribute is message and the value is a unique\n"
		"identifier generated by Soar. Note that since the ^ is optional, it has been\n"
		"left off in this case.\n"
		"\n"
		"  add-wme Z2 message * +\n"
		"\n"
		"Warnings\n"
		"\n"
		"Be careful how you use this command. It may have weird side effects (possibly\n"
		"even including system crashes). For example, the chunker can't backtrace\n"
		"through wmes created via add-wme nor will such wmes ever be removed thru Soar's\n"
		"garbage collection. Manually removing context/impasse wmes may have unexpected\n"
		"side effects.\n"
		"\n"
		"See Also\n"
		"\n"
		"remove-wme\n"
	;
	docstrings["alias"] = 
		"Define a new alias, or command, using existing commands and arguments.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  alias [name [ [args]]]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* a\n"
		"\n"
		"Description\n"
		"\n"
		"This command defines new aliases by creating Soar procedures with the given\n"
		"name. The new procedure can then take an arbitrary number of arguments which\n"
		"are post-pended to the given definition and then that entire string is executed\n"
		"as a command. The definition must be a single command, multiple commands are\n"
		"not allowed. The alias procedure checks to see if the name already exists, and\n"
		"does not destroy existing procedures or aliases by the same name. Existing\n"
		"aliases can be removed by using the unalias command. With no arguments, alias\n"
		"returns the list of defined aliases. With only the name given, alias returns\n"
		"the current definition.\n"
		"\n"
		"Examples\n"
		"\n"
		"The alias wmes is defined as:\n"
		"\n"
		"  alias wmes print -i\n"
		"\n"
		"If the user executes a command such as:\n"
		"\n"
		"  wmes {(* ^superstate nil)}\n"
		"\n"
		"... it is as if the user had typed this command:\n"
		"\n"
		"  print -i {(* ^superstate nil)}\n"
		"\n"
		"To check what a specific alias is defined as, you would type\n"
		"\n"
		"  alias wmes\n"
		"\n"
		"See Also\n"
		"\n"
		"unalias\n"
	;
	docstrings["allocate"] = 
		"Allocate additional 32 kilobyte blocks of memory for a specified memory pool\n"
		"without running Soar.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  allocate [pool blocks]\n"
		"\n"
		"Description\n"
		"\n"
		"Soar allocates blocks of memory for its memory pools as it is needed during a\n"
		"run (or during other actions like loading productions). Unfortunately, this\n"
		"behavior translates to an increased run time for the first run of a memory-\n"
		"intensive agent. To mitigate this, blocks can be allocated before a run by\n"
		"using this command.\n"
		"Issuing the command with no parameters lists current pool usage, exactly like\n"
		"stats command's memory flag.\n"
		"Issuing the command with part of a pool's name and a positive integer will\n"
		"allocate that many additional blocks for the specified pool. Only the first few\n"
		"letters of the pool's name are necessary. If more than one pool starts with the\n"
		"given letters, which pool will be chosen is unspecified.\n"
		"Memory pool block size in this context is approximately 32 kilobytes, the exact\n"
		"size determined during agent initialization.\n"
		"\n"
		"See Also\n"
		"\n"
		"stats\n"
	;
	docstrings["capture-input"] = 
		"Store the input wmes in a file for reloading later.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  capture-input --open filename [--flush]\n"
		"  capture-input [--query]\n"
		"  capture-input --close\n"
		"\n"
		"Options\n"
		"\n"
		"Option      Description\n"
		"filename    Open filename and begin recording input.\n"
		"-o, --open  Writes captured input to file overwriting any existing data.\n"
		"-f, --flush Writes input to file as soon as it is encountered instead of\n"
		"            storing it in RAM and writing when capturing is turned off.\n"
		"-q, --query Returns open if input capturing is active or closed if capturing is\n"
		"            not active.\n"
		"-c, --close Stop capturing input and close the file, writing captured input\n"
		"            unless the flush option is given.\n"
		"\n"
		"Description\n"
		"\n"
		"Save agent commands issued from the input cycle function in a file for\n"
		"reloading later.\n"
		"This command may be used to start and stop the recording of input function\n"
		"commands as created by an external simulation. Commands are recorded decision\n"
		"cycle by decision cycle. Use the command replay-input to replay the sequence.\n"
		"Note that this command seeds the random number generator and writes the seed to\n"
		"the capture file.\n"
		"\n"
		"See Also\n"
		"\n"
		"replay-input\n"
	;
	docstrings["cd"] = 
		"Change directory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  cd [directory]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* chdir\n"
		"\n"
		"Options\n"
		"\n"
		"Option    Description\n"
		"directory The directory to change to, can be relative or full path.\n"
		"\n"
		"Description\n"
		"\n"
		"Change the current working directory. If run with no arguments, returns to the\n"
		"directory that the command line interface was started in, often referred to as\n"
		"the home directory.\n"
		"\n"
		"Examples\n"
		"\n"
		"To move to the relative directory named ../home/soar/agents:\n"
		"\n"
		"  cd ../home/soar/agents\n"
		"\n"
		"See Also\n"
		"\n"
		"dirs ls pushd popd source pwd\n"
	;
	docstrings["chunk"] = 
		"learn\n"
		"\n"
		"Set the parameters for chunking.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  learn [-l]\n"
		"  learn [-d|E|o]\n"
		"  learn [-eabnNpP]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* l\n"
		"\n"
		"Options\n"
		"\n"
		"Option                      Description\n"
		"-e, --enable, --on          Turn chunking on. Can be modified by -a or -b.\n"
		"-d, --disable, --off        Turn all chunking off. (default)\n"
		"-E, --except                Learning is on, except as specified by RHS dont-\n"
		"                            learn actions.\n"
		"-o, --only                  Chunking is on only as specified by RHS force-learn\n"
		"                            actions.\n"
		"-l, --list                  Prints listings of dont-learn and force-learn\n"
		"                            states.\n"
		"-a, --all-levels            Build chunks whenever a subgoal returns a result.\n"
		"                            Learning must be enabled.\n"
		"                            Build chunks only for subgoals that have not yet\n"
		"-b, --bottom-up             had any subgoals with chunks built. Learning must\n"
		"                            be enabled.\n"
		"-n, --local-negations       Build chunks when local negation encountered in\n"
		"                            backtraces. (default)\n"
		"-N, --no-local-negations    Do not build chunks when local negation encountered\n"
		"                            in backtraces.\n"
		"-p, --desirability-prefs    Add relevant desirability preferences to\n"
		"                            backtraces.\n"
		"-P, --no-desirability-prefs Do not add any desirability preferences to\n"
		"                            backtraces. (default)\n"
		"\n"
		"Description\n"
		"\n"
		"The learn command controls the parameters for chunking. With no arguments, this\n"
		"command prints out the current learning environment status. If arguments are\n"
		"provided, they will alter the learning environment as described in the options\n"
		"and arguments table. The watch command can be used to provide various levels of\n"
		"detail when productions are learned. Learning is disabled by default.\n"
		"With the --on flag, chunking is on all the time. With the --except flag,\n"
		"chunking is on, but Soar will not create chunks for states that have had RHS\n"
		"dont-learn actions executed in them. With the --only flag, chunking is off, but\n"
		"Soar will create chunks for only those states that have had RHS force-learn\n"
		"actions executed in them. With the --off flag, chunking is off all the time.\n"
		"The --only flag and its companion force-learn RHS action allow Soar developers\n"
		"to turn learning on in a particular problem space, so that they can focus on\n"
		"debugging the learning problems in that particular problem space without having\n"
		"to address the problems elsewhere in their programs at the same time.\n"
		"Similarly, the --except flag and its companion dont-learn RHS action allow\n"
		"developers to temporarily turn learning off for debugging purposes. These\n"
		"facilities are provided as debugging tools, and do not correspond to any theory\n"
		"of learning in Soar.\n"
		"The following final six settings are orthogonal to the --on, --except, --only,\n"
		"and --off flags, and so, may be used in combination with them.\n"
		"The --all-levels and --bottom-up control when chunks are formed when there are\n"
		"multiple levels of subgoals. With bottom-up learning, chunks are learned only\n"
		"in states in which no subgoal has yet generated a chunk. In this mode, chunks\n"
		"are learned only for the \"bottom\" of the subgoal hierarchy and not the\n"
		"intermediate levels. With experience, the subgoals at the bottom will be\n"
		"replaced by the chunks, allowing higher level subgoals to be chunked.\n"
		"The options --local-negations and --no-local-negations control whether or not\n"
		"chunks can be created that are derived from rules that check for negated WMEs\n"
		"on the substate (local negations). Chunking through local negations can result\n"
		"in overgeneral chunks, but disabling this ability will reduce the number of\n"
		"chunks formed. The default is to enable chunking through local negations.\n"
		"If chunking through local negations is disabled, to see when chunks are\n"
		"discarded (and why), set watch --learning print (see watch command).\n"
		"The options --desirability-prefs and --no-desirability-prefs control whether or\n"
		"not desirability preferences are added to the context dependent preference set,\n"
		"which is the set of operator evaluation preferences that led to the selection\n"
		"of an operator in a subgoal. All preferences in the CDPS are backtraced through\n"
		"when creating justifications and chunks. When this option is disabled, only\n"
		"requirement preferences (requires and prohibits) will be added to the CDPS.\n"
		"When this option is enabled, relevant desirability prefs (better, best, worse,\n"
		"worst, indifferent) will also be added, producing more specific and possibly\n"
		"correct chunks. The default is to not include desirability preferences.\n"
		"Learning can be turned on or off at any point during a run.\n"
		"\n"
		"Examples\n"
		"\n"
		"To enable learning only at the lowest subgoal level:\n"
		"\n"
		"  learn -e b\n"
		"\n"
		"To see all the force-learn and dont-learn states registered by RHS actions\n"
		"\n"
		"  learn -l\n"
		"\n"
		"See Also\n"
		"\n"
		"watch explain-backtraces save-backtraces\n"
	;
	docstrings["cli"] = 
		"Manipulate external command line interface modules.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  cli <module-name> on|off\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"on     Turn a command-line module on\n"
		"off    Turn a command-line module off\n"
		"\n"
		"Description\n"
		"\n"
		"The cli command is used to interface to special, external libraries that extend\n"
		"the functionality of the Soar command line interface. For example, a module may\n"
		"provide the ability to run Tcl or Python code from any Soar command line.\n"
		"The first time that you turn a module on, Soar will attempt to look for a\n"
		"dynamically-linked library based on the module-name passed to the cli command.\n"
		"Specifically, it looks for a dll named\n"
		"[dllprefix][language]SoarLib.[dllextension]\n"
		"(The dll prefix and extension vary depending on the platform.)\n"
		"When the on parameter is given, all future Soar commands will be passed to the\n"
		"module for processing. This allows the module to provide additional\n"
		"functionality.\n"
		"Similarly, the off message will send the CLI library an off message that will\n"
		"cause it to unregister all relevant callback handlers and stop processing Soar\n"
		"commands.\n"
		"If you'd like to have a cli mode, like Tcl, turned on automatically when Soar\n"
		"launches, add the enabling command to your settings.soar file in the main Soar\n"
		"directory. This activates the mode on initial launch, allowing you to\n"
		"immediately source files that require that additional functionality, for\n"
		"example, files that contain tcl code.\n"
		"\n"
		"Examples\n"
		"\n"
		"To turn on Tcl mode:\n"
		"\n"
		"  cli tcl on\n"
		"\n"
		"To turn off Tcl mode:\n"
		"\n"
		"  cli tcl off\n"
	;
	docstrings["clog"] = 
		"Record all user-interface input and output to a file.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  clog -[Ae] filename\n"
		"  clog -a string\n"
		"  clog [-cdoq]\n"
		"\n"
		"Options\n"
		"\n"
		"Option                                Description\n"
		"filename                              Open filename and begin logging.\n"
		"-c, --close, -o, --off, -d, --disable Stop logging, close the file.\n"
		"-a, --add string                      Add the given string to the open log\n"
		"                                      file.\n"
		"-q, --query                           Returns open if logging is active or\n"
		"                                      closed if logging is not active.\n"
		"                                      Opens existing log file named filename\n"
		"-A, --append, -e, --existing          and logging is added at the end of the\n"
		"                                      file.\n"
		"\n"
		"Description\n"
		"\n"
		"The clog command allows users to save all user-interface input and output to a\n"
		"file. When Soar is logging to a file, everything typed by the user and\n"
		"everything printed by Soar is written to the file (in addition to the screen).\n"
		"Invoke clog with no arguments (or with -q) to query the current logging status.\n"
		"Pass a filename to start logging to that file (relative to the command line\n"
		"interface's home directory). Use the close option to stop logging.\n"
		"\n"
		"Examples\n"
		"\n"
		"To initiate logging and place the record in foo.log:\n"
		"\n"
		"  clog foo.log\n"
		"\n"
		"To append log data to an existing foo.log file:\n"
		"\n"
		"  clog -A foo.log\n"
		"\n"
		"To terminate logging and close the open log file:\n"
		"\n"
		"  clog -c\n"
		"\n"
		"Known Issues\n"
		"\n"
		"Does not log everything when structured output is selected.\n"
		"\n"
		"See also\n"
		"\n"
		"command-to-file\n"
	;
	docstrings["command-to-file"] = 
		"Dump the printed output and results of a command to a file.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  command-to-file [-a] filename command [args]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* ctf\n"
		"\n"
		"Options\n"
		"\n"
		"Option       Description\n"
		"-a, --append Append if file exists.\n"
		"filename     The file to log the results of the command to\n"
		"command      The command to log\n"
		"args         Arguments for command\n"
		"\n"
		"Description\n"
		"\n"
		"This command logs a single command. It is almost equivalent to opening a log\n"
		"using clog, running the command, then closing the log, the only difference is\n"
		"that input isn't recorded.\n"
		"Running this command while a log is open is an error. There is currently not\n"
		"support for multiple logs in the command line interface, and this would be an\n"
		"instance of multiple logs.\n"
		"This command echos output both to the screen and to a file, just like clog.\n"
		"\n"
		"See also\n"
		"\n"
		"clog\n"
	;
	docstrings["default-wme-depth"] = 
		"Set the level of detail used to print WMEs.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  default-wme-depth [depth]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* set-default-depth\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"depth  A non-negative integer.\n"
		"\n"
		"Description\n"
		"\n"
		"The default-wme-depth command reflects the default depth used when working\n"
		"memory elements are printed (using the print). The default value is 1. When the\n"
		"command is issued with no arguments, default-wme-depth returns the current\n"
		"value of the default depth. When followed by an integer value, default-wme-\n"
		"depth sets the default depth to the specified value. This default depth can be\n"
		"overridden on any particular call to the print command by explicitly using the\n"
		"--depth flag, e.g. print --depth 10 args.\n"
		"By default, the print command prints objects in working memory, not just the\n"
		"individual working memory element. To limit the output to individual working\n"
		"memory elements, the --internal flag must also be specified in the print\n"
		"command. Thus when the print depth is 0, by default Soar prints the entire\n"
		"object, which is the same behavior as when the print depth is 1. But if --\n"
		"internal is also specified, then a depth of 0 prints just the individual WME,\n"
		"while a depth of 1 prints all WMEs which share that same identifier. This is\n"
		"true when printing timetags, identifiers or WME patterns.\n"
		"When the depth is greater than 1, the identifier links from the specified WME's\n"
		"will be followed, so that additional substructure is printed. For example, a\n"
		"depth of 2 means that the object specified by the identifier, wme-pattern, or\n"
		"timetag will be printed, along with all other objects whose identifiers appear\n"
		"as values of the first object. This may result in multiple copies of the same\n"
		"object being printed out. If --internal is also specified, then individuals\n"
		"WMEs and their timetags will be printed instead of the full objects.\n"
		"\n"
		"See Also\n"
		"\n"
		"print\n"
	;
	docstrings["dirs"] = 
		"List the directory stack.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  dirs\n"
		"\n"
		"Description\n"
		"\n"
		"This command lists the directory stack. Agents can move through a directory\n"
		"structure by pushing and popping directory names. The dirs command returns the\n"
		"stack.\n"
		"The command pushd places a new \"agent current directory\" on top of the\n"
		"directory stack and changes to it. The command popd removes the directory at\n"
		"the top of the directory stack and changes to the previous directory which now\n"
		"appears at the top of the stack.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd ls pushd popd source pwd\n"
	;
	docstrings["echo"] = 
		"Print a string to the current output device.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  echo [--nonewline] [string]\n"
		"\n"
		"Options\n"
		"\n"
		"Option          Description\n"
		"string          The string to print.\n"
		"-n, --nonewline Supress printing of the newline character\n"
		"\n"
		"Description\n"
		"\n"
		"This command echos the args to the current output stream. This is normally\n"
		"stdout but can be set to a variety of channels. If an arg is --nonewline then\n"
		"no newline is printed at the end of the printed strings. Otherwise a newline is\n"
		"printed after printing all the given args. Echo is the easiest way to add user\n"
		"comments or identification strings in a log file.\n"
		"\n"
		"Examples\n"
		"\n"
		"This example will add these comments to the screen and any open log file.\n"
		"\n"
		"  echo This is the first run with disks = 12\n"
		"\n"
		"See Also\n"
		"\n"
		"clog\n"
	;
	docstrings["echo-commands"] = 
		"Set whether or not commands are echoed to other connected debuggers.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  echo-commands [-yn]\n"
		"\n"
		"Options\n"
		"\n"
		"Option    Description\n"
		"-n, --no  Do not echo commands.\n"
		"-y, --yes Do echo commands.\n"
		"\n"
		"Description\n"
		"\n"
		"Setting this on will echo typed commands to other connected debuggers.\n"
		"Otherwise, the output is displayed without the initiating command, and this can\n"
		"be confusing.\n"
	;
	docstrings["edit-production"] = 
		"Move focus in an editor to this production.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  edit-production production_name\n"
		"\n"
		"Options\n"
		"\n"
		"Option          Description\n"
		"production_name The name of the production to edit.\n"
		"\n"
		"Description\n"
		"\n"
		"If an editor (currently limited to Visual Soar) is open and connected to Soar,\n"
		"this command causes the editor to open the file containing this production and\n"
		"move the cursor to the start of the production. If there is no editor connected\n"
		"to Soar, the command does nothing. In order to connect Visual Soar to Soar,\n"
		"launch Visual Soar and choose Connect from the Soar Runtime menu. Then open the\n"
		"Visual Soar project that you're working on. At that point, you're set up and\n"
		"edit-production will start to work.\n"
		"\n"
		"Examples\n"
		"\n"
		"  edit-production my*production*name\n"
		"\n"
		"See Also\n"
		"\n"
		"sp\n"
	;
	docstrings["epmem"] = 
		"Control the behavior of episodic memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  epmem\n"
		"  epmem -e|--enable|--on\n"
		"  epmem -d|--disable|--off\n"
		"  epmem -i|--init\n"
		"  epmem -c|--close\n"
		"  epmem -g|--get <parameter>\n"
		"  epmem -s|--set <parameter> <value>\n"
		"  epmem -S|--stats [<statistic>]\n"
		"  epmem -t|--timers [<timer>]\n"
		"  epmem -v|--viz <episode id>\n"
		"  epmem -p|--print <episode id>\n"
		"  epmem -b|--backup <file name>\n"
		"\n"
		"Options\n"
		"\n"
		"Option               Description\n"
		"-e, --enable, --on   Enable episodic memory.\n"
		"-d, --disable, --off Disable episodic memory.\n"
		"-i, --init           Re-initialize episodic memory\n"
		"-c, --close          Disconnect from episodic memory\n"
		"-g, --get            Print current parameter setting\n"
		"-s, --set            Set parameter value\n"
		"-S, --stats          Print statistic summary or specific statistic\n"
		"-t, --timers         Print timer summary or specific statistic\n"
		"-v, --viz            Print episode in graphviz format\n"
		"-p, --print          Print episode in user-readable format\n"
		"-b, --backup         Creates a backup of the episodic database on disk\n"
		"\n"
		"Description\n"
		"\n"
		"The epmem command is used to change all behaviors of the episodic memory\n"
		"module, except for watch output, which is controlled by the watch --epmem\n"
		"command.\n"
		"\n"
		"Parameters\n"
		"\n"
		"Due to the large number of parameters, the epmem command uses the --get|--set\n"
		"<parameter> <value> convention rather than individual switches for each\n"
		"parameter. Running epmem without any switches displays a summary of the\n"
		"parameter settings.\n"
		"\n"
		"Main Parameters\n"
		"\n"
		"Parameter  Description                        Possible values       Default\n"
		"           Controls whether database is\n"
		"append     overwritten or appended when       on, off               off\n"
		"           opening or re-initializing\n"
		"           Linear weight of match cardinality\n"
		"balance    (1) vs. working memory activation  [0, 1]                1\n"
		"           (0) used in calculating match\n"
		"           score\n"
		"database   Database storage method            file, memory          memory\n"
		"exclusions Toggle the exclusion of an         any string            epmem, smem\n"
		"           attribute string constant\n"
		"force      Forces episode encoding/ignoring   ignore, remember, off off\n"
		"           in the next storage phase\n"
		"learning   Episodic memory enabled            on, off               off\n"
		"           Controls how retrievals interact\n"
		"merge      with long-term identifiers in      none, add             none\n"
		"           working memory\n"
		"path       Location of database file          empty, some path      empty\n"
		"           Decision cycle phase to encode new\n"
		"phase      episodes and process epmem link    output, selection     output\n"
		"           commands\n"
		"trigger    How episode encoding is triggered  dc, output, none      output\n"
		"\n"
		"Performance Parameters\n"
		"\n"
		"Parameter            Description              Possible values      Default\n"
		"cache-size           Number of memory pages   1, 2, ...            10000\n"
		"                     used in the SQLite cache\n"
		"graph-match          Graph matching enabled   on, off              on\n"
		"graph-match-ordering Ordering of identifiers  undefined, dfs, mcv  undefined\n"
		"                     during graph match\n"
		"                     Delay writing semantic\n"
		"lazy-commit          store changes to file    on, off              on\n"
		"                     until agent exits\n"
		"optimization         Policy for committing    safety, performance  performance\n"
		"                     data to disk\n"
		"page-size            Size of each memory page 1k, 2k, 4k, 8k, 16k, 8k\n"
		"                     used in the SQLite cache 32k, 64k\n"
		"timers               Timer granularity        off, one, two, three off\n"
		"\n"
		"The learning parameter turns the episodic memory module on or off. When\n"
		"learning is set to off, no new episodes are encoded and no commands put on the\n"
		"epmem link are processed. This is the same as using the enable and disable\n"
		"commands.\n"
		"The phase parameter determines which decision cycle phase episode encoding and\n"
		"retrieval will be performed.\n"
		"The trigger parameter controls when new episodes will be encoded. When it is\n"
		"set to output, new episodes will be encoded only if the agent made\n"
		"modifications to the output-link during that decision cycle. When set to 'dc',\n"
		"new episodes will be encoded every decision cycle.\n"
		"The exclusions parameter can be used to prevent episodic memory from encoding\n"
		"parts of working memory into new episodes. The value of exclusions is a list of\n"
		"string constants. During encoding, episodic memory will walk working memory\n"
		"starting from the top state identifier. If it encounters a WME whose attribute\n"
		"is a member of the exclusions list, episodic memory will ignore that WME and\n"
		"abort walking the children of that WME, and they will not be included in the\n"
		"encoded episode. Note that if the children of the excluded WME can be reached\n"
		"from top state via an alternative non-excluded path, they will still be\n"
		"included in the encoded episode. The exclusions parameter behaves differently\n"
		"from other parameters in that issuing epmem --set exclusions <val> does not set\n"
		"its value to <val>. Instead, it will toggle the membership of <val> in the\n"
		"exclusions list.\n"
		"The path parameter specifies the file system path the database is stored in.\n"
		"When path is set to a valid file system path and database mode is set to file,\n"
		"then the SQLite database is written to that path.\n"
		"The append parameter will determine whether all existing episodes recorded in a\n"
		"database on disk will be erased when epmem loads it. Note that this affects\n"
		"episodic memory re-initialization also, i.e. if the append setting is off, all\n"
		"episodic memories stored to disk will be lost when an init-soar is performed.\n"
		"Note that episodic memory cannot currently append to an in-memory database. If\n"
		"you perform an init-soar while using an in-memory database, all current\n"
		"episodes stored will be cleared.\n"
		"Note that changes to database, path and append will not have an effect until\n"
		"the database is used after an initialization. This happens either shortly after\n"
		"launch (on first use) or after a database initialization command is issued. To\n"
		"switch databases or database storage types after running, set your new\n"
		"parameters and then perform an epmem --init.\n"
		"The epmem --backup command can be used to make a copy of the current state of\n"
		"the database, whether in memory or on disk. This command will commit all\n"
		"outstanding changes before initiating the copy.\n"
		"When the database is stored to disk, the lazy-commit and optimization\n"
		"parameters control how often cached database changes are written to disk. These\n"
		"parameters trade off safety in the case of a program crash with database\n"
		"performance. When optimization is set to performance, the agent will have an\n"
		"exclusive lock on the database, meaning it cannot be opened concurrently by\n"
		"another SQLite process such as SQLiteMan. The lock can be relinquished by\n"
		"setting the database to memory or another database and issuing init-soar/epmem\n"
		"--init or by shutting down the Soar kernel.\n"
		"The balance parameter sets the linear weight of match cardinality vs. cue\n"
		"activation. As a performance optimization, when the value is 1 (default),\n"
		"activation is not computed. If this value is not 1 (even close, such as 0.99),\n"
		"and working memory activation is enabled, this value will be computed for each\n"
		"leaf WME, which may incur a noticeable cost, depending upon the overall\n"
		"complexity of the retrieval.\n"
		"The graph-match-ordering parameter sets the heuristic by which identifiers are\n"
		"ordered during graph match (assuming graph-match is on). The default,\n"
		"undefined, does not enforce any order and may be sufficient for small cues. For\n"
		"more complex cues, there will be a one-time sorting cost, during each\n"
		"retrieval, if the parameter value is changed. The currently available\n"
		"heuristics are depth-first search (dfs) and most-constrained variable (mcv). It\n"
		"is advised that you attempt these heuristics to improve performance if the\n"
		"query_graph_match timer reveals that graph matching is dominating retrieval\n"
		"time.\n"
		"The merge parameter controls how the augmentations of retrieved long-term\n"
		"identifiers (LTIs) interact with an existing LTI in working memory. If the LTI\n"
		"is not in working memory or has no augmentations in working memory, this\n"
		"parameter has no effect. If the augmentation is in working memory and has\n"
		"augmentations, by default (none), episodic memory will not augment the LTI. If\n"
		"the parameter is set to add then any augmentations that augmented the LTI in a\n"
		"retrieved episode are added to working memory.\n"
		"\n"
		"Statistics\n"
		"\n"
		"Episodic memory tracks statistics over the lifetime of the agent. These can be\n"
		"accessed using epmem --stats <statistic>. Running epmem --stats without a\n"
		"statistic will list the values of all statistics. Unlike timers, statistics\n"
		"will always be updated. Available statistics are:\n"
		"\n"
		"Name           Label                  Description\n"
		"time           Time                   Current episode ID\n"
		"db-lib-version SQLite Version         SQLite library version\n"
		"mem-usage      Memory Usage           Current SQLite memory usage in bytes\n"
		"mem-high       Memory Highwater       High SQLite memory usage watermark in\n"
		"                                      bytes\n"
		"queries        Queries                Number of times the query command has\n"
		"                                      been processed\n"
		"nexts          Nexts                  Number of times the next command has been\n"
		"                                      processed\n"
		"prevs          Prevs                  Number of times the previous command has\n"
		"                                      been processed\n"
		"ncb-wmes       Last Retrieval WMEs    Number of WMEs added to working memory in\n"
		"                                      last reconstruction\n"
		"qry-pos        Last Query Positive    Number of leaf WMEs in the query cue of\n"
		"                                      last cue-based retrieval\n"
		"qry-neg        Last Query Negative    Number of leaf WMEs in the neg-query cue\n"
		"                                      of the last cue-based retrieval\n"
		"qry-ret        Last Query Retrieved   Episode ID of last retrieval\n"
		"qry-card       Last Query Cardinality Match cardinality of last cue-based\n"
		"                                      retrieval\n"
		"qry-lits       Last Query Literals    Number of literals in the DNF graph of\n"
		"                                      last cue-based retrieval\n"
		"\n"
		"Timers\n"
		"\n"
		"Episodic memory also has a set of internal timers that record the durations of\n"
		"certain operations. Because fine-grained timing can incur runtime costs,\n"
		"episodic memory timers are off by default. Timers of different levels of detail\n"
		"can be turned on by issuing epmem --set timers <level>, where the levels can be\n"
		"off, one, two, or three, three being most detailed and resulting in all timers\n"
		"being turned on. Note that none of the episodic memory statistics nor timing\n"
		"information is reported by the stats command.\n"
		"All timer values are reported in seconds.\n"
		"Level one\n"
		"\n"
		"Timer  Description\n"
		"_total Total epmem operations\n"
		"\n"
		"Level two\n"
		"\n"
		"Timer               Description\n"
		"epmem_api           Agent command validation\n"
		"epmem_hash          Hashing symbols\n"
		"epmem_init          Episodic store initialization\n"
		"epmem_ncb_retrieval Episode reconstruction\n"
		"epmem_next          Determining next episode\n"
		"epmem_prev          Determining previous episode\n"
		"epmem_query         Cue-based query\n"
		"epmem_storage       Encoding new episodes\n"
		"epmem_trigger       Deciding whether new episodes should be encoded\n"
		"epmem_wm_phase      Converting preference assertions to working memory changes\n"
		"\n"
		"Level three\n"
		"\n"
		"Timer                 Description\n"
		"ncb_edge              Collecting edges during reconstruction\n"
		"ncb_edge_rit          Collecting edges from relational interval tree\n"
		"ncb_node              Collecting nodes during reconstruction\n"
		"ncb_node_rit          Collecting nodes from relational interval tree\n"
		"query_cleanup         Deleting dynamic data structures\n"
		"query_dnf             Building the first level of the DNF\n"
		"query_graph_match     Graph match\n"
		"query_result          Putting the episode in working memory\n"
		"query_sql_edge        SQL query for an edge\n"
		"query_sql_end_ep      SQL query for the end of the range of an edge\n"
		"query_sql_end_now     SQL query for the end of the now of an edge\n"
		"query_sql_end_point   SQL query for the end of the point of an edge\n"
		"query_sql_start_ep    SQL query for the start of the range of an edge\n"
		"query_sql_start_now   SQL query for the start of the now of an edge\n"
		"query_sql_start_point SQL query for the start of the point of an edge\n"
		"query_walk            Walking the intervals\n"
		"query_walk_edge       Expanding edges while walking the intervals\n"
		"query_walk_interval   Updating satisfaction while walking the intervals\n"
		"\n"
		"Visualization\n"
		"\n"
		"When debugging agents using episodic memory it is often useful to inspect the\n"
		"contents of individual episodes. Running epmem --viz <episode id> will output\n"
		"the contents of an episode in graphviz format. For more information on this\n"
		"format and visualization tools, see http://www.graphviz.org. The epmem --print\n"
		"option has the same syntax, but outputs text that is similar to using the print\n"
		"command to get the substructure of an identifier in working memory, which is\n"
		"possibly more useful for interactive debugging.\n"
		"\n"
		"See Also\n"
		"\n"
		"watch wma\n"
	;
	docstrings["excise"] = 
		"Delete Soar productions from production memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  excise production_name\n"
		"  excise options\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* ex\n"
		"\n"
		"Options\n"
		"\n"
		"Option          Description\n"
		"-a, --all       Remove all productions from memory and perform an init-soar\n"
		"                command\n"
		"-c, --chunks    Remove all chunks (learned productions) and justifications from\n"
		"                memory\n"
		"-d, --default   Remove all default productions (:default) from memory\n"
		"-r, --rl        Excise Soar-RL rules\n"
		"-t, --task      Remove chunks, justifications, and user productions from memory\n"
		"-T, --templates Excise Soar-RL templates\n"
		"-u, --user      Remove all user productions (but not chunks or default rules)\n"
		"                from memory\n"
		"production_name Remove the specific production with this name.\n"
		"\n"
		"Description\n"
		"\n"
		"This command removes productions from Soar's memory. The command must be called\n"
		"with either a specific production name or with a flag that indicates a\n"
		"particular group of productions to be removed. Using the flag -a or --all also\n"
		"causes an init-soar.\n"
		"\n"
		"Examples\n"
		"\n"
		"This command removes the production my*first*production and all chunks:\n"
		"\n"
		"  excise my*first*production --chunks\n"
		"\n"
		"This removes all productions and does an [_init_soar init-soar]:\n"
		"\n"
		"  excise --all\n"
		"\n"
		"See Also\n"
		"\n"
		"init-soar\n"
	;
	docstrings["explain"] = 
		"Allows you to explore how rules were learned.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  explain\n"
		"\n"
		"See Also\n"
		"\n"
		"chunk\n"
	;
	docstrings["firing-counts"] = 
		"Print the number of times each production has fired.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  firing-counts [n]\n"
		"  firing-counts production_name\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* fc\n"
		"\n"
		"Options\n"
		"\n"
		"If given, an option can take one of two forms -- an integer or a production\n"
		"name:\n"
		"\n"
		"Option          Description\n"
		"n               List the top n productions. If n is 0, only the productions\n"
		"                which haven't fired are listed\n"
		"production_name Print how many times the production has fired\n"
		"\n"
		"Description\n"
		"\n"
		"The firing-counts command prints the number of times each production has fired;\n"
		"production names are given from most requently fired to least frequently fired.\n"
		"With no arguments, it lists all productions. If an integer argument, n, is\n"
		"given, only the top n productions are listed. If n is zero (0), only the\n"
		"productions that haven't fired at all are listed. If a production name is given\n"
		"as an argument, the firing count for that production is printed.\n"
		"Note that firing counts are reset by a call to [_init_soar init-soar].\n"
		"\n"
		"Examples\n"
		"\n"
		"This example prints the 10 productions which have fired the most times along\n"
		"with their firing counts:\n"
		"\n"
		"  firing-counts 10\n"
		"\n"
		"This example prints the firing counts of production my*first*production:\n"
		"\n"
		"  firing-counts my*first*production\n"
		"\n"
		"Warnings\n"
		"\n"
		"Firing-counts are reset to zero after an [_init_soar init-soar].\n"
		"NB: This command is slow, because the sorting takes time O(n*log n)\n"
		"\n"
		"See Also\n"
		"\n"
		"init-soar\n"
	;
	docstrings["gds-print"] = 
		"Print the WMEs in the goal dependency set for each goal.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  gds-print\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* gds_print\n"
		"\n"
		"Description\n"
		"\n"
		"The Goal Dependency Set (GDS) is described in an appendix of the Soar manual.\n"
		"This command is a debugging command for examining the GDS for each goal in the\n"
		"stack. First it steps through all the working memory elements in the rete,\n"
		"looking for any that are included in any goal dependency set, and prints each\n"
		"one. Then it also lists each goal in the stack and prints the wmes in the goal\n"
		"dependency set for that particular goal. This command is useful when trying to\n"
		"determine why subgoals are disappearing unexpectedly: often something has\n"
		"changed in the goal dependency set, causing a subgoal to be regenerated prior\n"
		"to producing a result.\n"
		"\n"
		"Warnings\n"
		"\n"
		"gds-print is horribly inefficient and should not generally be used except when\n"
		"something is going wrong and you need to examine the Goal Dependency Set.\n"
	;
	docstrings["gp"] = 
		"Generate productions according to a specified pattern.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  gp { production_body }\n"
		"\n"
		"Description\n"
		"\n"
		"The gp command defines a pattern used to generate and source a set of Soar\n"
		"productions. production_body is a single argument that looks almost identical\n"
		"to a standard Soar rule that would be used with the sp command. Indeed, any\n"
		"syntax that is allowed in sp is also allowed in gp.\n"
		"Patterns in gp are specified with sets of whitespace-seprated values in square\n"
		"brackets. Every combination of values across all square-bracketed value lists\n"
		"will be generated. Values with whitespaces can be used if wrapped in pipes.\n"
		"Characters can also be escaped with a backslash (so string literals with\n"
		"embedded pipes and spaces outside of string literals are both possible).\n"
		"gp is primarily intended as an alternative to :template rules for reinforcement\n"
		"learning. :template rules generate new rules as patterns occur at run time.\n"
		"Unfortunately, this incurs a high run time cost. If all possible values are\n"
		"known in advance, then the rules can be generated using gp at source time, thus\n"
		"allowing code to run faster. gp is not appropriate when all possible values are\n"
		"not known or if the total number of possible rules is very large (and the\n"
		"system is likely to encounter only a small subset at run time). It is also\n"
		"possible to combine gp and :template (e.g., if some of the values are known and\n"
		"not others). This should reduce the run time cost of :template.\n"
		"There is nothing that actually restricts gp to being used for RL, although for\n"
		"non-RL rules, a disjunction list (using << and >>) is better where it can be\n"
		"used. More esoteric uses may include multiple bracketed value lists inside a\n"
		"disjunction list, or even variables in bracketed value lists.\n"
		"Each rule generated by gp has *integer appended to its name (where integer is\n"
		"some incrementing number).\n"
		"\n"
		"Examples\n"
		"\n"
		"Template version of rule:\n"
		"\n"
		"  sp {water-jug*fill\n"
		"     :template\n"
		"     (state <s1> ^name water-jug ^operator <op> +\n"
		"                 ^jug <j1> <j2>)\n"
		"     (<op> ^name fill ^fill-jug.volume <fvol>)\n"
		"     (<j1> ^volume 3 ^contents <c1>)\n"
		"     (<j2> ^volume 5 ^contents <c2>)\n"
		"  -->\n"
		"     (<s1> ^operator <op> = 0)\n"
		"  }\n"
		"\n"
		"gp version of rule (generates 144 rules):\n"
		"\n"
		"  gp {water-jug*fill\n"
		"     (state <s1> ^name water-jug ^operator <op> +\n"
		"                 ^jug <j1> <j2>)\n"
		"     (<op> ^name fill ^fill-jug.volume [3 5])\n"
		"     (<j1> ^volume 3 ^contents [0 1 2 3])\n"
		"     (<j2> ^volume 5 ^contents [0 1 2 3 4 5])\n"
		"  -->\n"
		"     (<s1> ^operator <op> = 0)\n"
		"  }\n"
		"\n"
		"Esoteric example (generates 24 rules):\n"
		"\n"
		"  gp {strange-example\n"
		"     (state <s1> ^<< [att1 att2] [att3 att4] >> [ val |another val| |strange\n"
		"  val\\|| ])\n"
		"  -->\n"
		"     (<s1> ^foo [bar <bar>])\n"
		"  }\n"
		"\n"
		"testgp.soar contains many more examples.\n"
		"\n"
		"See Also\n"
		"\n"
		"sp\n"
	;
	docstrings["gp-max"] = 
		"Set the upper-limit to the number of productions generated by the gp command.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  gp-max [value]\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"value  Maximum number of productions to produce\n"
		"\n"
		"Description\n"
		"\n"
		"gp-max is used to limit the number of productions produced by a gp production.\n"
		"It is easy to write a gp production that has a combinatorial explosion and\n"
		"hangs for a long time while those productions are added to memory. The gp-max\n"
		"command bounds this. Use without an argument to query the current value.\n"
		"\n"
		"Examples\n"
		"\n"
		"  gp-max 1000\n"
		"\n"
		"gp productions that produce more than 1000 productions will stop producing them\n"
		"when 1000 are made and return an error.\n"
		"\n"
		"See Also\n"
		"\n"
		"sp gp\n"
	;
	docstrings["help"] = 
		"Provide formatted usage information about Soar commands.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  help [command_name]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* ?\n"
		"* h\n"
		"* man\n"
		"\n"
		"Description\n"
		"\n"
		"This command prints formatted help for the given command name. Issue alone to\n"
		"see what topics have help available.\n"
	;
	docstrings["indifferent-selection"] = 
		"Controls indifferent preference arbitration.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  indifferent-selection\n"
		"  indifferent-selection [-s]\n"
		"  indifferent-selection [-bgfxl]\n"
		"  indifferent-selection [-et] [value]\n"
		"  indifferent-selection [-p] parameter [reduction_policy]\n"
		"  indifferent-selection [-r] parameter reduction_policy [reduction_rate]\n"
		"  indifferent-selection [-a] [setting]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* inds\n"
		"\n"
		"Options\n"
		"\n"
		"Option                                  Description\n"
		"-s, --stats                             Summary of settings\n"
		"policy                                  Set exploration policy\n"
		"parameter [exploration policy           Get/Set exploration policy parameters\n"
		"parameters]                             (if value not given, returns the\n"
		"                                        current value)\n"
		"                                        Get/Set exploration policy parameter\n"
		"parameter [reduction_policy](value]     reduction policy (if policy not given,\n"
		"                                        returns the current)\n"
		"parameter reduction_policy [exploration Get/Set exploration policy parameter\n"
		"policy parameter]                       reduction rate for a policy (if rate\n"
		"                                        not give, returns the current)\n"
		"-a, --auto-reduce [on,off](reduction-   Get/Set auto-reduction setting (if\n"
		"rate]                                   setting not provided, returns the\n"
		"                                        current)\n"
		"\n"
		"Description\n"
		"\n"
		"The indifferent-selection command allows the user to set options relating to\n"
		"selection between operator proposals that are mutually indifferent in\n"
		"preference memory.\n"
		"The primary option is the exploration policy (each is covered below). When Soar\n"
		"starts, softmax is the default policy.\n"
		"Note: As of version 9.3.2, the architecture no longer automatically changes the\n"
		"policy to epsilon-greedy the first time Soar-RL is enabled.\n"
		"Some policies have parameters to temper behavior. The indifferent-selection\n"
		"command provides basic facilities to automatically reduce these parameters\n"
		"exponentially and linearly each decision cycle by a fixed rate. In addition to\n"
		"setting these policies/rates, the auto-reduce option enables the automatic\n"
		"reduction system (disabled by default), for which the Soar decision cycle\n"
		"incurs a small performance cost.\n"
		"\n"
		"Exploration Policies\n"
		"\n"
		"Option               Description\n"
		"-b, --boltzmann      Tempered softmax (uses temperature)\n"
		"-g, --epsilon-greedy Tempered greedy (uses epsilon)\n"
		"                     Random, biased by numeric indifferent values (if a non-\n"
		"-x, --softmax        positive value is encountered, resorts to a uniform random\n"
		"                     selection)\n"
		"-f, --first          Deterministic, first indifferent preference is selected\n"
		"-l, --last           Deterministic, last indifferent preference is selected\n"
		"\n"
		"Exploration Policy Parameters\n"
		"\n"
		"Parameter Name    Acceptable Values Default Value\n"
		"-e, --epsilon     [0, 1]            0.1\n"
		"-t, --temperature (0, inf)          25\n"
		"\n"
		"Exploration Policy Parameter Auto-Reduction Policies\n"
		"\n"
		"Parameter Name      Acceptable Values Default Value\n"
		"exponential default [0, 1]            1\n"
		"linear              [0, inf]          0\n"
		"\n"
		"See Also\n"
		"\n"
		"numeric-indifferent-mode rl\n"
	;
	docstrings["init-soar"] = 
		"Empties working memory and resets run-time statistics.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  init-soar\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* init\n"
		"* is\n"
		"\n"
		"Description\n"
		"\n"
		"The init-soar command initializes Soar. It removes all elements from working\n"
		"memory, wiping out the goal stack, and resets all runtime statistics. The\n"
		"firing counts for all productions are reset to zero. The init-soar command\n"
		"allows a Soar program that has been halted to be reset and start its execution\n"
		"from the beginning.\n"
		"init-soar does not remove any productions from production memory; to do this,\n"
		"use the excise command. Note however, that all justifications will be removed\n"
		"because they will no longer be supported.\n"
		"\n"
		"See Also\n"
		"\n"
		"excise\n"
	;
	docstrings["internal-symbols"] = 
		"Print information about the Soar symbol table.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  internal-symbols\n"
		"\n"
		"Description\n"
		"\n"
		"The internal-symbols command prints information about the Soar symbol table.\n"
		"Such information is typically only useful for users attempting to debug Soar by\n"
		"locating memory leaks or examining I/O structure.\n"
		"\n"
		"Example\n"
		"\n"
		"   soar> internal-symbols\n"
		"   --- Symbolic Constants: ---\n"
		"   operator\n"
		"   accept\n"
		"   evaluate-object\n"
		"   problem-space\n"
		"   sqrt\n"
		"   interrupt\n"
		"   mod\n"
		"   goal\n"
		"   io\n"
		"   (...additional symbols deleted for brevity...)\n"
		"   --- Integer Constants: ---\n"
		"   --- Floating-Point Constants: ---\n"
		"   --- Identifiers: ---\n"
		"   --- Variables: ---\n"
		"   <o>\n"
		"   <sso>\n"
		"   <to>\n"
		"   <ss>\n"
		"   <ts>\n"
		"   <so>\n"
		"   <sss>\n"
	;
	docstrings["learn"] = 
		"Set the parameters for chunking.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  learn [-l]\n"
		"  learn [-d|E|o]\n"
		"  learn [-eabnNpP]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* l\n"
		"\n"
		"Options\n"
		"\n"
		"Option                      Description\n"
		"-e, --enable, --on          Turn chunking on. Can be modified by -a or -b.\n"
		"-d, --disable, --off        Turn all chunking off. (default)\n"
		"-E, --except                Learning is on, except as specified by RHS dont-\n"
		"                            learn actions.\n"
		"-o, --only                  Chunking is on only as specified by RHS force-learn\n"
		"                            actions.\n"
		"-l, --list                  Prints listings of dont-learn and force-learn\n"
		"                            states.\n"
		"-a, --all-levels            Build chunks whenever a subgoal returns a result.\n"
		"                            Learning must be enabled.\n"
		"                            Build chunks only for subgoals that have not yet\n"
		"-b, --bottom-up             had any subgoals with chunks built. Learning must\n"
		"                            be enabled.\n"
		"-n, --local-negations       Build chunks when local negation encountered in\n"
		"                            backtraces. (default)\n"
		"-N, --no-local-negations    Do not build chunks when local negation encountered\n"
		"                            in backtraces.\n"
		"-p, --desirability-prefs    Add relevant desirability preferences to\n"
		"                            backtraces.\n"
		"-P, --no-desirability-prefs Do not add any desirability preferences to\n"
		"                            backtraces. (default)\n"
		"\n"
		"Description\n"
		"\n"
		"The learn command controls the parameters for chunking. With no arguments, this\n"
		"command prints out the current learning environment status. If arguments are\n"
		"provided, they will alter the learning environment as described in the options\n"
		"and arguments table. The watch command can be used to provide various levels of\n"
		"detail when productions are learned. Learning is disabled by default.\n"
		"With the --on flag, chunking is on all the time. With the --except flag,\n"
		"chunking is on, but Soar will not create chunks for states that have had RHS\n"
		"dont-learn actions executed in them. With the --only flag, chunking is off, but\n"
		"Soar will create chunks for only those states that have had RHS force-learn\n"
		"actions executed in them. With the --off flag, chunking is off all the time.\n"
		"The --only flag and its companion force-learn RHS action allow Soar developers\n"
		"to turn learning on in a particular problem space, so that they can focus on\n"
		"debugging the learning problems in that particular problem space without having\n"
		"to address the problems elsewhere in their programs at the same time.\n"
		"Similarly, the --except flag and its companion dont-learn RHS action allow\n"
		"developers to temporarily turn learning off for debugging purposes. These\n"
		"facilities are provided as debugging tools, and do not correspond to any theory\n"
		"of learning in Soar.\n"
		"The following final six settings are orthogonal to the --on, --except, --only,\n"
		"and --off flags, and so, may be used in combination with them.\n"
		"The --all-levels and --bottom-up control when chunks are formed when there are\n"
		"multiple levels of subgoals. With bottom-up learning, chunks are learned only\n"
		"in states in which no subgoal has yet generated a chunk. In this mode, chunks\n"
		"are learned only for the \"bottom\" of the subgoal hierarchy and not the\n"
		"intermediate levels. With experience, the subgoals at the bottom will be\n"
		"replaced by the chunks, allowing higher level subgoals to be chunked.\n"
		"The options --local-negations and --no-local-negations control whether or not\n"
		"chunks can be created that are derived from rules that check for negated WMEs\n"
		"on the substate (local negations). Chunking through local negations can result\n"
		"in overgeneral chunks, but disabling this ability will reduce the number of\n"
		"chunks formed. The default is to enable chunking through local negations.\n"
		"If chunking through local negations is disabled, to see when chunks are\n"
		"discarded (and why), set watch --learning print (see watch command).\n"
		"The options --desirability-prefs and --no-desirability-prefs control whether or\n"
		"not desirability preferences are added to the context dependent preference set,\n"
		"which is the set of operator evaluation preferences that led to the selection\n"
		"of an operator in a subgoal. All preferences in the CDPS are backtraced through\n"
		"when creating justifications and chunks. When this option is disabled, only\n"
		"requirement preferences (requires and prohibits) will be added to the CDPS.\n"
		"When this option is enabled, relevant desirability prefs (better, best, worse,\n"
		"worst, indifferent) will also be added, producing more specific and possibly\n"
		"correct chunks. The default is to not include desirability preferences.\n"
		"Learning can be turned on or off at any point during a run.\n"
		"\n"
		"Examples\n"
		"\n"
		"To enable learning only at the lowest subgoal level:\n"
		"\n"
		"  learn -e b\n"
		"\n"
		"To see all the force-learn and dont-learn states registered by RHS actions\n"
		"\n"
		"  learn -l\n"
		"\n"
		"See Also\n"
		"\n"
		"watch explain-backtraces save-backtraces\n"
	;
	docstrings["load-library"] = 
		"Load a shared library into the local client (for the purpose of, e.g.,\n"
		"providing custom event handling).\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  load-library [library_name] [arguments]\n"
		"\n"
		"Options\n"
		"\n"
		"Option       Description\n"
		"library_name The root name of the library (without the .dll or .so extension;\n"
		"             this is added for you depending on your platform).\n"
		"arguments    Whatever arguments the library's initialization function is\n"
		"             expecting, if any.\n"
		"\n"
		"Description\n"
		"\n"
		"Sometimes, a user will want to extend an existing environment. For example, the\n"
		"person may want to provide custom RHS functions, or register for print events\n"
		"for the purpose of logging trace information. If modifying the existing\n"
		"environment is cumbersome or impossible, then the user has two options: create\n"
		"a remote client that provides the functionality, or use load-library. Load-\n"
		"library creates extensions in the local client, making it orders of magnitude\n"
		"faster than a remote client.\n"
		"To create a loadable library, the library must contain the following function:\n"
		"\n"
		"  #ifdef __cplusplus\n"
		"  extern \"C\" {\n"
		"  #endif\n"
		"\n"
		"      EXPORT char* sml_InitLibrary(Kernel* pKernel, int argc, char** argv) {\n"
		"          // Your code here\n"
		"      }\n"
		"\n"
		"  #ifdef __cplusplus\n"
		"  } // extern \"C\"\n"
		"  #endif\n"
		"\n"
		"This function is called when load-library loads your library. It is responsible\n"
		"for any initialization that you want to take place (e.g. registering custom RHS\n"
		"functions, registering for events, etc).\n"
		"The argc and argv arguments are intended to mirror the arguments that a\n"
		"standard SML client would get. Thus, the first argument is the name of the\n"
		"library, and the rest are whatever other arguments are provided. This is to\n"
		"make it easy to use the same codebase to create a loadable library or a\n"
		"standard remote SML client (e.g. when run as a standard client, just pass the\n"
		"arguments main gets into sml_InitLibrary).\n"
		"The return value of sml_InitLibrary is for any error messages you want to\n"
		"return to the load-library call. If no error occurs, return a zero-length\n"
		"string.\n"
		"An example library is provided in the Tools/TestExternalLibraryLib project.\n"
		"This example can also be compiled as a standard remote SML client. The Tools/\n"
		"TestExternalLibraryExe project tests loading the TestExternalLibraryLib\n"
		"library.\n"
		"\n"
		"Examples\n"
		"\n"
		"To load TestExternalLibraryLib:\n"
		"\n"
		"  load-library TestExternalLibraryLib\n"
		"\n"
		"To load a library that takes arguments (say, a logger):\n"
		"\n"
		"  load-library my-logger -filename mylog.log\n"
	;
	docstrings["ls"] = 
		"List the contents of the current working directory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  ls\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"dir\n"
		"\n"
		"Description\n"
		"\n"
		"List the contents of the working directory.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd dirs pushd popd source pwd\n"
	;
	docstrings["matches"] = 
		"Prints information about partial matches and the match set.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  matches [options] production_name\n"
		"  matches [options] -[a|r]\n"
		"\n"
		"Options\n"
		"\n"
		"Option                   Description\n"
		"production_name          Print partial match information for the named\n"
		"                         production.\n"
		"                         For the match set, print only the names of the\n"
		"-n, --names, -c, --count productions that are about to fire or retract (the\n"
		"                         default). If printing partial matches for a\n"
		"                         production, just list the partial match counts.\n"
		"-t, --timetags           Also print the timetags of the wmes at the first\n"
		"                         failing condition\n"
		"-w, --wmes               Also print the full wmes, not just the timetags, at\n"
		"                         the first failing condition.\n"
		"-a, --assertions         List only productions about to fire.\n"
		"-r, --retractions        List only productions about to retract.\n"
		"\n"
		"Description\n"
		"\n"
		"The matches command prints a list of productions that have instantiations in\n"
		"the match set, i.e., those productions that will retract or fire in the next\n"
		"Propose or Apply phase. It also will print partial match information for a\n"
		"single, named production.\n"
		"\n"
		"Printing the match set\n"
		"\n"
		"When printing the match set (i.e., no production name is specified), the\n"
		"default action prints only the names of the productions which are about to fire\n"
		"or retract. If there are multiple instantiations of a production, the total\n"
		"number of instantiations of that production is printed after the production\n"
		"name, unless --timetags or --wmes are specified, in which case each\n"
		"instantiation is printed on a separate line.\n"
		"When printing the match set, the --assertions and --retractions arguments may\n"
		"be specified to restrict the output to print only the assertions or\n"
		"retractions.\n"
		"\n"
		"Printing partial matches for productions\n"
		"\n"
		"In addition to printing the current match set, the matches command can be used\n"
		"to print information about partial matches for a named production. In this\n"
		"case, the conditions of the production are listed, each preceded by the number\n"
		"of currently active matches for that condition. If a condition is negated, it\n"
		"is preceded by a minus sign -. The pointer >>>> before a condition indicates\n"
		"that this is the first condition that failed to match.\n"
		"When printing partial matches, the default action is to print only the counts\n"
		"of the number of WME's that match, and is a handy tool for determining which\n"
		"condition failed to match for a production that you thought should have fired.\n"
		"At levels --timetags and --wmes the matches command displays the WME's\n"
		"immediately after the first condition that failed to match--temporarily\n"
		"interrupting the printing of the production conditions themselves.\n"
		"\n"
		"Notes\n"
		"\n"
		"When printing partial match information, some of the matches displayed by this\n"
		"command may have already fired, depending on when in the execution cycle this\n"
		"command is called. To check for the matches that are about to fire, use the\n"
		"matches command without a named production.\n"
		"In Soar 8, the execution cycle (decision cycle) is input, propose, decide,\n"
		"apply output; it no longer stops for user input after the decision phase when\n"
		"running by decision cycles (run -d 1). If a user wishes to print the match set\n"
		"immediately after the decision phase and before the apply phase, then the user\n"
		"must run Soar by phases (run -p 1).\n"
		"\n"
		"Examples\n"
		"\n"
		"This example prints the productions which are about to fire and the wmes that\n"
		"match the productions on their left-hand sides:\n"
		"\n"
		"  matches --assertions --wmes\n"
		"\n"
		"This example prints the wme timetags for a single production.\n"
		"\n"
		"  matches -t my*first*production\n"
	;
	docstrings["max-dc-time"] = 
		"Set a wall-clock time limit such that the agent will be interrupted when a\n"
		"single decision cycle exceeds this limit.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-dc-time [--seconds] [n]\n"
		"  max-dc-time -d\n"
		"\n"
		"Options\n"
		"\n"
		"Option        Description\n"
		"n             Maximum decision cycle time in microseconds\n"
		"-d, --disable Disable this interrupt.\n"
		"-s, --seconds Interpret n as seconds (floating point OK)\n"
		"\n"
		"Description\n"
		"\n"
		"After output phase, the elapsed decision cycle time is checked to see if it is\n"
		"greater than the old maximum, and the maximum dc time stat is updated (see\n"
		"stats). At this time, this threshold is also checked. If met or exceeded, Soar\n"
		"stops at the end of the current output phase with an interrupted state.\n"
		"\n"
		"Examples\n"
		"\n"
		"  max-dc-time -s 0.05\n"
		"  max-dc-time 4000\n"
	;
	docstrings["max-elaborations"] = 
		"Limit the maximum number of elaboration cycles in a given phase. Print a\n"
		"warning message if the limit is reached during a run.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-elaborations [n]\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"n      Maximum allowed elaboration cycles, must be a positive integer.\n"
		"\n"
		"Description\n"
		"\n"
		"This command sets and prints the maximum number of elaboration cycles allowed.\n"
		"If n is given, it must be a positive integer and is used to reset the number of\n"
		"allowed elaboration cycles. The default value is 100. max-elaborations with no\n"
		"arguments prints the current value.\n"
		"max-elaborations controls the maximum number of elaborations allowed in a\n"
		"single decision cycle. The elaboration phase will end after max-elaboration\n"
		"cycles have completed, even if there are more productions eligible to fire or\n"
		"retract; and Soar will proceed to the next phase after a warning message is\n"
		"printed to notify the user. This limits the total number of cycles of parallel\n"
		"production firing but does not limit the total number of productions that can\n"
		"fire during elaboration.\n"
		"This limit is included in Soar to prevent getting stuck in infinite loops (such\n"
		"as a production that repeatedly fires in one elaboration cycle and retracts in\n"
		"the next); if you see the warning message, it may be a signal that you have a\n"
		"bug your code. However some Soar programs are designed to require a large\n"
		"number of elaboration cycles, so rather than a bug, you may need to increase\n"
		"the value of max-elaborations.\n"
		"max-elaborations is checked during both the Propose Phase and the Apply Phase.\n"
		"If Soar runs more than the max-elaborations limit in either of these phases,\n"
		"Soar proceeds to the next phase (either Decision or Output) even if quiescence\n"
		"has not been reached.\n"
		"\n"
		"Examples\n"
		"\n"
		"The command issued with no arguments, returns the max elaborations allowed:\n"
		"\n"
		"  max-elaborations\n"
		"\n"
		"to set the maximum number of elaborations in one phase to 50:\n"
		"\n"
		"  max-elaborations 50\n"
	;
	docstrings["max-goal-depth"] = 
		"Limit the sub-state stack depth.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-goal-depth [n]\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"n      Maximum depth of sub-states allowed.\n"
		"\n"
		"Description\n"
		"\n"
		"The max-goal-depth command is used to limit the maximum depth of sub-states.\n"
		"The initial value of this variable is 100; allowable settings are any integer\n"
		"greater than 0.\n"
		"This limit is included in Soar to prevent getting stuck in an infinite\n"
		"recursive loop, which may come about due to deliberate actions or via an agent\n"
		"bug, such as dropping inadvertently to state-no-change impasses.\n"
	;
	docstrings["max-memory-usage"] = 
		"Get the number of bytes that when exceeded by an agent, will trigger the memory\n"
		"usage exceeded event.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-memory-usage [n]\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"n      Size of limit in bytes.\n"
		"\n"
		"Description\n"
		"\n"
		"The max-memory-usage command is used to trigger the memory usage exceeded\n"
		"event. The initial value of this is 100MB (100,000,000); allowable settings are\n"
		"any integer greater than 0. The code supporting this event is not enabled by\n"
		"default because the test can be computationally expensive and is needed only\n"
		"for specific embedded applications. Users may enable the test and event\n"
		"generation by uncommenting code in mem.cpp.\n"
		"Using the command with no arguments displays the current limit.\n"
	;
	docstrings["max-nil-output-cycles"] = 
		"Limit the maximum number of decision cycles that are executed without producing\n"
		"output when run is invoked with run-til-output args.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  max-nil-output-cycles [n]\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"n      Maximum number of consecutive output cycles allowed without producing\n"
		"       output. Must be a positive integer.\n"
		"\n"
		"Description\n"
		"\n"
		"This command sets and prints the maximum number of nil output cycles (output\n"
		"cycles that put nothing on the output link) allowed when running using run-til-\n"
		"output (run --output). If n is not given, this command prints the current\n"
		"number of nil-output-cycles allowed. If n is given, it must be a positive\n"
		"integer and is used to reset the maximum number of allowed nil output cycles.\n"
		"max-nil-output-cycles controls the maximum number of output cycles that\n"
		"generate no output allowed when a run --out command is issued. After this limit\n"
		"has been reached, Soar stops. The default initial setting of n is 15.\n"
		"\n"
		"Examples\n"
		"\n"
		"The command issued with no arguments, returns the max empty output cycles\n"
		"allowed:\n"
		"\n"
		"  max-nil-output-cycles\n"
		"\n"
		"to set the maximum number of empty output cycles in one phase to 25:\n"
		"\n"
		"  max-nil-output-cycles 25\n"
		"\n"
		"See Also\n"
		"\n"
		"run\n"
	;
	docstrings["memories"] = 
		"Print memory usage for partial matches.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  memories [options] [number]\n"
		"  memories production_name\n"
		"\n"
		"Options\n"
		"\n"
		"Option               Description\n"
		"-c, --chunks         Print memory usage of chunks.\n"
		"-d, --default        Print memory usage of default productions.\n"
		"-j, --justifications Print memory usage of justifications.\n"
		"-u, --user           Print memory usage of user-defined productions.\n"
		"production_name      Print memory usage for a specific production.\n"
		"number               Number of productions to print, sorted by those that use\n"
		"                     the most memory.\n"
		"-T, --template       Print memory usage of Soar-RL templates.\n"
		"\n"
		"Description\n"
		"\n"
		"The memories command prints out the internal memory usage for full and partial\n"
		"matches of production instantiations, with the productions using the most\n"
		"memory printed first. With no arguments, the memories command prints memory\n"
		"usage for all productions. If a production_name is specified, memory usage will\n"
		"be printed only for that production. If a positive integer number is given,\n"
		"only number productions will be printed: the number productions that use the\n"
		"most memory. Output may be restricted to print memory usage for particular\n"
		"types of productions using the command options.\n"
		"Memory usage is recorded according to the tokens that are allocated in the rete\n"
		"network for the given production(s). This number is a function of the number of\n"
		"elements in working memory that match each production. Therefore, this command\n"
		"will not provide useful information at the beginning of a Soar run (when\n"
		"working memory is empty) and should be called in the middle (or at the end) of\n"
		"a Soar run.\n"
		"The memories command is used to find the productions that are using the most\n"
		"memory and, therefore, may be taking the longest time to match (this is only a\n"
		"heuristic). By identifying these productions, you may be able to rewrite your\n"
		"program so that it will run more quickly. Note that memory usage is just a\n"
		"heuristic measure of the match time: A production might not use much memory\n"
		"relative to others but may still be time-consuming to match, and excising a\n"
		"production that uses a large number of tokens may not speed up your program,\n"
		"because the Rete matcher shares common structure among different productions.\n"
		"As a rule of thumb, numbers less than 100 mean that the production is using a\n"
		"small amount of memory, numbers above 1000 mean that the production is using a\n"
		"large amount of memory, and numbers above 10,000 mean that the production is\n"
		"using a very large amount of memory.\n"
		"\n"
		"See Also\n"
		"\n"
		"matches\n"
	;
	docstrings["multi-attributes"] = 
		"Declare a symbol to be multi-attributed.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  multi-attributes [symbol [n]]\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"symbol Any Soar attribute.\n"
		"n      Integer greater than 1, estimate of degree of simultaneous values for\n"
		"       attribute.\n"
		"\n"
		"Description\n"
		"\n"
		"This command declares the given symbol to be an attribute which can take on\n"
		"multiple values. The optional n is an integer (greater than 1) indicating an\n"
		"upper limit on the number of expected values that will appear for an attribute.\n"
		"If n is not specified, the value 10 is used for each declared multi-attribute.\n"
		"More informed values will tend to result in greater efficiency.\n"
		"This command is used only to provide hints to the production condition\n"
		"reorderer so it can produce better condition orderings. Better orderings enable\n"
		"the rete network to run faster. This command has no effect on the actual\n"
		"contents of working memory and most users needn't use this at all.\n"
		"Note that multi-attributes declarations must be made before productions are\n"
		"loaded into soar or this command will have no effect.\n"
		"\n"
		"Examples\n"
		"\n"
		"Declare the symbol \"thing\" to be an attribute likely to take more than 1 but no\n"
		"more than 4 values:\n"
		"\n"
		"  multi-attributes thing 4\n"
	;
	docstrings["numeric-indifferent-mode"] = 
		"Select method for combining numeric preferences.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  numeric-indifferent-mode [-as]\n"
		"\n"
		"Options\n"
		"\n"
		"Option               Description\n"
		"-a, --avg, --average Use average mode\n"
		"-s, --sum            Use sum mode (default)\n"
		"\n"
		"Description\n"
		"\n"
		"The numeric-indifferent-mode command sets how multiple numeric indifferent\n"
		"preference values given to an operator are combined into a single value for use\n"
		"in random selection.\n"
		"The default procedure is --sum which sums all numeric indifferent preference\n"
		"values given to the operator, defaulting to 0 if none exist. The alternative --\n"
		"avg mode will average the values, also defaulting to 0 if none exist.\n"
		"\n"
		"See Also\n"
		"\n"
		"rl indifferent-selection\n"
	;
	docstrings["o-support-mode"] = 
		"Choose experimental variations of o-support.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  o-support-mode [n]\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"       Mode 3 is the same as mode 2 except that operator elaborations (adding\n"
		"3      attributes to operators) now get i-support even though you have to test\n"
		"       the operator to elaborate an operator. In cases where the rule mixes\n"
		"       support types, support defaults to o-support (and a warning is printed).\n"
		"       Mode 4 is the default. It is the same as mode 3 except where a rule\n"
		"4      mixes support types, support defaults to i-support (and a warning is\n"
		"       still printed).\n"
		"\n"
		"Description\n"
		"\n"
		"The o-support-mode command is used to control the way that o-support is\n"
		"determined for preferences. Only o-support modes 3 & 4 are valid (other modes\n"
		"require Soar 7, which is no longer supported). O-support mode 4 should be\n"
		"considered an improved version of mode 3. The default o-support mode is mode 4.\n"
		"In o-support modes 3 & 4, support is given production by production; that is,\n"
		"all preferences generated by the RHS of a single instantiated production will\n"
		"have the same support. The difference between the two modes is in how they\n"
		"handle productions with both operator and non-operator augmentations on the\n"
		"RHS. For more information on o-support calculations, see the relevant appendix\n"
		"in the Soar manual.\n"
		"Running o-support-mode with no arguments prints out the current o-support-mode.\n"
	;
	docstrings["pbreak"] = 
		"Toggles the :interrupt flag on a rule at run-time, which stops the Soar\n"
		"decision cycle when the rule fires.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  rl -c|--clear <production-name>\n"
		"  rl -p|--print\n"
		"  rl -s|--set <production-name>\n"
		"  rl <production-name>\n"
		"\n"
		"Options\n"
		"\n"
		"Parameter   Argument          Description\n"
		"-c, --clear <production-name> Clear :interrupt flag from a production.\n"
		"-p, --print (none)            Print which production rules have had their :\n"
		"                              interrupt flags set.\n"
		"(none)      (none)            Print which production rules have had their :\n"
		"                              interrupt flags set.\n"
		"-s, --set   <production-name> Set :interrupt flag on a production rule.\n"
		"(none)      <production-name> Set flag :interrupt on a production rule.\n"
		"\n"
		"Description\n"
		"\n"
		"The pbreak command can be used to toggle the :interrupt flag on production\n"
		"rules which did not have it set in the original source file, which stops the\n"
		"Soar decision cycle when the rule fires. This is intended to be used for\n"
		"debugging purposes.\n"
		"\n"
		"See Also\n"
		"\n"
		"matches pwatch watch\n"
	;
	docstrings["popd"] = 
		"Pop the current working directory off the stack and change to the next\n"
		"directory on the stack. Can be relative pathname or fully specified path.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  popd\n"
		"\n"
		"Description\n"
		"\n"
		"This command pops a directory off of the directory stack and changes_to_it. See\n"
		"the [_dirs dirs] command for an explanation of the directory stack.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd dirs ls pushd source pwd\n"
	;
	docstrings["port"] = 
		"Returns the port the kernel instance is listening on.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  port\n"
	;
	docstrings["predict"] = 
		"Predict the next selected operator\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  predict\n"
		"\n"
		"Description\n"
		"\n"
		"The predict command determines, based upon current operator proposals, which\n"
		"operator will be chosen during the next decision phase. If predict determines\n"
		"an operator tie will be encountered, \"tie\" is returned. If predict determines\n"
		"no operator will be selected (state no-change), \"none\" is returned. If predict\n"
		"determines a conflict will arise during the decision phase, \"conflict\" is\n"
		"returned. If predict determines a constraint failure will occur, \"constraint\"\n"
		"is returned. Otherwise, predict will return the id of the operator to be\n"
		"chosen. If operator selection will require probabilistic selection, and no\n"
		"alterations to the probabilities are made between the call to predict and\n"
		"decision phase, predict will manipulate the random number generator to enforce\n"
		"its prediction.\n"
		"\n"
		"See Also\n"
		"\n"
		"select\n"
	;
	docstrings["preferences"] = 
		"Examine details about the preferences that support the specified identifier and\n"
		"attribute.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  preferences [options] [identifier [attribute]]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* pref\n"
		"* pr\n"
		"\n"
		"Options\n"
		"\n"
		"Option             Description\n"
		"-0, -n, --none     Print just the preferences themselves\n"
		"-1, -N, --names    Print the preferences and the names of the productions that\n"
		"                   generated them\n"
		"                   Print the information for the --names option above plus the\n"
		"-2, -t, --timetags timetags of the wmes matched by the LHS of the indicated\n"
		"                   productions\n"
		"-3, -w, --wmes     Print the information for the --timetags option above plus\n"
		"                   the entire WME matched on the LHS.\n"
		"-o, --object       Print the support for all the WMEs that comprise the object\n"
		"                   (the specified identifier).\n"
		"identifier         Must be an existing Soar object identifier.\n"
		"attribute          Must be an existing attribute of the specified identifier.\n"
		"\n"
		"Description\n"
		"\n"
		"The preferences command prints all the preferences for the given object\n"
		"identifier and attribute. If identifier and attribute are not specified, they\n"
		"default to the current state and the current operator. The Soar syntax\n"
		"attribute carat (^) is optional when specifying the attribute. The optional\n"
		"arguments indicates the level of detail to print about each preference.\n"
		"This command is useful for examining which candidate operators have been\n"
		"proposed and what relationships, if any, exist among them. If a preference has\n"
		"O-support, the string, :O will also be printed.\n"
		"When only the identifier is specified on the commandline, if the identifier is\n"
		"a state, Soar uses the default attribute ^operator. If the identifier is not a\n"
		"state, Soar prints the support information for all WMEs whose value is the\n"
		"identifier.\n"
		"When an identifier and the --object flag are specified, Soar prints the\n"
		"preferences / WME support for all WMEs comprising the specified identifier.\n"
		"For the time being, [_numeric_indifferent_mode numeric-indifferent] preferences\n"
		"are listed under the heading binary indifferents:.\n"
		"By default, using the --wmes option with a WME on the top state will only print\n"
		"the timetags. To change this, the kernel can be recompiled with\n"
		"DO_TOP_LEVEL_REF_CTS, but this has other consequences (see comments in\n"
		"kernel.h).\n"
		"\n"
		"Examples\n"
		"\n"
		"This example prints the preferences on (S1 ^operator) and the production names\n"
		"which created the preferences:\n"
		"\n"
		"  soar> preferences S1 operator --names\n"
		"  Preferences for S1 ^operator:\n"
		"  acceptables:\n"
		"   O2 (fill) +\n"
		"     From waterjug*propose*fill\n"
		"   O3 (fill) +\n"
		"     From waterjug*propose*fill\n"
		"\n"
		"  unary indifferents:\n"
		"   O2 (fill) =\n"
		"     From waterjug*propose*fill\n"
		"   O3 (fill) =\n"
		"     From waterjug*propose*fill\n"
		"\n"
		"If the current state is S1, then the above syntax is equivalent to:\n"
		"\n"
		"  preferences -n\n"
		"\n"
		"This example shows the support for the WMEs with the ^jug attribute:\n"
		"\n"
		"  soar> preferences s1 jug\n"
		"\n"
		"  Preferences for S1 ^jug:\n"
		"\n"
		"  acceptables:\n"
		"    (S1 ^jug I4)  :O\n"
		"    (S1 ^jug J1)  :O\n"
		"\n"
		"This example shows the support for the WMEs with value J1, and the productions\n"
		"that generated them:\n"
		"\n"
		"  soar> pref J1 -1\n"
		"\n"
		"   Support for (31: O3 ^jug J1)\n"
		"     (O3 ^jug J1)\n"
		"       From water-jug*propose*fill\n"
		"\n"
		"   Support for (11: S1 ^jug J1)\n"
		"     (S1 ^jug J1)  :O\n"
		"       From water-jug*apply*initialize-water-jug-look-ahead\n"
		"\n"
		"This example shows the support for all WMEs that make up the object S1:\n"
		"\n"
		"  soar> pref -o s1\n"
		"\n"
		"  Support for S1 ^problem-space:\n"
		"    (S1 ^problem-space P1)\n"
		"  Support for S1 ^name:\n"
		"    (S1 ^name water-jug)  :O\n"
		"  Support for S1 ^jug:\n"
		"    (S1 ^jug I4)  :O\n"
		"    (S1 ^jug J1)  :O\n"
		"  Support for S1 ^desired:\n"
		"    (S1 ^desired D1)  :O\n"
		"  Support for S1 ^superstate-set:\n"
		"    (S1 ^superstate-set nil)\n"
		"  Preferences for S1 ^operator:\n"
		"  acceptables:\n"
		"    O2 (fill) +\n"
		"    O3 (fill) +\n"
		"  Arch-created wmes for S1 :\n"
		"  (2: S1 ^superstate nil)\n"
		"  (1: S1 ^type state)\n"
		"  Input (IO) wmes for S1 :\n"
		"  (3: S1 ^io I1)\n"
	;
	docstrings["print"] = 
		"Print items in working memory or production memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  print [options] [production_name]\n"
		"  print [options] identifier|timetag|pattern\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* p\n"
		"* pc -> print --chunks\n"
		"* wmes -> print --internal\n"
		"* varprint -> print -v -d 100\n"
		"\n"
		"Options\n"
		"\n"
		"Printing items in production memory\n"
		"\n"
		"What productions to print:\n"
		"\n"
		"Option               Description\n"
		"-a, --all            print the names of all productions currently loaded\n"
		"-c, --chunks         print the names of all chunks currently loaded\n"
		"-D, --defaults       print the names of all default productions currently\n"
		"                     loaded\n"
		"-j, --justifications print the names of all justifications currently loaded.\n"
		"-r, --rl             Print Soar-RL rules\n"
		"-T, --template       Print Soar-RL templates\n"
		"-u, --user           print the names of all user productions currently loaded\n"
		"production_name      print the production named production-name\n"
		"\n"
		"How to print the productions:\n"
		"\n"
		"Option         Description\n"
		"-f, --full     When printing productions, print the whole production. This is\n"
		"               the default when printing a named production.\n"
		"-F, --filename also prints the name of the file that contains the production.\n"
		"               items should be printed in their internal form. For productions,\n"
		"-i, --internal this means leaving conditions in their reordered (rete net)\n"
		"               form.\n"
		"               When printing productions, print only the name and not the whole\n"
		"-n, --name     production. This is the default when printing any category of\n"
		"               productions, as opposed to a named production.\n"
		"\n"
		"Printing items in working memory\n"
		"\n"
		"Option         Description\n"
		"-d, --depth n  This option overrides the default printing depth (see the\n"
		"               default-wme-depth command for more detail).\n"
		"-e, --exact    Print only the wmes that match the pattern\n"
		"               items should be printed in their internal form. For working\n"
		"-i, --internal memory, this means printing the individual elements with their\n"
		"               timetags and activation, rather than the objects.\n"
		"-t, --tree     wmes should be printed in in a tree form (one wme per line).\n"
		"-v, --varprint Print identifiers enclosed in angle brackets.\n"
		"identifier     print the object identifier. identifier must be a valid Soar\n"
		"               symbol such as S1\n"
		"               print the object whose working memory elements matching the\n"
		"pattern        given pattern. See Description for more information on printing\n"
		"               objects matching a specific pattern.\n"
		"timetag        print the object in working memory with the given timetag\n"
		"\n"
		"Printing the current subgoal stack\n"
		"\n"
		"Option          Description\n"
		"-s, --stack     Specifies that the Soar goal stack should be printed. By\n"
		"                default this includes both states and operators.\n"
		"-o, --operators When printing the stack, print only operators.\n"
		"-S, --states    When printing the stack, print only states.\n"
		"\n"
		"Description\n"
		"\n"
		"The print command is used to print items from production memory or working\n"
		"memory. It can take several kinds of arguments. When printing items from\n"
		"working memory, the Soar objects are printed unless the --internal flag is\n"
		"used, in which case the wmes themselves are printed.\n"
		"\n"
		"  (identifier ^attribute value [activation] [+])\n"
		"\n"
		"The activation value is only printed if activation is turned on. See wma.\n"
		"The pattern is surrounded by parentheses. The identifier, attribute, and value\n"
		"must be valid Soar symbols or the wildcard symbol * which matches all\n"
		"occurrences. The optional + symbol restricts pattern matches to acceptable\n"
		"preferences. If wildcards are included, an object will be printed for each\n"
		"pattern match, even if this results in the same object being printed multiple\n"
		"times.\n"
		"\n"
		"Examples\n"
		"\n"
		"Print the objects in working memory (and their timetags) which have wmes with\n"
		"identifier s1 and value v2 (note: this will print the entire s1 object for each\n"
		"match found):\n"
		"\n"
		"  print --internal (s1 ^* v2)\n"
		"\n"
		"Print the Soar stack which includes states and operators:\n"
		"\n"
		"  print --stack\n"
		"\n"
		"Print the named production in its RETE form:\n"
		"\n"
		"  print -if named*production\n"
		"\n"
		"Print the names of all user productions currently loaded:\n"
		"\n"
		"  print -u\n"
		"\n"
		"Default print vs tree print:\n"
		"\n"
		"  print s1 --depth 2\n"
		"  (S1 ^io I1 ^reward-link R1 ^superstate nil ^type state)\n"
		"    (I1 ^input-link I2 ^output-link I3)\n"
		"\n"
		"  print s1 --depth 2 --tree\n"
		"  (S1 ^io I1)\n"
		"    (I1 ^input-link I2)\n"
		"    (I1 ^output-link I3)\n"
		"  (S1 ^reward-link R1)\n"
		"  (S1 ^superstate nil)\n"
		"  (S1 ^type state)\n"
		"\n"
		"See Also\n"
		"\n"
		"default-wme-depth wma\n"
	;
	docstrings["production-find"] = 
		"Find productions by condition or action patterns.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  production-find [-lrs[n|c]] pattern\n"
		"\n"
		"Options\n"
		"\n"
		"Option              Description\n"
		"-c, --chunks        Look only for chunks that match the pattern.\n"
		"-l, --lhs           Match pattern only against the conditions (left-hand side)\n"
		"                    of productions (default).\n"
		"-n, --nochunks      Disregard chunks when looking for the pattern.\n"
		"-r, --rhs           Match pattern against the actions (right-hand side) of\n"
		"                    productions.\n"
		"-s, --show-bindings Show the bindings associated with a wildcard pattern.\n"
		"pattern             Any pattern that can appear in productions.\n"
		"\n"
		"Description\n"
		"\n"
		"The production-find command is used to find productions in production memory\n"
		"that include conditions or actions that match a given pattern. The pattern\n"
		"given specifies one or more condition elements on the left hand side of\n"
		"productions (or negated conditions), or one or more actions on the right-hand\n"
		"side of productions. Any pattern that can appear in productions can be used in\n"
		"this command. In addition, the asterisk symbol, *, can be used as a wildcard\n"
		"for an attribute or value. It is important to note that the whole pattern,\n"
		"including the parenthesis, must be enclosed in curly braces for it to be parsed\n"
		"properly.\n"
		"The variable names used in a call to production-find do not have to match the\n"
		"variable names used in the productions being retrieved.\n"
		"The production-find command can also be restricted to apply to only certain\n"
		"types of productions, or to look only at the conditions or only at the actions\n"
		"of productions by using the flags.\n"
		"\n"
		"Examples\n"
		"\n"
		"Find productions that test that some object gumby has an attribute alive with\n"
		"value t. In addition, limit the rules to only those that test an operator named\n"
		"foo:\n"
		"\n"
		"  production-find (<state> ^gumby <gv> ^operator.name foo)(<gv> ^alive t)\n"
		"\n"
		"Note that in the above command, <state> does not have to match the exact\n"
		"variable name used in the production.\n"
		"Find productions that propose the operator foo:\n"
		"\n"
		"  production-find --rhs (<x> ^operator <op> +)(<op> ^name foo)\n"
		"\n"
		"Find chunks that test the attribute ^pokey:\n"
		"\n"
		"  production-find --chunks (<x> ^pokey *)\n"
		"\n"
		"Examples using the water-jugs demo:\n"
		"\n"
		"  source demos/water-jug/water-jug.soar\n"
		"  production-find (<s> ^name *)(<j> ^volume *)\n"
		"  production-find (<s> ^name *)(<j> ^volume 3)\n"
		"  production-find --rhs (<j> ^* <volume>)\n"
		"\n"
		"See Also\n"
		"\n"
		"sp\n"
	;
	docstrings["pushd"] = 
		"Push a directory onto the directory stack, changing to it.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  pushd directory\n"
		"\n"
		"Description\n"
		"\n"
		"Maintain a stack of working directories and push the directory on to the stack.\n"
		"Can be relative path name or fully specified.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd dirs ls popd source pwd\n"
	;
	docstrings["pwatch"] = 
		"Trace firings and retractions of specific productions.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  pwatch [-d|e] [production name]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* pw\n"
		"\n"
		"Options\n"
		"\n"
		"Option               Description\n"
		"                     Turn production watching off for the specified production.\n"
		"-d, --disable, --off If no production is specified, turn production watching\n"
		"                     off for all productions.\n"
		"                     Turn production watching on for the specified production.\n"
		"-e, --enable, --on   The use of this flag is optional, so this is pwatch's\n"
		"                     default behavior. If no production is specified, all\n"
		"                     productions currently being watched are listed.\n"
		"production name      The name of the production to watch.\n"
		"\n"
		"Description\n"
		"\n"
		"The pwatch command enables and disables the tracing of the firings and\n"
		"retractions of individual productions. This is a companion command to watch,\n"
		"which cannot specify individual productions by name.\n"
		"With no arguments, pwatch lists the productions currently being traced. With\n"
		"one production-name argument, pwatch enables tracing the production; --enable\n"
		"can be explicitly stated, but it is the default action.\n"
		"If --disable is specified followed by a production-name, tracing is turned off\n"
		"for the production. When no production-name is specified, --enable lists all\n"
		"productions currently being traced, and --disable disables tracing of all\n"
		"productions.\n"
		"Note that pwatch now only takes one production per command. Use multiple times\n"
		"to watch multiple functions.\n"
		"\n"
		"See Also\n"
		"\n"
		"watch\n"
	;
	docstrings["pwd"] = 
		"Print the current working directory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  pwd\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* topd\n"
		"\n"
		"Description\n"
		"\n"
		"Prints the current working directory of Soar.\n"
	;
	docstrings["rand"] = 
		"Generate a random number.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  rand                ## returns a real number in [0,1] (calls SoarRand())\n"
		"  rand n              ## returns a real number in [0,n] (calls SoarRand(max))\n"
		"  rand --integer      ## returns an integer in [0,2^32-1] (calls SoarRandInt)\n"
		"  rand --integer n    ## returns an integer in [0,n], n<2^32 (calls SoarRandInt\n"
		"  (max))\n"
		"\n"
		"Options\n"
		"\n"
		"Option        Description\n"
		"-i, --integer Return an integer, optional argument is upper-bound (inclusive)\n"
		"\n"
		"Description\n"
		"\n"
		"Generates a random non-negative number, returning the result in a string.\n"
		"\n"
		"Examples\n"
		"\n"
		"  rand --integer 10 ## returns 0..10, for example: \"4\"\n"
	;
	docstrings["remove-wme"] = 
		"Manually remove an element from working memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  remove-wme timetag\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* rw\n"
		"\n"
		"Options\n"
		"\n"
		"Option  Description\n"
		"timetag A positive integer matching the timetag of an existing working memory\n"
		"        element.\n"
		"\n"
		"Description\n"
		"\n"
		"The remove-wme command removes the working memory element with the given\n"
		"timetag. This command is provided primarily for use in Soar input functions;\n"
		"although there is no programming enforcement, remove-wme should only be called\n"
		"from registered input functions to delete working memory elements on Soar's\n"
		"input link.\n"
		"Beware of weird side effects, including system crashes.\n"
		"\n"
		"Warnings\n"
		"\n"
		"remove-wme should never be called from the RHS: if you try to match a wme on\n"
		"the LHS of a production, and then remove the matched wme on the RHS, Soar will\n"
		"crash.\n"
		"If used other than by input and output functions interfaced with Soar, this\n"
		"command may have weird side effects (possibly even including system crashes).\n"
		"Removing input wmes or context/impasse wmes may have unexpected side effects.\n"
		"You've been warned.\n"
		"\n"
		"See Also\n"
		"\n"
		"add-wme\n"
	;
	docstrings["replay-input"] = 
		"Load input wmes for each decision cycle from a file.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  replay-input --open filename\n"
		"  replay-input [--query]\n"
		"  replay-input --close\n"
		"\n"
		"Options\n"
		"\n"
		"Option      Description\n"
		"filename    Open filename and load input and random seed.\n"
		"-o, --open  Reads captured input from file in to memory and seeds the random\n"
		"            number generator.\n"
		"-q, --query Returns open if input replay is active or closed if not active.\n"
		"-c, --close Stop replaying input.\n"
		"\n"
		"Description\n"
		"\n"
		"Replays input stored using the capture-input command. The replay file also\n"
		"includes a random number generator seed and seeds the generator with that.\n"
		"\n"
		"See Also\n"
		"\n"
		"capture-input\n"
	;
	docstrings["rete-net"] = 
		"Save the current Rete net, or restore a previous one.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  rete-net -s|l filename\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* rn\n"
		"\n"
		"Options\n"
		"\n"
		"Option                    Description\n"
		"-s, --save                Save the Rete net in the named file. Cannot be saved\n"
		"                          when there are justifications present. Use excise -j\n"
		"                          Load the named file into the Rete network. working\n"
		"-l, -r, --load, --restore memory and production memory must both be empty. Use\n"
		"                          excise\n"
		"filename                  The name of the file to save or load.\n"
		"\n"
		"Description\n"
		"\n"
		"The rete-net command saves the current Rete net to a file or restores a Rete\n"
		"net previously saved. The Rete net is Soar's internal representation of\n"
		"production and working memory; the conditions of productions are reordered and\n"
		"common substructures are shared across different productions. This command\n"
		"provides a fast method of saving and loading productions since a special format\n"
		"is used and no parsing is necessary. Rete-net files are portable across\n"
		"platforms that support Soar.\n"
		"Normally users wish to save only production memory. Note that justifications\n"
		"cannot be present when saving the Rete net. Issuing an init-soar before saving\n"
		"a Rete net will remove all justifications and working memory elements.\n"
		"If the filename contains a suffix of .Z, then the file is compressed\n"
		"automatically when it is saved and uncompressed when it is loaded. Compressed\n"
		"files may not be portable to another platform if that platform does not support\n"
		"the same uncompress utility.\n"
		"\n"
		"See Also\n"
		"\n"
		"excise init-soar\n"
	;
	docstrings["rl"] = 
		"Control how numeric indifferent preference values in RL rules are updated via\n"
		"reinforcement learning.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  rl -g|--get <parameter>\n"
		"  rl -s|--set <parameter> <value>\n"
		"  rl -t|--trace <parameter> <value>\n"
		"  rl -S|--stats <statistic>\n"
		"\n"
		"Options\n"
		"\n"
		"Option      Description\n"
		"-g, --get   Print current parameter setting\n"
		"-s, --set   Set parameter value\n"
		"-t, --trace Print, clear, or init traces\n"
		"-S, --stats Print statistic summary or specific statistic\n"
		"\n"
		"Description\n"
		"\n"
		"The rl command sets parameters and displays information related to\n"
		"reinforcement learning. The print and watch commands display additional RL\n"
		"related information not covered by this command.\n"
		"\n"
		"Parameters\n"
		"\n"
		"Due to the large number of parameters, the rl command uses the --get|--set\n"
		"<parameter> <value> convention rather than individual switches for each\n"
		"parameter. Running rl without any switches displays a summary of the parameter\n"
		"settings.\n"
		"\n"
		"Parameter          Description              Possible values         Default\n"
		"                   If enabled, chunking\n"
		"                   does not create\n"
		"chunk-stop         duplicate RL rules that  on, off                 on\n"
		"                   differ only in numeric-\n"
		"                   indifferent preference\n"
		"                   value\n"
		"                   How the learning rate    normal, exponential,\n"
		"decay-mode         changes over time        logarithmic, delta-bar- normal\n"
		"                                            delta\n"
		"discount-rate      Temporal discount        [0, 1]                  0.9\n"
		"                   (gamma)\n"
		"eligibility-trace- Eligibility trace decay  [0, 1]                  0\n"
		"decay-rate         factor (lambda)\n"
		"eligibility-trace- Smallest eligibility\n"
		"tolerance          trace value not          (0, inf)                0.001\n"
		"                   considered 0\n"
		"                   Discounting of RL\n"
		"hrl-discount       updates over time in     on, off                 off\n"
		"                   impassed states\n"
		"learning           Reinforcement learning   on, off                 off\n"
		"                   enabled\n"
		"learning-rate      Learning rate (alpha)    [0, 1]                  0.3\n"
		"learning-policy    Value update policy      sarsa, q-learning       sarsa\n"
		"meta               Store rule metadata in   on, off                 off\n"
		"                   header string\n"
		"temporal-discount  Discount RL updates over on, off                 on\n"
		"                   gaps\n"
		"temporal-extension Propagation of RL        on, off                 on\n"
		"                   updates over gaps\n"
		"trace              Update the trace         on, off                 off\n"
		"update-log-path    File to log information  \"\", <filename>          \"\"\n"
		"                   about RL rule updates\n"
		"\n"
		"Apoptosis Parameters\n"
		"\n"
		"Parameter        Description                    Possible values         Default\n"
		"                 Automatic excising of\n"
		"apoptosis        productions via base-level     none, chunks, rl-chunks none\n"
		"                 decay\n"
		"apoptosis-decay  Base-level decay parameter     [0, 1]                  0.5\n"
		"apoptosis-thresh Base-level threshold parameter (0, inf)                2\n"
		"                 (negates supplied value)\n"
		"\n"
		"Apoptosis is a process to automatically excise chunks via the base-level decay\n"
		"model (where rule firings are the activation events). A value of chunks has\n"
		"this apply to any chunk, whereas rl-chunks means only chunks that are also RL\n"
		"rules can be forgotten.\n"
		"\n"
		"Statistics\n"
		"\n"
		"Soar tracks some RL statistics over the lifetime of the agent. These can be\n"
		"accessed using rl --stats <statistic>. Running rl --stats without a statistic\n"
		"will list the values of all statistics.\n"
		"\n"
		"Option        Description\n"
		"update-error  Difference between target and current values in last RL update\n"
		"total-reward  Total accumulated reward in the last update\n"
		"global-reward Total accumulated reward since agent initialization\n"
		"\n"
		"Delta-Bar-Delta\n"
		"\n"
		"This is an experimental feature of Soar RL. It based on the work in Richard S.\n"
		"Sutton's paper \"Adapting Bias by Gradient Descent: An Incremental Version of\n"
		"Delta-Bar-Delta\", available online at http://webdocs.cs.ualberta.ca/~sutton/\n"
		"papers/sutton-92a.pdf.\n"
		"Delta Bar Delta (DBD) is implemented in Soar RL as a decay mode. It changes the\n"
		"way all the rules in the eligibility trace get their values updated. In order\n"
		"to implement this, the agent gets an additional learning parameter \"meta-\n"
		"learning-rate\" and each rule gets two additional decay parameters: beta and h.\n"
		"The meta learning rate is set manually; the per-rule features are handles\n"
		"automatically by the DBD algorithm. The key idea is that the meta parameters\n"
		"keep track of how much a rule's RL value has been updated recently, and if a\n"
		"rule gets updates in the same direction multiple times in a row then subsequent\n"
		"updates in the same direction will have more effect. So DBD acts sort of like\n"
		"momentum for the learning rate.\n"
		"To enable DBD, use \"rl --set decay-mode delta-bar-delta\". To change the meta\n"
		"learning rate, use e.g. \"rl --set meta-learning-rate 0.1\". When you execute\n"
		"\"rl\", under the Experimental section you'll see the current settings for decay-\n"
		"mode and meta-learning-rate. Also, if a rule gets printed concisely (e.g. by\n"
		"executing \"p\"), and the rule is an RL rule, and the decay mode is set to delta-\n"
		"bar-delta, then instead of printing the rule name followed by the update count\n"
		"and the RL value, it will print the rule name, beta, h, update count, and RL\n"
		"value.\n"
		"Note that DBD is a different feature than \"meta\". Meta determines whether\n"
		"metadata about a production is stored in its header string. If meta is on and\n"
		"DBD is on, then each rule's beta and h values will be stored in the header\n"
		"string in addition to the update count, so you can print out the rule, source\n"
		"it later and that metadata about the rule will still be in place.\n"
		"\n"
		"RL Update Logging\n"
		"\n"
		"Sets a path to a file that Soar RL will write to whenever a production's RL\n"
		"value gets updated. This can be useful for logging these updates without having\n"
		"to capture all of Soar's output and parse it for these updates. Enable with\n"
		"e.g. \"rl --set update-log-path rl_log.txt\". Disable with - that is, use the\n"
		"empty string \"\" as the log path. The current log path appears under the\n"
		"experimental section when you execute \"rl\".\n"
		"\n"
		"RL Trace\n"
		"\n"
		"If \"rl --set trace on\" has been called, then proposed operators will be\n"
		"recorded in the trace for all goal levels. Along with operator names and other\n"
		"attribute-value pairs, transition probabilities derived from their numeric\n"
		"preferences are recorded.\n"
		"Legal arguments following \"rl -t\" or \"rl --trace\" are as follows:\n"
		"\n"
		"Option Description\n"
		"print  Print the trace for the top state.\n"
		"clear  Erase the traces for all goal levels.\n"
		"init   Restart recording from the beginning of the traces for all goal levels.\n"
		"\n"
		"These may be followed by an optional numeric argument specifying a specific\n"
		"goal level to print, clear, or init. \"rl -t init\" is called automatically\n"
		"whenever Soar is reinitialized. However, \"rl -t clear\" is never called\n"
		"automatically.\n"
		"The format in which the trace is printed is designed to be used by the program\n"
		"dot, as part of the Graphviz suite. The command \"ctf rl.dot rl -t\" will print\n"
		"the trace for the top state to the file \"rl.dot\". (The default behavior for \"rl\n"
		"-t\" is to print the trace for the top state.)\n"
		"Here are some sample dot invocations for the top state:\n"
		"\n"
		"Option                     Description\n"
		"dot -Tps rl.dot -o rl.ps   ps2pdf rl.ps\n"
		"dot -Tsvg rl.dot -o rl.svg inkscape -f rl.svg -A rl.pdf\n"
		"\n"
		"The .svg format works better for large traces.\n"
		"\n"
		"See Also\n"
		"\n"
		"excise print watch\n"
	;
	docstrings["run"] = 
		"Begin Soar's execution cycle.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  run -[d|e|o|p][g][u|n][s] [count] [-i e|p|d|o]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* d -> run -d 1\n"
		"* e -> run -e 1\n"
		"* step -> run 1\n"
		"\n"
		"Options\n"
		"\n"
		"Option            Description\n"
		"-d, --decision    Run Soar for count decision cycles.\n"
		"-e, --elaboration Run Soar for count elaboration cycles.\n"
		"-o, --output      Run Soar until the nth time output is generated by the agent.\n"
		"                  Limited by the value of max-nil-output-cycles.\n"
		"-p, --phase       Run Soar by phases. A phase is either an input phase,\n"
		"                  proposal phase, decision phase, apply phase, or output phase.\n"
		"-s, --self        If other agents exist within the kernel, do not run them at\n"
		"                  this time.\n"
		"                  Sets a flag in the update event callback requesting that an\n"
		"-u, --update      environment updates. This is the default if --self is not\n"
		"                  specified.\n"
		"                  Sets a flag in the update event callback requesting that an\n"
		"-n, --noupdate    environment does not update. This is the default if --self is\n"
		"                  specified.\n"
		"count             A single integer which specifies the number of cycles to run\n"
		"                  Soar.\n"
		"                  Support round robin execution across agents at a finer grain\n"
		"-i, --interleave  than the run-size parameter. e = elaboration, p = phase, d =\n"
		"                  decision, o = output\n"
		"-g, --goal        Run agent until a goal retracts\n"
		"\n"
		"Deprecated Options\n"
		"\n"
		"These may be reimplemented in the future.\n"
		"\n"
		"Option     Description\n"
		"--operator Run Soar until the nth time an operator is selected.\n"
		"--state    Run Soar until the nth time a state is selected.\n"
		"\n"
		"Description\n"
		"\n"
		"The run command starts the Soar execution cycle or continues any execution that\n"
		"was temporarily stopped. The default behavior of run, with no arguments, is to\n"
		"cause Soar to execute until it is halted or interrupted by an action of a\n"
		"production, or until an external interrupt is issued by the user. The run\n"
		"command can also specify that Soar should run only for a specific number of\n"
		"Soar cycles or phases (which may also be prematurely stopped by a production\n"
		"action or the stop-soar command). This is helpful for debugging sessions, where\n"
		"users may want to pay careful attention to the specific productions that are\n"
		"firing and retracting.\n"
		"The run command takes optional arguments: an integer, count, which specifies\n"
		"how many units to run; and a units flag indicating what steps or increments to\n"
		"use. If count is specified, but no units are specified, then Soar is run by\n"
		"decision cycles. If units are specified, but count is unpecified, then count\n"
		"defaults to '1'. If both are unspecified, Soar will run until either a halt is\n"
		"executed, an interrupt is received, or max stack depth is reached.\n"
		"If there are multiple Soar agents that exist in the same Soar process, then\n"
		"issuing a run command in any agent will cause all agents to run with the same\n"
		"set of parameters, unless the flag --self is specified, in which case only that\n"
		"agent will execute.\n"
		"If an environment is registered for the kernel's update event, then when the\n"
		"event it triggered, the environment will get information about how the run was\n"
		"executed. If a run was executed with the --update option, then then event sends\n"
		"a flag requesting that the environment actually update itself. If a run was\n"
		"executed with the --noupdate option, then the event sends a flag requesting\n"
		"that the environment not update itself. The --update option is the default when\n"
		"run is specified without the --self option is not specified. If the --self\n"
		"option is specified, then the --noupdate option is on by default. It is up to\n"
		"the environment to check for these flags and honor them.\n"
		"Some use cases include:\n"
		"\n"
		"Option              Description\n"
		"run --self          runs one agent but not the environment\n"
		"run --self --update runs one agent and the environment\n"
		"run                 runs all agents and the environment\n"
		"run --noupdate      runs all agents but not the environment\n"
		"\n"
		"Setting an interleave size\n"
		"\n"
		"When there are multiple agents running within the same process, it may be\n"
		"useful to keep agents more closely aligned in their execution cycle than the\n"
		"run increment (--elaboration, --phases, --decisions, --output) specifies. For\n"
		"instance, it may be necessary to keep agents in \"lock step\" at the phase level,\n"
		"even though the run command issued is for 5 decisions. Some use cases include:\n"
		"\n"
		"Option        Description\n"
		"run -d 5 -i p run the agent one phase and then move to the next agent, looping\n"
		"              over agents until they have run for 5 decision cycles\n"
		"              run the agent one decision cycle and then move to the next agent.\n"
		"run -o 3 -i d When an agent generates output for the 3rd time, it no longer\n"
		"              runs even if other agents continue.\n"
		"\n"
		"The interleave parameter must always be equal to or smaller than the specified\n"
		"run parameter.\n"
		"\n"
		"Note\n"
		"\n"
		"If Soar has been stopped due to a halt action, an init-soar command must be\n"
		"issued before Soar can be restarted with the run command.\n"
	;
	docstrings["select"] = 
		"Force the next selected operator\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  select id\n"
		"\n"
		"Options\n"
		"\n"
		"If no \"id\" is supplied, currently \"select\"ed operator (if applicable) is\n"
		"displayed\n"
		"\n"
		"Option Description\n"
		"id     case-insensitive operator id of the operator to be selected in the next\n"
		"       decision phase\n"
		"\n"
		"Description\n"
		"\n"
		"The select command will force the selection of an operator, whose id is\n"
		"supplied as an argument, during the next decision phase. If the argument is not\n"
		"a proposed operator in the next decision phase, an error is raised and operator\n"
		"selection proceeds as if the select command had not been called. Otherwise, the\n"
		"supplied operator will be selected as the next operator, regardless of\n"
		"preferences. If select is called with no id argument, the command returns the\n"
		"operator id currently forced for selection (by a previous call to select), if\n"
		"one exists.\n"
		"\n"
		"Examples\n"
		"\n"
		"Assuming operator \"O2\" is a valid operator, this would select it as the next\n"
		"operator to be selected:\n"
		"\n"
		"  select O2\n"
		"\n"
		"After this command, issuing just \"select\" will get \"O2\" as a return:\n"
		"\n"
		"  select\n"
		"\n"
		"See Also\n"
		"\n"
		"predict\n"
	;
	docstrings["set-library-location"] = 
		"Set the top level directory containing demos/help/etc.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  set-library-location [directory]\n"
		"\n"
		"Options\n"
		"\n"
		"Option    Description\n"
		"directory The new desired library location.\n"
		"\n"
		"Description\n"
		"\n"
		"Invoke with no arguments to query what the current library location is.\n"
		"\n"
		"See Also\n"
		"\n"
		"help\n"
	;
	docstrings["set-stop-phase"] = 
		"Controls the phase where agents stop when running by decision.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  set-stop-phase -[ABadiop]\n"
		"\n"
		"Options\n"
		"\n"
		"Options -A and -B are optional and mutually exclusive. If not specified, the\n"
		"default is -B.\n"
		"Only one of -a, -d, -i, -o, -p must be selected.\n"
		"With no options, reports the current stop phase.\n"
		"\n"
		"Option         Description\n"
		"-A, --after    Stop after specified phase.\n"
		"-B, --before   Stop before specified phase (the default).\n"
		"-a, --apply    Select the apply phase.\n"
		"-d, --decision Select the decision phase.\n"
		"-i, --input    Select the input phase.\n"
		"-o, --output   Select the output phase.\n"
		"-p, --proposal Select the proposal phase.\n"
		"\n"
		"Description\n"
		"\n"
		"When running by decision cycle it can be helpful to have agents stop at a\n"
		"particular point in its execution cycle. This command allows the user to\n"
		"control which phase Soar stops in. The precise definition is that \"running for\n"
		"n decisions and stopping before phase ph means to run until the decision cycle\n"
		"counter has increased by n and then stop when the next phase is ph\". The phase\n"
		"sequence (as of this writing) is: input, proposal, decision, apply, output.\n"
		"Stopping after one phase is exactly equivalent to stopping before the next\n"
		"phase.\n"
		"On initialization Soar defaults to stopping before the input phase (or after\n"
		"the output phase, however you like to think of it).\n"
		"Setting the stop phase applies to all agents.\n"
		"\n"
		"Examples\n"
		"\n"
		"  set-stop-phase -Bi                 // stop before input phase\n"
		"  set-stop-phase -Ad                 // stop after decision phase (before apply\n"
		"  phase)\n"
		"  set-stop-phase -d                  // stop before decision phase\n"
		"  set-stop-phase --after --output    // stop after output phase\n"
		"  set-stop-phase                     // reports the current stop phase\n"
	;
	docstrings["smem"] = 
		"Control the behavior of semantic memory.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  smem\n"
		"\n"
		"  ### Options\n"
		"\n"
		"  | **Option** | **Description** |\n"
		"  |:-----------|:----------------|\n"
		"  | `-e, --enable, --on` | Enable semantic memory. |\n"
		"  | `-d, --disable, --off` | Disable semantic memory. |\n"
		"  | `-g, --get` | Print current parameter setting |\n"
		"  | `-s, --set` | Set parameter value |\n"
		"  | `-i, --init` | Reinitialize ALL memories |\n"
		"  | `-S, --stats` | Print statistic summary or specific statistic |\n"
		"  | `-t, --timers` | Print timer summary or specific statistic |\n"
		"  | `-a, --add` | Add concepts to semantic memory |\n"
		"  | `-r, --remove`| Remove concepts from semantic memory|\n"
		"  | `-q, --query`| Print concepts in semantic store matching some cue|\n"
		"  | `-h, --history`| Print activation history for some LTI|\n"
		"  | `-v, --viz` | Print semantic store in graphviz format |\n"
		"  | `-b, --backup` | Creates a backup of the semantic database on disk |\n"
		"\n"
		"  ### Description\n"
		"\n"
		"  The `smem` command changes the behavior of and displays information\n"
		"  about semantic memory.  The command `watch --smem` displays additional\n"
		"  trace information for semantic memory not controlled by this command.\n"
		"\n"
		"  #### Printing\n"
		"\n"
		"  To print from semantic memory, the standard print command can be used,\n"
		"  for example, to print a specific LTI:\n"
		"  `p @23`\n"
		"  To print the entire semantic store:\n"
		"  `p @`\n"
		"  Note that such print commands will honor the --depth parameter passed in.\n"
		"\n"
		"  #### Parameters\n"
		"\n"
		"  Due to the large number of parameters, the `smem` command uses the\n"
		"  `--get|--set <parameter> <value>` convention rather than individual\n"
		"  switches for each parameter.  Running `smem` without any switches\n"
		"  displays a summary of the parameter settings.\n"
		"\n"
		"  ##### Main Parameters\n"
		"  | **Parameter** | **Description** | **Possible values** | **Default** |\n"
		"  |:--------------|:----------------|:--------------------|:------------|\n"
		"  | `append`      | Controls whether database is overwritten or appended when\n"
		"  opening or re-initializing | `on`, `off`         | `off`       |\n"
		"  | `database`    | Database storage method | `file`, `memory`    | `memory`\n"
		"  |\n"
		"  | `learning`    | Semantic memory enabled | `on`, `off`         | `off`\n"
		"  |\n"
		"  | `path`        |  Location of database file | _empty_, _some path_ | _empty_\n"
		"  |\n"
		"\n"
		"  The `learning` parameter turns the episodic memory module on or off.\n"
		"  When `learning` is set to `off`, no new episodes are encoded and no\n"
		"  commands put on the epmem link are processed.  This is the same as\n"
		"  using the enable and disable commands.\n"
		"\n"
		"  The `path` parameter specifies the file system path the database is stored\n"
		"  in.  When `path` is set to a valid file system path and database mode is set\n"
		"  to\n"
		"  file, then the SQLite database is written to that path.\n"
		"\n"
		"  The append parameter will determine\n"
		"  whether all existing facts stored in a database on disk will be erased\n"
		"  when semantic memory loads. Note that this affects semantic memory re-\n"
		"  initialization\n"
		"  also, i.e. if the append setting is off, all semantic facts\n"
		"  stored to disk will be lost when an init-soar is performed. For semantic\n"
		"  memory,\n"
		"  append mode is by default on.\n"
		"\n"
		"  Note that changes to database, path and append will not have\n"
		"  an effect until the database is used after an initialization.  This\n"
		"  happens either shortly after launch (on first use) or after a database\n"
		"  initialization\n"
		"  command is issued.  To switch databases or database storage types while\n"
		"  running, set your new parameters and then perform an `smem --init` command.\n"
		"\n"
		"  The `smem --backup` command can be used to make\n"
		"  a copy of the current state of the database, whether in memory or on\n"
		"  disk. This command will commit all outstanding changes before\n"
		"  initiating the copy.\n"
		"\n"
		"  ##### Activation Parameters\n"
		"  | **Parameter** | **Description** | **Possible values** | **Default** |\n"
		"  |:--------------|:----------------|:--------------------|:------------|\n"
		"  | `activation-mode` | Sets the ordering bias for retrievals that match more\n"
		"  than one memory | `recency`, `frequency`, `base-level` | `recency`   |\n"
		"  | `activate-on-query` | Determines if the results of queries should be\n"
		"  activated | `on`, `off`         | `on`        |\n"
		"  | `base-decay`  | Sets the decay parameter for base-level activation\n"
		"  computation | `>` 0               | 0.5         |\n"
		"  | `base-update-policy` | Sets the policy for re-computing base-level\n"
		"  activation | `stable`, `naive`, `incremental` | `stable`    |\n"
		"  | `base-incremental-threshes` | Sets time deltas after which base-level\n"
		"  activation is re-computed for old memories | 1, 2, 3, ...        | 10\n"
		"  |\n"
		"  | `thresh`      | Threshold for activation locality | 0, 1, ...           |\n"
		"  100         |\n"
		"\n"
		"  If `activation-mode` is `base-level`, three parameters control bias values.\n"
		"  The `base-decay` parameter sets the free decay parameter in the base-level\n"
		"  model. Note that we do implement the (Petrov, 2006) approximation, with a\n"
		"  history size set as a compile-time parameter (default=10). The `base-update-\n"
		"  policy` sets the frequency with which activation is recomputed. The default,\n"
		"  `stable`, only recomputes activation when a memory is referenced (through\n"
		"  storage or retrieval). The `naive` setting will update the entire candidate\n"
		"  set of memories (defined as those that match the most constraining cue WME)\n"
		"  during a retrieval, which has severe performance detriment and should be used\n"
		"  for experimentation or those agents that require high-fidelity retrievals.\n"
		"  The `incremental` policy updates a constant number of memories, those with\n"
		"  last-access ages defined by the `base-incremental-threshes` set.\n"
		"\n"
		"  ##### Performance Parameters\n"
		"  | **Parameter** | **Description** | **Possible values** | **Default** |\n"
		"  |:--------------|:----------------|:--------------------|:------------|\n"
		"  | `cache-size`  | Number of memory pages used in the SQLite cache | 1, 2, ...\n"
		"  | 10000       |\n"
		"  | `lazy-commit` | Delay writing semantic store changes to file until agent\n"
		"  exits | `on`, `off`         | `on`        |\n"
		"  | `optimization` |  Policy for committing data to disk | `safety`,\n"
		"  `performance` | `performance` |\n"
		"  | `page-size`   | Size of each memory page used in the SQLite cache | 1k, 2k,\n"
		"  4k, 8k, 16k, 32k, 64k | 8k          |\n"
		"  | `timers`      | Timer granularity | `off`, `one`, `two`, `three` | `off`\n"
		"  |\n"
		"\n"
		"  When the database is stored to disk, the\n"
		"  `lazy-commit` and `optimization` parameters control how\n"
		"  often cached database changes are written to disk.  These parameters\n"
		"  trade off safety in the case of a program crash with database\n"
		"  performance.  When `optimization` is set to `performance`, the agent\n"
		"  will have an exclusive lock on the database, meaning it cannot be\n"
		"  opened concurrently by another SQLite process such as SQLiteMan.  The\n"
		"  lock can be relinquished by setting the database to memory or another\n"
		"  database and issuing init-soar/`smem --init` or by shutting down\n"
		"  the Soar kernel.\n"
		"\n"
		"  #### Statistics\n"
		"\n"
		"  Semantic memory tracks statistics over the lifetime of the agent.\n"
		"  These can be accessed using `smem --stats <statistic>`.  Running\n"
		"  `smem --stats` without a statistic will list the values of all\n"
		"  statistics.  Unlike timers, statistics will always be updated.\n"
		"  Available statistics are:\n"
		"\n"
		"  | **Name** | **Label** | **Description** |\n"
		"  |:---------|:----------|:----------------|\n"
		"  | `act_updates` | Activation Updates | Number of times memory activation has\n"
		"  been calculated |\n"
		"  | `db-lib-version` | SQLite Version | SQLite library version |\n"
		"  | `edges`  | Edges     | Number of edges in the semantic store |\n"
		"  | `mem-usage` | Memory Usage | Current SQLite memory usage in bytes |\n"
		"  | `mem-high` | Memory Highwater | High SQLite memory usage watermark in bytes\n"
		"  |\n"
		"  | `nodes`  | Nodes     | Number of nodes in the semantic store |\n"
		"  | `queries` | Queries   | Number of times the **query** command has been\n"
		"  issued |\n"
		"  | `retrieves` | Retrieves | Number of times the **retrieve** command has been\n"
		"  issued |\n"
		"  | `stores` | Stores    | Number of times the **store** command has been\n"
		"  issued |\n"
		"\n"
		"  #### Timers\n"
		"\n"
		"  Semantic memory also has a set of internal timers that record the\n"
		"  durations of certain operations.  Because fine-grained timing can\n"
		"  incur runtime costs, semantic memory timers are off by default.\n"
		"  Timers of different levels of detail can be turned on by issuing\n"
		"  `smem --set timers <level>`,\n"
		"  where the levels can be `off`, `one`, `two`, or `three`, `three` being\n"
		"  most detailed and resulting in all timers being turned on.  Note that\n"
		"  none of the semantic memory statistics nor timing information is\n"
		"  reported by the `stats` command.\n"
		"\n"
		"  All timer values are reported in seconds.\n"
		"\n"
		"  Level one\n"
		"\n"
		"  | **Timer** | **Description** |\n"
		"  |:----------|:----------------|\n"
		"  | `_total`  | Total smem operations |\n"
		"\n"
		"  Level two\n"
		"\n"
		"  | **Timer** | **Description** |\n"
		"  |:----------|:----------------|\n"
		"  | `smem_api` | Agent command validation |\n"
		"  | `smem_hash` | Hashing symbols |\n"
		"  | `smem_init` | Semantic store initialization |\n"
		"  | `smem_ncb_retrieval` | Adding concepts (and children) to working memory |\n"
		"  | `smem_query` | Cue-based queries |\n"
		"  | `smem_storage` | Concept storage |\n"
		"\n"
		"  Level three\n"
		"\n"
		"  | **Timer** | **Description** |\n"
		"  |:----------|:----------------|\n"
		"  | three\\_activation | Recency information maintenance |\n"
		"\n"
		"  #### Manual Storage\n"
		"\n"
		"  Concepts can be manually added to the semantic store using the\n"
		"  `smem --add <concept>`\n"
		"  command.  The format for specifying the concept is similar to that of\n"
		"  adding WMEs to working memory on the RHS of productions.  For example:\n"
		"\n"
		"smem --add { ( ^add10-facts ) ( ^digit1 1 ^digit-10 11) ( ^digit1 2 ^digit-10\n"
		"12) ( ^digit1 3 ^digit-10 13) }\n"
		"\n"
		"  Although not shown here, the common \"dot-notation\" format used in\n"
		"  writing productions can also be used for this command.  Unlike agent\n"
		"  storage, manual storage is automatically recursive.  Thus, the above\n"
		"  example will add a new concept (represented by the temporary\n"
		"  \"arithmetic\" variable) with three children.  Each child will be its\n"
		"  own concept with two constant attribute/value pairs.\n"
		"\n"
		"  #### Manual Removal\n"
		"\n"
		"  Part or all of the information in the semantic store of some LTI can be\n"
		"  manually removed from the semantic store using the\n"
		"\n"
		"smem --remove\n"
		"\n"
		"  command.  The format for specifying what to remove is similar to that of\n"
		"  adding WMEs to working memory on the RHS of productions.  For example:\n"
		"\n"
		"smem --remove { (@34 ^good-attribute |gibberish value|) }\n"
		"\n"
		"  If `good-attribute` is multi-valued, then all values will remain in the store\n"
		"  except `|gibberish value|`.  If `|gibberish value|` is the only value, then\n"
		"  `good-attribute` will also be removed.  It is not possible to use the common\n"
		"  \"dot-notation\" for this command.  Manual removal is not recursive.\n"
		"\n"
		"  Another example highlights the ability to remove all of the values for an\n"
		"  attribute:\n"
		"\n"
		"smem --remove { (@34 ^bad-attribute) }\n"
		"\n"
		"  When a value is not given, all of the values for the given attribute are\n"
		"  removed from the LTI in the semantic store.\n"
		"\n"
		"  Also, it is possible to remove all augmentations of some LTI from the\n"
		"  semantic store:\n"
		"\n"
		"smem --remove { (@34) }\n"
		"\n"
		"  This would remove all attributes and values of `@34` from the semantic store.\n"
		"  The LTI will remain in the store, but will lack augmentations.\n"
		"\n"
		"  (Use the following at your own risk.)  Optionally, the user can force removal\n"
		"  even in the event of an error:\n"
		"\n"
		"smem -r {(@34 ^bad-attribute ^bad-attribute-2)} force\n"
		"\n"
		"  Suppose that LTI `@34` did not contain `bad-attribute`.  The above example\n"
		"  would remove `bad-attribute-2` even though it would indicate an error (having\n"
		"  not found `bad-attribute`).\n"
		"\n"
		"  #### Manual Query\n"
		"\n"
		"  Queries for LTIs in the semantic store that match some cue can be initialized\n"
		"  external to an agent using the\n"
		"  `smem --query <cue> [<num>]`\n"
		"  command.  The format for specifying the cue is similar to that of adding a\n"
		"  new identifier to working memory in the RHS of a rule:\n"
		"\n"
		"smem --query { ( ^attribute ^attribute-2 |constant|) }\n"
		"\n"
		"  Note that the root of the cue structure must be a variable and should be\n"
		"  unused in the rest of the cue structure.  This command is for testing and the\n"
		"  full range of queries accessible to the agent are not yet available for the\n"
		"  command.  For example, math queries are not supported.\n"
		"\n"
		"  The additional option of `<num>` will trigger the display of the top `<num>`\n"
		"  most activated LTIs that matched the cue.\n"
		"\n"
		"  The result of a manual query is either to print that no LTIs could be found\n"
		"  or to print the information associated with LTIs that were found in the `smem\n"
		"  --print <lti>` format.\n"
		"\n"
		"  #### History\n"
		"\n"
		"  When the activation-mode of a semantic store is set to base-level, some\n"
		"  history of activation events is stored for each LTI.  This history of when\n"
		"  some LTI was activated can be displayed:\n"
		"\n"
		"      smem --history @34\n"
		"\n"
		"  In the event that semantic memory is not using base-level activation,\n"
		"  `history` will mimic `print`.\n"
		"\n"
		"  ### See Also\n"
		"\n"
		"  [watch](_watch) [print](_print) [visualize](_visualize)\n"
	;
	docstrings["source"] = 
		"Load and evaluate the contents of a file.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  source [options] filename\n"
		"\n"
		"Options\n"
		"\n"
		"Option        Description\n"
		"filename      The file of Soar productions and commands to load.\n"
		"-a, --all     Enable a summary for each file sourced\n"
		"-d, --disable Disable all summaries\n"
		"-v, --verbose Print excised production names\n"
		"\n"
		"Description\n"
		"\n"
		"Load and evaluate the contents of a file. The filename can be a relative path\n"
		"or a fully qualified path. source will generate an implicit push to the new\n"
		"directory, execute the command, and then pop back to the current working\n"
		"directory from which the command was issued.\n"
		"After the source completes, the number of productions sourced and excised is\n"
		"printed:\n"
		"\n"
		"  agent> source demos/mac/mac.soar\n"
		"  ******************\n"
		"  Total: 18 productions sourced.\n"
		"  Source finished.\n"
		"  agent> source demos/mac/mac.soar\n"
		"  #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n"
		"  Total: 18 productions sourced. 18 productions excised.\n"
		"  Source finished.\n"
		"\n"
		"This can be disabled by using the -d flag:\n"
		"\n"
		"  agent> source demos/mac/mac.soar -d\n"
		"  ******************\n"
		"  Source finished.\n"
		"  agent> source demos/mac/mac.soar -d\n"
		"  #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n"
		"  Source finished.\n"
		"\n"
		"A list of excised productions is available using the -v flag:\n"
		"\n"
		"  agent> source demos/mac/mac.soar -v\n"
		"  #*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n"
		"  Total: 18 productions sourced. 18 productions excised.\n"
		"  Excised productions:\n"
		"          mac*detect*state*success\n"
		"          mac*evaluate*state*failure*more*cannibals\n"
		"          monitor*move-boat\n"
		"          monitor*state*left\n"
		"  ...\n"
		"\n"
		"A separate summary for each file sourced can be enabled using the -a flag:\n"
		"\n"
		"  agent> source demos/mac/mac.soar -a\n"
		"  _firstload.soar: 0 productions sourced.\n"
		"  all_source.soar: 0 productions sourced.\n"
		"  **\n"
		"  goal-test.soar: 2 productions sourced.\n"
		"  ***\n"
		"  monitor.soar: 3 productions sourced.\n"
		"  ****\n"
		"  search-control.soar: 4 productions sourced.\n"
		"  top-state.soar: 0 productions sourced.\n"
		"  elaborations_source.soar: 0 productions sourced.\n"
		"  _readme.soar: 0 productions sourced.\n"
		"  **\n"
		"  initialize-mac.soar: 2 productions sourced.\n"
		"  *******\n"
		"  move-boat.soar: 7 productions sourced.\n"
		"  mac_source.soar: 0 productions sourced.\n"
		"  mac.soar: 0 productions sourced.\n"
		"  Total: 18 productions sourced.\n"
		"  Source finished.\n"
		"\n"
		"Combining the -a and -v flags add excised production names to the output for\n"
		"each file.\n"
		"\n"
		"See Also\n"
		"\n"
		"cd dirs ls pushd popd pwd\n"
	;
	docstrings["sp"] = 
		"Define a Soar production.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  sp {production_body}\n"
		"\n"
		"Options\n"
		"\n"
		"Option          Description\n"
		"production_body A Soar production.\n"
		"\n"
		"Description\n"
		"\n"
		"The sp command creates a new production and loads it into production memory.\n"
		"production_body is a single argument parsed by the Soar kernel, so it should be\n"
		"enclosed in curly braces to avoid being parsed by other scripting languages\n"
		"that might be in the same process. The overall syntax of a rule is as follows:\n"
		"\n"
		"    name\n"
		"        [\"documentation-string\"]\n"
		"        [FLAG*]\n"
		"        LHS\n"
		"        -->\n"
		"        RHS\n"
		"\n"
		"The first element of a rule is its name. Conventions for names are given in the\n"
		"Soar Users Manual. If given, the documentation-string must be enclosed in\n"
		"double quotes. Optional flags define the type of rule and the form of support\n"
		"its right-hand side assertions will receive. The specific flags are listed in a\n"
		"separate section below. The LHS defines the left-hand side of the production\n"
		"and specifies the conditions under which the rule can be fired. Its syntax is\n"
		"given in detail in a subsequent section. The --> symbol serves to separate the\n"
		"LHS and RHS portions. The RHS defines the right-hand side of the production and\n"
		"specifies the assertions to be made and the actions to be performed when the\n"
		"rule fires. The syntax of the allowable right-hand side actions are given in a\n"
		"later section. The Soar Users Manual gives an elaborate discussion of the\n"
		"design and coding of productions. Please see that reference for tutorial\n"
		"information about productions.\n"
		"If the name of the new production is the same as an existing one, the old\n"
		"production will be overwritten (excised).\n"
		"Rules matching the following requirement are flagged upon being created/\n"
		"sourced: a rule is a Soar-RL rule if and only if its right hand side (RHS)\n"
		"consists of a single numeric preference and it is not a template rule (see\n"
		"FLAGs below). This format exists to ease technical requirements of identifying/\n"
		"updating Soar-RL rules, as well as to make it easy for the agent programmer to\n"
		"add/maintain RL capabilities within an agent. See the Soar-RL Manual for\n"
		"further details.\n"
		"\n"
		"RULE FLAGS\n"
		"\n"
		"The optional FLAGs are given below. Note that these switches are preceeded by a\n"
		"colon instead of a dash -- this is a Soar parser convention.\n"
		"\n"
		"  :o-support      specifies that all the RHS actions are to be given\n"
		"                  o-support when the production fires\n"
		"\n"
		"  :no-support     specifies that all the RHS actions are only to be given\n"
		"                  i-support when the production fires\n"
		"\n"
		"  :default        specifies that this production is a default production\n"
		"                  (this matters for excise -task and watch task)\n"
		"\n"
		"  :chunk          specifies that this production is a chunk\n"
		"                  (this matters for learn trace)\n"
		"\n"
		"  :interrupt      specifies that Soar should stop running when this\n"
		"                  production matches but before it fires\n"
		"                  (this is a useful debugging tool)\n"
		"\n"
		"  :template       specifies that this production should be used to generate\n"
		"                  new reinforcement learning rules by filling in those\n"
		"                  variables that match constants in working memory\n"
		"\n"
		"Multiple flags may be used, but not both of o-support and no-support.\n"
		"Although you could force your productions to provide O-support or I-support by\n"
		"using these commands --- regardless of the structure of the conditions and\n"
		"actions of the production --- this is not proper coding style. The o-support\n"
		"and no-support flags are included to help with debugging, but should not be\n"
		"used in a standard Soar program.\n"
		"\n"
		"Examples\n"
		"\n"
		"  sp {blocks*create-problem-space\n"
		"       \"This creates the top-level space\"\n"
		"       (state <s1> ^superstate nil)\n"
		"       -->\n"
		"       (<s1> ^name solve-blocks-world ^problem-space <p1>)\n"
		"       (<p1> ^name blocks-world)\n"
		"  }\n"
		"\n"
		"See Also\n"
		"\n"
		"excise learn watch\n"
	;
	docstrings["srand"] = 
		"Seed the random number generator.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  srand [seed]\n"
		"\n"
		"Options\n"
		"\n"
		"Option Description\n"
		"seed   Random number generator seed.\n"
		"\n"
		"Description\n"
		"\n"
		"Seeds the random number generator with the passed seed. Calling srand without\n"
		"providing a seed will seed the generator based on the contents of /dev/urandom\n"
		"(if available) or else based on time() and clock() values.\n"
		"\n"
		"Examples\n"
		"\n"
		"  srand 0\n"
	;
	docstrings["stats"] = 
		"Print information on Soar's runtime statistics.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  stats [options]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* st\n"
		"\n"
		"Options\n"
		"\n"
		"Option           Description\n"
		"-m, --memory     report usage for Soar's memory pools\n"
		"-r, --rete       report statistics about the rete structure\n"
		"-s, --system     report the system (agent) statistics (default)\n"
		"-M, --max        report the per-cycle maximum statistics (decision cycle time,\n"
		"                 WM changes, production fires)\n"
		"-R, --reset      zero out the per-cycle maximum statistics reported by --max\n"
		"                 command\n"
		"-t, --track      begin tracking the per-cycle maximum statistics reported by --\n"
		"                 max for each cycle (instead of only the max value)\n"
		"-T, --stop-track stop and clear tracking of the per-cycle maximum statistics\n"
		"-c, --cycle      print out collected per-cycle maximum statistics saved by --\n"
		"                 track in human-readable form\n"
		"-C, --cycle-csv  print out collected per-cycle maximum statistics saved by --\n"
		"                 track in comma-separated form\n"
		"-S, --sort N     sort the tracked cycle stats by column number N, see table\n"
		"                 below\n"
		"\n"
		"Tracked Cycle Stats Columns\n"
		"\n"
		"For use with --sort option. Negative values sorts descending.\n"
		"\n"
		"Option Description\n"
		"0      Use default sort\n"
		"1, -1  Sort by decision cycle (use negative for descending)\n"
		"2, -2  Sort by DC time (use negative for descending)\n"
		"3, -3  Sort by WM changes (use negative for descending)\n"
		"4, -4  Sort by production firings (use negative for descending)\n"
		"\n"
		"Description\n"
		"\n"
		"This command prints Soar internal statistics. The argument indicates the\n"
		"component of interest, --system is used by default.\n"
		"With the --system flag, the stats command lists a summary of run statistics,\n"
		"including the following:\n"
		"\n"
		"* Version --- The Soar version number, hostname, and date of the run.\n"
		"* Number of productions --- The total number of productions loaded in the\n"
		"  system, including all chunks built during problem solving and all default\n"
		"  productions.\n"
		"* Timing Information --- Might be quite detailed depending on the flags set at\n"
		"  compile time. See note on timers below.\n"
		"* Decision Cycles --- The total number of decision cycles in the run and the\n"
		"  average time-per-decision-cycle in milliseconds.\n"
		"* Elaboration cycles --- The total number of elaboration cycles that were\n"
		"  executed during the run, the average number of elaboration cycles per\n"
		"  decision cycle, and the average time-per-elaboration-cycle in milliseconds.\n"
		"  This is not the total number of production firings, as productions can fire\n"
		"  in parallel.\n"
		"* Production Firings --- The total number of productions that were fired.\n"
		"* Working Memory Changes --- This is the total number of changes to working\n"
		"  memory. This includes all additions and deletions from working memory. Also\n"
		"  prints the average match time.\n"
		"* Working Memory Size --- This gives the current, mean and maximum number of\n"
		"  working memory elements.\n"
		"\n"
		"The stats argument --memory provides information about memory usage and Soar's\n"
		"memory pools, which are used to allocate space for the various data structures\n"
		"used in Soar.\n"
		"The stats argument --rete provides information about node usage in the Rete\n"
		"net, the large data structure used for efficient matching in Soar.\n"
		"The --max argument reports per-cycle maximum statistics for decision cycle\n"
		"time, working memory changes, and production fires. For example, if Soar runs\n"
		"for three cycles and there were 23 working memory changes in the first cycle,\n"
		"42 in the second, and 15 in the third, the --max argument would report the\n"
		"highest of these values (42) and what decision cycle that it occurred in (2nd).\n"
		"Statistics about the time spent executing the decision cycle and number of\n"
		"productions fired are also collected and reported by --max in this manner. --\n"
		"reset zeros out these statistics so that new maximums can be recorded for\n"
		"future runs. The numbers are also zeroed out with a call to init-soar.\n"
		"The --track argument starts tracking the same stats as the --max argument but\n"
		"records all data for each cycle instead of the maximum values. This data can be\n"
		"printed using the --cycle or --cycle-csv arguments. When printing the data with\n"
		"--cycle, it may be sorted using the --sort argument and a column integer. Use\n"
		"negative numbers for descending sort. Issue --stop-track to reset and clear\n"
		"this data.\n"
		"\n"
		"A Note on Timers\n"
		"\n"
		"The current implementation of Soar uses a number of timers to provide time-\n"
		"based statistics for use in the stats command calculations. These timers are:\n"
		"\n"
		"* total CPU time\n"
		"* total kernel time\n"
		"* phase kernel time (per phase)\n"
		"* phase callbacks time (per phase)\n"
		"* input function time\n"
		"* output function time\n"
		"\n"
		"Total CPU time is calculated from the time a decision cycle (or number of\n"
		"decision cycles) is initiated until stopped. Kernel time is the time spent in\n"
		"core Soar functions. In this case, kernel time is defined as the all functions\n"
		"other than the execution of callbacks and the input and output functions. The\n"
		"total kernel timer is only stopped for these functions. The phase timers (for\n"
		"the kernel and callbacks) track the execution time for individual phases of the\n"
		"decision cycle (i.e., input phase, preference phase, working memory phase,\n"
		"output phase, and decision phase). Because there is overhead associated with\n"
		"turning these timers on and off, the actual kernel time will always be greater\n"
		"than the derived kernel time (i.e., the sum of all the phase kernel timers).\n"
		"Similarly, the total CPU time will always be greater than the derived total\n"
		"(the sum of the other timers) because the overhead of turning these timers on\n"
		"and off is included in the total CPU time. In general, the times reported by\n"
		"the single timers should always be greater than than the corresponding derived\n"
		"time. Additionally, as execution time increases, the difference between these\n"
		"two values will also increase. For those concerned about the performance cost\n"
		"of the timers, all the run time timing calculations can be compiled out of the\n"
		"code by defining NO_TIMING_STUFF (in kernel.h) before compilation.\n"
		"\n"
		"Examples\n"
		"\n"
		"Track per-cycle stats then print them out using default sort:\n"
		"\n"
		"  stats --track\n"
		"  run\n"
		"  stop\n"
		"  stats --cycle\n"
		"\n"
		"Print out per-cycle stats sorting by decision cycle time\n"
		"\n"
		"  stats --cycle --sort 2\n"
		"\n"
		"Print out per-cycle stats sorting by firing counts, descending\n"
		"\n"
		"  stats --cycle --sort -4\n"
		"\n"
		"Save per-cycle stats to file stats.csv\n"
		"\n"
		"  ctf stats.csv stats --cycle-csv\n"
		"\n"
		"See Also\n"
		"\n"
		"timers init-soar command-to-file\n"
	;
	docstrings["stop-soar"] = 
		"Pause Soar.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  stop-soar [-s] [reason string]\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* interrupt\n"
		"* ss\n"
		"* stop\n"
		"\n"
		"Options\n"
		"\n"
		"Option        Description\n"
		"-s, --self    Stop only the soar agent where the command is issued. All other\n"
		"              agents continue running as previously specified.\n"
		"              An optional string which will be printed when Soar is stopped, to\n"
		"reason_string indicate why it was stopped. If left blank, no message will be\n"
		"              printed when Soar is stopped.\n"
		"\n"
		"Description\n"
		"\n"
		"The stop-soar command stops any running Soar agents. It sets a flag in the Soar\n"
		"kernel so that Soar will stop running at a \"safe\" point and return control to\n"
		"the user. This command is usually not issued at the command line prompt - a\n"
		"more common use of this command would be, for instance, as a side-effect of\n"
		"pressing a button on a Graphical User Interface (GUI).\n"
		"\n"
		"See Also\n"
		"\n"
		"run\n"
		"\n"
		"Warnings\n"
		"\n"
		"If the graphical interface doesn't periodically do an \"update\" of flush the\n"
		"pending I/O, then it may not be possible to interrupt a Soar agent from the\n"
		"command line.\n"
	;
	docstrings["svs"] = 
		"Control the behavior of the Spatial Visual System\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  svs <path> dir\n"
		"  svs <path> help\n"
		"  svs connect_viewer <port>\n"
		"  svs disconnect_viewer\n"
		"  svs filters\n"
		"  svs filters.<filter_name>\n"
		"  svs commands\n"
		"  svs commands.<command_name>\n"
		"  svs <state>.scene.world\n"
		"  svs <state>.scene.world.<path-to-node>\n"
		"  svs <state>.scene.properties\n"
		"  svs <state>.scene.sgel <sgel-command>\n"
		"  svs <state>.scene.draw on|off\n"
		"  svs <state>.scene.clear\n"
		"\n"
		"Paths\n"
		"\n"
		"SVS can be navigated by specifying a path after the svs command. This path\n"
		"mimicks a directory structure and is specified by dot notation.\n"
		"\n"
		"Path                      Argument Description\n"
		"connect_viewer            <port>   Connects to a svs_viewer listening on the\n"
		"                                   given port\n"
		"disconnect_viewer                  Disconnects from an active svs_viewer\n"
		"filters                            Prints out a list of all the filters\n"
		"filters.<filter_name>              Prints information about a specific filter\n"
		"commands                           Prints out a list of all the soar commands\n"
		"commands.<command_name>            Prints information about a specific command\n"
		"<state>.scene.world                Prints information about the world\n"
		"<state>.scene.<node-path>          Prints information about a specific node\n"
		"<state>.scene.properties           Prints pos/rot/scale/tag info about all\n"
		"                                   nodes\n"
		"<state>.scene.sgel        <sgel>   Sends an sgel command to the scene\n"
		"<state>.scene.draw        on       Causes this scene to be the one drawn on the\n"
		"                                   viewer\n"
		"<state>.scene.draw        off      Stops this scene from being drawn in the\n"
		"                                   viewer\n"
		"<state>.scene.clear                Removes all objects from the given scene\n"
		"\n"
		"Description\n"
		"\n"
		"Each path can be followed by help to print some help info, or followed by dir\n"
		"to see the children of that path. The <state> variable is the identifier for\n"
		"the substate you want to examine. For example, to do things to the topstate\n"
		"scene you would use svs S1.scene.\n"
		"\n"
		"Examples\n"
		"\n"
		"Print the full SVS directory structure\n"
		"\n"
		"  svs . dir\n"
		"\n"
		"Print help information about connect_viewer\n"
		"\n"
		"  svs connect_viewer help\n"
		"\n"
		"Print information about a distance filter\n"
		"\n"
		"  svs filters.distance\n"
		"\n"
		"Print all the nodes in the scene for substate S17\n"
		"\n"
		"  svs S17.scene.world dir\n"
		"\n"
		"Print information about the node wheel2 on car5\n"
		"\n"
		"  svs S1.scene.world.car5.wheel2\n"
		"\n"
		"Add a new node to the scene using SGEL\n"
		"\n"
		"  svs S1.scene.sgel add ball3 world ball .5 position 1 1 1\n"
	;
	docstrings["time"] = 
		"Use a default system clock timer to record the wall time required while\n"
		"executing a command.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  time command [arguments]\n"
		"\n"
		"Options\n"
		"\n"
		"Option    Description\n"
		"command   The command to execute.\n"
		"arguments Optional command arguments.\n"
	;
	docstrings["timers"] = 
		"Toggle on or off the internal timers used to profile Soar.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  timers [options]\n"
		"\n"
		"Options\n"
		"\n"
		"Option               Description\n"
		"-d, --disable, --off Disable all timers.\n"
		"-e, --enable, --on   Enable timers as compiled.\n"
		"\n"
		"Description\n"
		"\n"
		"This command is used to control the timers that collect internal profiling\n"
		"information while Soar is running. With no arguments, this command prints out\n"
		"the current timer status. Timers are ENABLED by default. The default\n"
		"compilation flags for soar enable the basic timers and disable the detailed\n"
		"timers. The timers command can only enable or disable timers that have already\n"
		"been enabled with compiler directives. See the stats command for more info on\n"
		"the Soar timing system.\n"
		"\n"
		"See Also\n"
		"\n"
		"stats\n"
	;
	docstrings["unalias"] = 
		"Undefine an existing alias\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  unalias name\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* un\n"
		"\n"
		"Description\n"
		"\n"
		"This command undefines a previously created alias. This command takes exactly\n"
		"one argument: the name of the alias to remove. Use the alias command by itself\n"
		"to list all defined aliases.\n"
		"\n"
		"Examples\n"
		"\n"
		"  unalias varprint\n"
		"\n"
		"See Also\n"
		"\n"
		"alias\n"
	;
	docstrings["verbose"] = 
		"Control detailed information printed as Soar runs.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  verbose [-ed]\n"
		"\n"
		"Options\n"
		"\n"
		"Option               Description\n"
		"-d, --disable, --off Turn verbosity off. (default)\n"
		"-e, --enable, --on   Turn verbosity on.\n"
		"\n"
		"Description\n"
		"\n"
		"The verbose command enables tracing of a number of low-level Soar execution\n"
		"details during a run. The details printed by verbose are usually only valuable\n"
		"to developers debugging Soar implementation details. Invoke with no arguments\n"
		"to query the current setting.\n"
		"\n"
		"See Also\n"
		"\n"
		"watch\n"
	;
	docstrings["version"] = 
		"Returns the version number of the Soar kernel.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  version\n"
		"\n"
		"Description\n"
		"\n"
		"This command gives version information about the current Soar kernel. It\n"
		"returns the version number and build date which can then be stored by the agent\n"
		"or the application.\n"
	;
	docstrings["visualize"] = 
		"Creates visualizations of Soar's memory systems or processing.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  visualize\n"
		"\n"
		"  ### Options\n"
		"\n"
		"  | **Option** | **Description** |\n"
		"  |:-----------|:----------------|\n"
		"  | `-e, --enable, --on` | Enable semantic memory. |\n"
		"  | `-d, --disable, --off` | Disable semantic memory. |\n"
		"  | `-g, --get` | Print current parameter setting |\n"
		"  | `-s, --set` | Set parameter value |\n"
		"  | `-i, --init` | Reinitialize ALL memories |\n"
		"  | `-S, --stats` | Print statistic summary or specific statistic |\n"
		"  | `-t, --timers` | Print timer summary or specific statistic |\n"
		"  | `-a, --add` | Add concepts to semantic memory |\n"
		"  | `-r, --remove`| Remove concepts from semantic memory|\n"
		"  | `-q, --query`| Print concepts in semantic store matching some cue|\n"
		"  | `-h, --history`| Print activation history for some LTI|\n"
		"  | `-v, --viz` | Print semantic store in graphviz format |\n"
		"  | `-b, --backup` | Creates a backup of the semantic database on disk |\n"
		"\n"
		"  ### Description\n"
		"\n"
		"  The `smem` command changes the behavior of and displays information\n"
		"  about semantic memory.  The command `watch --smem` displays additional\n"
		"  trace information for semantic memory not controlled by this command.\n"
		"\n"
		"  #### Printing\n"
		"\n"
		"  To print from semantic memory, the standard print command can be used,\n"
		"  for example, to print a specific LTI:\n"
		"  `p @23`\n"
		"  To print the entire semantic store:\n"
		"  `p @`\n"
		"  Note that such print commands will honor the --depth parameter passed in.\n"
		"\n"
		"  ### See Also\n"
		"\n"
		"  [explain](_explain)\n"
	;
	docstrings["waitsnc"] = 
		"Generate a wait state rather than a state-no-change impasse.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  wait -[e|d]\n"
		"\n"
		"Options\n"
		"\n"
		"Option               Description\n"
		"-e, --enable, --on   Turns a state-no-change into a wait state.\n"
		"-d, --disable, --off Default. A state-no-change generates an impasse.\n"
		"\n"
		"Description\n"
		"\n"
		"In some systems, espcially those that model expert (fully chunked) knowledge, a\n"
		"state-no-change may represent a wait state rather than an impasse. The waitsnc\n"
		"command allows the user to switch to a mode where a state-no-change that would\n"
		"normally generate an impasse (and subgoaling), instead generates a wait state.\n"
		"At a wait state, the decision cycle will repeat (and the decision cycle count\n"
		"is incremented) but no state-no-change impasse (and therefore no substate) will\n"
		"be generated.\n"
		"When issued with no arguments, waitsnc returns its current setting.\n"
	;
	docstrings["warnings"] = 
		"Enable or disable the printing of warning messages from the Soar kernel.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  warnings [options]\n"
		"\n"
		"Options\n"
		"\n"
		"Option               Description\n"
		"-e, --enable, --on   Default. Print all warning messages from the kernel.\n"
		"-d, --disable, --off Disable all, except most critical, warning messages.\n"
		"\n"
		"Description\n"
		"\n"
		"Enables and disables the printing of warning messages. If an argument is\n"
		"specified, then the warnings are set to that state. If no argument is given,\n"
		"then the current warnings status is printed. At startup, warnings are initially\n"
		"enabled. If warnings are disabled using this command, then some warnings may\n"
		"still be printed, since some are considered too important to ignore.\n"
		"The warnings that are printed apply to the syntax of the productions, to notify\n"
		"the user when they are not in the correct syntax. When a lefthand side error is\n"
		"discovered (such as conditions that are not linked to a common state or impasse\n"
		"object), the production is generally loaded into production memory anyway,\n"
		"although this production may never match or may seriously slow down the\n"
		"matching process. In this case, a warning would be printed only if warnings\n"
		"were --on. Righthand side errors, such as preferences that are not linked to\n"
		"the state, usually result in the production not being loaded, and a warning\n"
		"regardless of the warnings setting.\n"
	;
	docstrings["watch"] = 
		"Control the run-time tracing of Soar.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  watch [options]\n"
		"  watch level\n"
		"\n"
		"Default Aliases\n"
		"\n"
		"* w\n"
		"\n"
		"Options\n"
		"\n"
		"When appropriate, a specific option may be turned off using the remove\n"
		"argument. This argument has a numeric alias; you can use 0 for remove. A mix of\n"
		"formats is acceptable, even in the same command line.\n"
		"\n"
		"Basic Watch Settings\n"
		"\n"
		"Option Flag       Argument to Option       Description\n"
		"                                           This flag is optional but\n"
		"                  0 to 5 (see Watch Levels recommended. Set a specific\n"
		"-l, --level       below)                   watch level using an integer 0\n"
		"                                           to 5, this is an inclusive\n"
		"                                           operation\n"
		"                                           Turns off all printing about\n"
		"-N, --none        No argument              Soar's internals, equivalent to\n"
		"                                           --level 0\n"
		"                                           Controls whether state and\n"
		"-d, --decisions   remove (optional)        operator decisions are printed\n"
		"                                           as they are made\n"
		"                                           Controls whether decisions\n"
		"-p, --phases      remove (optional)        cycle phase names are printed\n"
		"                                           as Soar executes\n"
		"-g, --gds         remove (optional)        Controls printing of warnings\n"
		"                                           about wme changes to GDS\n"
		"                                           Controls whether the names of\n"
		"-P, --productions remove (optional)        productions are printed as they\n"
		"                                           fire and retract, equivalent to\n"
		"                                           -Dujc\n"
		"                                           Controls the printing of\n"
		"                                           working memory elements that\n"
		"-w, --wmes        remove (optional)        are added and deleted as\n"
		"                                           productions are fired and\n"
		"                                           retracted.\n"
		"                                           Controls whether the\n"
		"                                           preferences generated by the\n"
		"-r, --preferences remove (optional)        traced productions are printed\n"
		"                                           when those productions fire or\n"
		"                                           retract\n"
		"\n"
		"Watch Levels\n"
		"\n"
		"Use of the --level (-l) flag is optional but recommended.\n"
		"\n"
		"Option Description\n"
		"0      watch nothing; equivalent to -N\n"
		"1      watch decisions; equivalent to -d\n"
		"2      watch phases, gds, and decisions; equivalent to -dpg\n"
		"3      watch productions, phases, and decisions; equivalent to -dpgP\n"
		"4      watch wmes, productions, phases, and decisions; equivalent to -dpgPw\n"
		"5      watch preferences, wmes, productions, phases, and decisions; equivalent\n"
		"       to -dpgPwr\n"
		"\n"
		"It is important to note that watch level 0 turns off ALL watch options,\n"
		"including backtracing, indifferent selection and learning. However, the other\n"
		"watch levels do not change these settings. That is, if any of these settings is\n"
		"changed from its default, it will retain its new setting until it is either\n"
		"explicitly changed again or the watch level is set to 0.\n"
		"\n"
		"Watching Productions\n"
		"\n"
		"By default, the names of the productions are printed as each production fires\n"
		"and retracts (at watch levels 3 and higher). However, it may be more helpful to\n"
		"watch only a specific type of production. The tracing of firings and\n"
		"retractions of productions can be limited to only certain types by the use of\n"
		"the following flags:\n"
		"\n"
		"Option Flag          Argument to Option Description\n"
		"-D, --default        remove (optional)  Control only default-productions as\n"
		"                                        they fire and retract\n"
		"-u, --user           remove (optional)  Control only user-productions as they\n"
		"                                        fire and retract\n"
		"-c, --chunks         remove (optional)  Control only chunks as they fire and\n"
		"                                        retract\n"
		"-j, --justifications remove (optional)  Control only justifications as they\n"
		"                                        fire and retract\n"
		"-T, --template       remote (optional)  Soar-RL template firing trace\n"
		"\n"
		"Note: The pwatch command is used to watch individual productions specified by\n"
		"name rather than watch a type of productions, such as --user.\n"
		"Additionally, when watching productions, users may set the level of detail to\n"
		"be displayed for WMEs that are added or retracted as productions fire and\n"
		"retract. Note that detailed information about WMEs will be printed only for\n"
		"productions that are being watched.\n"
		"\n"
		"Option Flag    Description\n"
		"-n, --nowmes   When watching productions, do not print any information about\n"
		"               matching wmes\n"
		"-t, --timetags When watching productions, print only the timetags for matching\n"
		"               wmes\n"
		"-f, --fullwmes When watching productions, print the full matching wmes\n"
		"\n"
		"Watching Learning\n"
		"\n"
		"Option Flag    Argument to Option            Description\n"
		"               noprint, print, or fullprint  Controls the printing of chunks/\n"
		"-L, --learning (see table below)             justifications as they are\n"
		"                                             created\n"
		"\n"
		"As Soar is running, it may create justifications and chunks which are added to\n"
		"production memory. The watch command allows users to monitor when chunks and\n"
		"justifications are created by specifying one of the following arguments to the\n"
		"--learning command:\n"
		"\n"
		"Argument  Alias Effect\n"
		"noprint   0     Print nothing about new chunks or justifications (default)\n"
		"print     1     Print the names of new chunks and justifications when created\n"
		"fullprint 2     Print entire chunks and justifications when created\n"
		"\n"
		"Watching other Functions\n"
		"\n"
		"Option Flag                 Argument to Option Description\n"
		"-a, --wma                   remove (optional)  Print log of working memory\n"
		"                                               activation events\n"
		"                                               Print backtracing information\n"
		"-b, --backtracing           remove (optional)  when a chunk or justification is\n"
		"                                               created\n"
		"                                               Print episodic retrieval traces\n"
		"-e, --epmem                 remove (optional)  and IDs of newly encoded\n"
		"                                               episodes\n"
		"                                               Print scores for tied operators\n"
		"-i, --indifferent-selection remove (optional)  in random indifferent selection\n"
		"                                               mode\n"
		"-R, --rl                    remove (optional)  Print RL debugging output\n"
		"-s, --smem                  remove (optional)  Print log of semantic memory\n"
		"                                               storage events\n"
		"\n"
		"Description\n"
		"\n"
		"The watch command controls the amount of information that is printed out as\n"
		"Soar runs. The basic functionality of this command is to trace various levels\n"
		"of information about Soar's internal workings. The higher the level, the more\n"
		"information is printed as Soar runs. At the lowest setting, 0 (--none), nothing\n"
		"is printed. The levels are cumulative, so that each successive level prints the\n"
		"information from the previous level as well as some additional information. The\n"
		"default setting for the level is 1, (--decisions).\n"
		"The numerical arguments inclusively turn on all levels up to the number\n"
		"specified. To use numerical arguments to turn off a level, specify a number\n"
		"which is less than the level to be turned off. For instance, to turn off\n"
		"watching of productions, specify --level 2 (or 1 or 0). Numerical arguments are\n"
		"provided for shorthand convenience. For more detailed control over the watch\n"
		"settings, the named arguments should be used.\n"
		"With no arguments, this command prints information about the current watch\n"
		"status, i.e., the values of each parameter.\n"
		"For the named arguments, including the named argument turns on only that\n"
		"setting. To turn off a specific setting, follow the named argument with remove\n"
		"or 0.\n"
		"The named argument --productions is shorthand for the four arguments --default,\n"
		"--user, --justifications, and --chunks.\n"
		"\n"
		"Examples\n"
		"\n"
		"The most common uses of watch are by using the numeric arguments which indicate\n"
		"watch levels. To turn off all printing of Soar internals, do any one of the\n"
		"following (not all possibilities listed):\n"
		"\n"
		"  watch --level 0\n"
		"  watch -l 0\n"
		"  watch -N\n"
		"\n"
		"Although the --level flag is optional, its use is recommended:\n"
		"\n"
		"  watch --level 5   ## OK\n"
		"  watch 5           ## OK, avoid\n"
		"\n"
		"Be careful of where the level is on the command line, for example, if you want\n"
		"level 2 and preferences:\n"
		"\n"
		"  watch -r -l 2 ## Incorrect: -r flag ignored, level 2 parsed after it and\n"
		"  overrides the setting\n"
		"  watch -r 2    ## Syntax error: 0 or remove expected as optional argument to -\n"
		"  r\n"
		"  watch -r -l 2 ## Incorrect: -r flag ignored, level 2 parsed after it and\n"
		"  overrides the setting\n"
		"  watch 2 -r    ## OK, avoid\n"
		"  watch -l 2 -r ## OK\n"
		"\n"
		"To turn on printing of decisions, phases and productions, do any one of the\n"
		"following (not all possibilities listed):\n"
		"\n"
		"  watch --level 3\n"
		"  watch -l 3\n"
		"  watch --decisions --phases --productions\n"
		"  watch -d -p -P\n"
		"\n"
		"Individual options can be changed as well. To turn on printing of decisions and\n"
		"wmes, but not phases and productions, do any one of the following (not all\n"
		"possibilities listed):\n"
		"\n"
		"  watch --level 1 --wmes\n"
		"  watch -l 1 -w\n"
		"  watch --decisions --wmes\n"
		"  watch -d --wmes\n"
		"  watch -w --decisions\n"
		"  watch -w -d\n"
		"\n"
		"To turn on printing of decisions, productions and wmes, and turns phases off,\n"
		"do any one of the following (not all possibilities listed):\n"
		"\n"
		"  watch --level 4 --phases remove\n"
		"  watch -l 4 -p remove\n"
		"  watch -l 4 -p 0\n"
		"  watch -d -P -w -p remove\n"
		"\n"
		"To watch the firing and retraction of decisions and only user productions, do\n"
		"any one of the following (not all possibilities listed):\n"
		"\n"
		"  watch -l 1 -u\n"
		"  watch -d -u\n"
		"\n"
		"To watch decisions, phases and all productions except user productions and\n"
		"justifications, and to see full wmes, do any one of the following (not all\n"
		"possibilities listed):\n"
		"\n"
		"  watch --decisions --phases --productions --user remove --justifications\n"
		"  remove --fullwmes\n"
		"  watch -d -p -P -f -u remove -j 0\n"
		"  watch -f -l 3 -u 0 -j 0\n"
		"\n"
		"See Also\n"
		"\n"
		"epmem pwatch print run watch-wmes\n"
	;
	docstrings["watch-wmes"] = 
		"Print information about wmes matching a certain pattern as they are added and\n"
		"removed.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  watch-wmes -[a|r]  -t type  pattern\n"
		"  watch-wmes -[l|R] [-t type]\n"
		"\n"
		"Options\n"
		"\n"
		"Option              Description\n"
		"-a, --add-filter    Add a filter to print wmes that meet the type and pattern\n"
		"                    criteria.\n"
		"-r, --remove-filter Delete filters for printing wmes that match the type and\n"
		"                    pattern criteria.\n"
		"-l, --list-filter   List the filters of this type currently in use. Does not\n"
		"                    use the pattern argument.\n"
		"-R, --reset-filter  Delete all filters of this type. Does not use pattern arg.\n"
		"-t, --type          Follow with a type of wme filter, see below.\n"
		"\n"
		"Pattern\n"
		"\n"
		"The pattern is an id-attribute-value triplet:\n"
		"\n"
		"  id attribute value\n"
		"\n"
		"Note that * can be used in place of the id, attribute or value as a wildcard\n"
		"that maches any string. Note that braces are not used anymore.\n"
		"\n"
		"Types\n"
		"\n"
		"When using the -t flag, it must be followed by one of the following:\n"
		"\n"
		"Option  Description\n"
		"adds    Print info when a wme is added.\n"
		"removes Print info when a wme is retracted.\n"
		"both    Print info when a wme is added or retracted.\n"
		"\n"
		"When issuing a -R or -l, the -t flag is optional. Its absence is equivalent to\n"
		"-t both.\n"
		"\n"
		"Description\n"
		"\n"
		"This commands allows users to improve state tracing by issuing filter-options\n"
		"that are applied when watching wmes. Users can selectively define which object-\n"
		"attribute-value triplets are monitored and whether they are monitored for\n"
		"addition, removal or both, as they go in and out of working memory.\n"
		"Note: The functionality of watch-wmes resided in the watch command prior to\n"
		"Soar 8.6.\n"
		"\n"
		"Examples\n"
		"\n"
		"Users can watch an attribute of a particular object (as long as that object\n"
		"already exists):\n"
		"\n"
		"  soar> watch-wmes --add-filter -t both D1 speed *\n"
		"\n"
		"or print WMEs that retract in a specific state (provided the state already\n"
		"exists):\n"
		"\n"
		"  soar> watch-wmes --add-filter -t removes S3 * *\n"
		"\n"
		"or watch any relationship between objects:\n"
		"\n"
		"  soar> watch-wmes --add-filter -t both * ontop *\n"
	;
	docstrings["wma"] = 
		"Control the behavior of working memory activation.\n"
		"\n"
		"Synopsis\n"
		"\n"
		"  wma\n"
		"  wma -g|--get <parameter>\n"
		"  wma -s|--set <parameter> <value>\n"
		"  wma -S|--stats [<statistic>]\n"
		"  wma -t|--timers [<timer>]\n"
		"  wma -h|--history <timetag>\n"
		"\n"
		"Options\n"
		"\n"
		"Option        Description\n"
		"-g, --get     Print current parameter setting\n"
		"-s, --set     Set parameter value\n"
		"-S, --stats   Print statistic summary or specific statistic\n"
		"-t, --timers  Print timer summary or specific timer\n"
		"-h, --history Print reference history of a WME\n"
		"\n"
		"Description\n"
		"\n"
		"The wma command changes the behavior of and displays information about working\n"
		"memory activation.\n"
		"To get the activation of individual WMEs, use print -i. To get the reference\n"
		"history of an individual WME, use wma -h|--history<timetag>. For example:\n"
		"\n"
		"  print --internal s1\n"
		"  (4000016: S1 ^ct 1000000 [3.6])\n"
		"  (4: S1 ^epmem E1 [1])\n"
		"  (11: S1 ^io I1 [1])\n"
		"  (20: S1 ^max 1000000 [3.4])\n"
		"  (18: S1 ^name ct [3.4])\n"
		"  (4000018: S1 ^operator O1000001 [1] +)\n"
		"  (4000019: S1 ^operator O1000001 [1])\n"
		"  (3: S1 ^reward-link R1 [1])\n"
		"  (8: S1 ^smem S2 [1])\n"
		"  (2: S1 ^superstate nil [1])\n"
		"  (14: S1 ^top-state S1 [1])\n"
		"  (1: S1 ^type state [1])\n"
		"\n"
		"The bracketed values are activation. To get the history of an individual\n"
		"element:\n"
		"\n"
		"  wma --history 18\n"
		"  history (60/5999999, first @ d1):\n"
		"   6 @ d1000000 (-1)\n"
		"   6 @ d999999 (-2)\n"
		"   6 @ d999998 (-3)\n"
		"   6 @ d999997 (-4)\n"
		"   6 @ d999996 (-5)\n"
		"   6 @ d999995 (-6)\n"
		"   6 @ d999994 (-7)\n"
		"   6 @ d999993 (-8)\n"
		"   6 @ d999992 (-9)\n"
		"   6 @ d999991 (-10)\n"
		"\n"
		"  considering WME for decay @ d1019615\n"
		"\n"
		"This shows the last 60 references (of 5999999 in total, where the first\n"
		"occurred at decision cycle 1). For each reference, it says how many references\n"
		"occurred in the cycle (such as 6 at decision 1000000, which was one cycle ago\n"
		"at the time of executing this command). Note that references during the current\n"
		"cycle will not be reflected in this command (or computed activation value)\n"
		"until the end of output phase. If forgetting is on, this command will also\n"
		"display the cycle during which the WME will be considered for decay. Even if\n"
		"the WME is not referenced until then, this is not necessarily the cycle at\n"
		"which the WME will be forgotten. However, it is guaranteed that the WME will\n"
		"not be forgotten before this cycle.\n"
		"\n"
		"Parameters\n"
		"\n"
		"The wma command uses the --get|--set <parameter> <value> convention rather than\n"
		"individual switches for each parameter. Running wma without any switches\n"
		"displays a summary of the parameter settings.\n"
		"\n"
		"Parameter     Description                               Possible values Default\n"
		"activation    Enable working memory activation          on, off         off\n"
		"decay-rate    WME decay factor                          [0, 1]          0.5\n"
		"decay-thresh  Forgetting threshold                      (0, inf)        2.0\n"
		"forgetting    Enable removal of WMEs with low           on, off         off\n"
		"              activation values\n"
		"forget-wme    If lti only remove WMEs with a long-term  all, lti        all\n"
		"              id\n"
		"max-pow-cache Maximum size, in MB, for the internal pow 1, 2, ...       10\n"
		"              cache\n"
		"petrov-approx Enables the (Petrov 2006) long-tail       on, off         off\n"
		"              approximation\n"
		"timers        Timer granularity                         off, one        off\n"
		"\n"
		"The decay-rate and decay-thresh parameters are entered as positive decimals,\n"
		"but are internally converted to, and printed out as, negative.\n"
		"The petrov-approx may provide additional validity to the activation value, but\n"
		"comes at a significant computational cost, as the model includes unbounded\n"
		"positive exponential computations, which cannot be reasonably cached.\n"
		"When activation is enabled, the system produces a cache of results of calls to\n"
		"the pow function, as these can be expensive during runtime. The size of the\n"
		"cache is based upon three run-time parameters (decay-rate, decay-thresh, and\n"
		"max-pow-cache), and one compile time parameter, WMA_REFERENCES_PER_DECISION\n"
		"(default value of 50), which estimates the maximum number of times a WME will\n"
		"be referenced during a decision. The cache is composed of double variables\n"
		"(i.e. 64-bits, currently) and the number of cache items is computed as follows:\n"
		"e^((decay_thresh - ln(max_refs)) / decay_rate)\n"
		"With the current default parameter values, this will incur about 1.04MB of\n"
		"memory. Holding the decay-rate constant, reasonable changes to decay-thresh\n"
		"(i.e. +/- 5) does not greatly change this value. However, small changes to\n"
		"decay-rate will dramatically change this profile. For instance, keeping\n"
		"everything else constant, a decay-thresh of 0.3 requires ~2.7GB and 0.2\n"
		"requires ~50TB. Thus, the max-pow-cache parameter serves to allow you to\n"
		"control the space vs. time tradeoff by capping the maximum amount of memory\n"
		"used by this cache. If max-pow-cache is much smaller than the result of the\n"
		"equation above, you may experience somewhat degraded performance due to\n"
		"relatively frequent system calls to pow.\n"
		"If forget-wme is lti and forgetting is on, only those WMEs whose id is a long-\n"
		"term identifier at the decision of forgetting will be removed from working\n"
		"memory. If, for instance, the id is stored to semantic memory after the\n"
		"decision of forgetting, the WME will not be removed till some time after the\n"
		"next WME reference (such as testing/creation by a rule).\n"
		"\n"
		"Statistics\n"
		"\n"
		"Working memory activation tracks statistics over the lifetime of the agent.\n"
		"These can be accessed using wma --stats <statistic>. Running wma --stats\n"
		"without a statistic will list the values of all statistics. Unlike timers,\n"
		"statistics will always be updated. Available statistics are:\n"
		"\n"
		"Name           Label          Description\n"
		"forgotten-wmes Forgotten WMEs Number of WMEs removed from working memory due to\n"
		"                              forgetting\n"
		"\n"
		"Timers\n"
		"\n"
		"Working memory activation also has a set of internal timers that record the\n"
		"durations of certain operations. Because fine-grained timing can incur runtime\n"
		"costs, working memory activation timers are off by default. Timers of different\n"
		"levels of detail can be turned on by issuing wma --set timers <level>, where\n"
		"the levels can be off or one, one being most detailed and resulting in all\n"
		"timers being turned on. Note that none of the working memory activation\n"
		"statistics nor timing information is reported by the stats command.\n"
		"All timer values are reported in seconds.\n"
		"Level one\n"
		"\n"
		"Option         Description\n"
		"wma_forgetting Time to process forgetting operations each cycle\n"
		"wma_history    Time to consolidate reference histories each cycle\n"
		"\n"
		"See Also\n"
		"\n"
		"print\n"
	;
}
